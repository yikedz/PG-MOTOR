

HI-TECH Software LITE Macro Assembler (PIC18) V9.66 build 8870 
                                                       Thu May 30 00:30:48 2013

HI-TECH Software Omniscient Code Generator build 8870
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 8870"
     2                           
     3                           	processor	18F25K22
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           # 19 "../main.c"
   102                           	global __config1 ;#
   103                           # 19 "../main.c"
   104  000000                     	__config1 equ 0xF9FF & 0xEFFF & 0xFFFF & 0xFFFF
                                  & 0xFFFF ;#
   105                           # 21 "../main.c"
   106                           	global __config2 ;#
   107                           # 21 "../main.c"
   108  000000                     	__config2 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   109                           # 23 "../main.c"
   110                           	global __config3 ;#
   111                           # 23 "../main.c"
   112  000000                     	__config3 equ 0xFFFF & 0xFFFF ;#
   113                           # 25 "../main.c"
   114                           	global __config4 ;#
   115                           # 25 "../main.c"
   116  000000                     	__config4 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  & 0xFFFF & 0xFFFF & 0xFFFF ;#
   117                           # 27 "../main.c"
   118                           	global __config5 ;#
   119                           # 27 "../main.c"
   120  000000                     	__config5 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   121                           # 29 "../main.c"
   122                           	global __config6 ;#
   123                           # 29 "../main.c"
   124  000000                     	__config6 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  ;#
   125                           # 31 "../main.c"
   126                           	global __config7 ;#
   127                           # 31 "../main.c"
   128  000000                     	__config7 equ 0xFFFF & 0xFFFF ;#
   129                           # 33 "../main.c"
   130                           	global __config8 ;#
   131                           # 33 "../main.c"
   132  000000                     	__config8 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  ;#
   133                           # 35 "../main.c"
   134                           	global __config9 ;#
   135                           # 35 "../main.c"
   136  000000                     	__config9 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   137                           # 37 "../main.c"
   138                           	global __config10 ;#
   139                           # 37 "../main.c"
   140  000000                     	__config10 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFF
                                 F ;#
   141                           # 39 "../main.c"
   142                           	global __config11 ;#
   143                           # 39 "../main.c"
   144  000000                     	__config11 equ 0xFFFF ;#
   145                           	GLOBAL	__activetblptr
   146  000000                     __activetblptr	EQU	2
   147                           	GLOBAL	__smallconst,__Lsmallconst
   148  000000                     __smallconst	EQU	__Lsmallconst
   149                           	GLOBAL	__mediumconst,__Lmediumconst
   150  000000                     __mediumconst	EQU	__Lmediumconst
   151                           	GLOBAL	__Ldata
   152  000000                     __Ldata	EQU	310
   153  000000                     read_holding_regs@i	equ	??_read_holding_regs+0
   154                           	global	read_holding_regs@i
   155  000000                     read_holding_regs@start_addr	equ	??_read_holding
                                 _regs+1
   156                           	global	read_holding_regs@start_addr
   157  000000                     read_holding_regs@data_crc	equ	??_read_holding_r
                                 egs+3
   158                           	global	read_holding_regs@data_crc
   159  000000                     read_holding_regs@num	equ	??_read_holding_regs+5
   160                           	global	read_holding_regs@num
   161  000000                     write_single_holding_reg@i	equ	??_write_single_h
                                 olding_reg+0
   162                           	global	write_single_holding_reg@i
   163  000000                     write_single_holding_reg@start_addr	equ	??_write
                                 _single_holding_reg+1
   164                           	global	write_single_holding_reg@start_addr
   165  000000                     modbus_crc16@ucCRCHi	equ	??_modbus_crc16+0
   166                           	global	modbus_crc16@ucCRCHi
   167  000000                     modbus_crc16@ucCRCLo	equ	??_modbus_crc16+1
   168                           	global	modbus_crc16@ucCRCLo
   169  000000                     modbus_crc16@iIndex	equ	??_modbus_crc16+2
   170                           	global	modbus_crc16@iIndex
   171  000000                     modbus_crc16@pucFrame	equ	?_modbus_crc16+0
   172                           	global	modbus_crc16@pucFrame
   173  000000                     modbus_crc16@usLen	equ	?_modbus_crc16+2
   174                           	global	modbus_crc16@usLen
   175  000000                     rec_isr@rec_data	equ	??_rec_isr+0
   176                           	global	rec_isr@rec_data
   177  000000                     ___aldiv@counter	equ	??___aldiv+0
   178                           	global	___aldiv@counter
   179  000000                     ___aldiv@sign	equ	??___aldiv+1
   180                           	global	___aldiv@sign
   181  000000                     ___aldiv@quotient	equ	??___aldiv+2
   182                           	global	___aldiv@quotient
   183  000000                     ___aldiv@dividend	equ	?___aldiv+0
   184                           	global	___aldiv@dividend
   185  000000                     ___aldiv@divisor	equ	?___aldiv+4
   186                           	global	___aldiv@divisor
   187                           ;Data sizes: Strings 0, constant 512, data 1, bs
                                 s 0, persistent 0 stack 54
   188                           	global	_main
   189                           	global	??_main
   190                           	global	?_main
   191                           
   192                           ; *************** function _main ***************
                                 **
   193                           ; Defined at:
   194                           ;		line 79 in file "../main.c"
   195                           ; Parameters:
   196                           ;		None
   197                           ; Auto variables:
   198                           ;		md_keep     	       	type: unsigned int 
   199                           ; Return value:
   200                           ;		type: void 
   201                           ;		size: 0
   202                           ; Registers used:
   203                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   204                           ; Tracked objects:
   205                           ;		On entry : 0/0
   206                           ;		On exit  : 0/0
   207                           ;		Unchanged: 0/0
   208                           ; Data sizes:
   209                           ;		Autos:    0
   210                           ;		Params:   0
   211                           ;		Temp:     0
   212                           ;		Total:    0
   213                           ; This function calls:
   214                           ;		_init_timer3
   215                           ;		_init_pv1
   216                           ;		_modbus_receive
   217                           ; This function is called by:
   218                           ;		Startup code after reset
   219                           ; This function uses a non-reentrant model
   220                           ; 
   221                                   psect   text0,class=CODE,space=0,reloc=2
   222                           
   223                           	opt lm
   224                           	file	"../main.c"
   225                           	line	79
   226  000000                     	__size_of_main	equ	__end_of_main-_main
   227                                   psect   text0
   228                           ;main.c: 78: void main(void)
   229                           ;main.c: 79: {
   230                           	
   231  000A52                     _main:		; BSR set to: ?
   232                           
   233                           	opt stack 27
   234                           	line	81
   235                           ;main.c: 80: unsigned int md_keep;
   236                           ;main.c: 81: ANSELC = 0;
   237  000A52  0E00               	movlw	low(0)
   238  000A54  010F               	movlb	15	; () banked
   239  000A56  010F               	movlb	15	; () banked
   240  000A58  6F3A               	movwf	((3898))&0ffh	;volatile
   241                           	line	82
   242                           ;main.c: 82: TRISC = 0x80;
   243  000A5A  0E80               	movlw	low(080h)
   244  000A5C  6E94               	movwf	((c:3988)),c	;volatile
   245                           	line	83
   246                           ;main.c: 83: PORTC = 0xc0;
   247  000A5E  0EC0               	movlw	low(0C0h)
   248  000A60  6E82               	movwf	((c:3970)),c	;volatile
   249                           	line	85
   250                           ;main.c: 85: ANSELA = 0;
   251  000A62  0E00               	movlw	low(0)
   252  000A64  010F               	movlb	15	; () banked
   253  000A66  010F               	movlb	15	; () banked
   254  000A68  6F38               	movwf	((3896))&0ffh	;volatile
   255                           	line	86
   256                           ;main.c: 86: TRISA5 =0;
   257  000A6A  9A92               	bcf	c:(31893/8),(31893)&7	;volatile
   258                           	line	87
   259                           ;main.c: 87: RA5 = 0;
   260  000A6C  9A80               	bcf	c:(31749/8),(31749)&7	;volatile
   261                           	line	90
   262                           ;main.c: 90: TMR1ON = 0; TMR1CS0 = 0; TMR1CS1 = 
                                 0; T1CKPS0 = 0; T1CKPS1 = 0; TMR1 = 65535-40320;
                                  TMR1IF=0; TMR1IE=1; TMR1ON = 1;
   263  000A6E  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
   264  000A70  9CCD               	bcf	c:(32366/8),(32366)&7	;volatile
   265  000A72  9ECD               	bcf	c:(32367/8),(32367)&7	;volatile
   266  000A74  98CD               	bcf	c:(32364/8),(32364)&7	;volatile
   267  000A76  9ACD               	bcf	c:(32365/8),(32365)&7	;volatile
   268  000A78  0E7F               	movlw	low(0627Fh)
   269  000A7A  6ECE               	movwf	((c:4046)),c	;volatile
   270  000A7C  0E62               	movlw	high(0627Fh)
   271  000A7E  6ECF               	movwf	((c:4046+1)),c	;volatile
   272  000A80  909E               	bcf	c:(31984/8),(31984)&7	;volatile
   273  000A82  809D               	bsf	c:(31976/8),(31976)&7	;volatile
   274  000A84  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
   275                           	line	92
   276                           ;main.c: 92: PEIE = 1;
   277  000A86  8CF2               	bsf	c:(32662/8),(32662)&7	;volatile
   278                           	line	93
   279                           ;main.c: 93: GIE = 1;
   280  000A88  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
   281                           	line	94
   282                           ;main.c: 94: SPEN1 = 1; SYNC1 = 0; SPBRG1 = 1105
                                 92/(96*16)-1; BRGH1 = 0; CREN1 = 1; TXEN1 = 1; R
                                 C1IE = 1;
   283  000A8A  8EAB               	bsf	c:(32095/8),(32095)&7	;volatile
   284  000A8C  98AC               	bcf	c:(32100/8),(32100)&7	;volatile
   285  000A8E  0E47               	movlw	low(047h)
   286  000A90  6EAF               	movwf	((c:4015)),c	;volatile
   287  000A92  94AC               	bcf	c:(32098/8),(32098)&7	;volatile
   288  000A94  88AB               	bsf	c:(32092/8),(32092)&7	;volatile
   289  000A96  8AAC               	bsf	c:(32101/8),(32101)&7	;volatile
   290  000A98  8A9D               	bsf	c:(31981/8),(31981)&7	;volatile
   291                           	line	96
   292                           ;main.c: 96: init_timer3();
   293  000A9A  ECDE  F005         	call	_init_timer3	;wreg free
   294                           	line	97
   295                           ;main.c: 97: init_pv1();
   296  000A9E  ECEB  F005         	call	_init_pv1	;wreg free
   297                           	line	98
   298                           ;main.c: 98: PORTCbits.RC5 = 1;
   299  000AA2  8A82               	bsf	((c:3970)),c,5	;volatile
   300                           	line	99
   301                           ;main.c: 99: while(1)
   302                           	
   303  000AA4                     l757:		; BSR set to: ?
   304                           
   305                           	line	101
   306                           ;main.c: 100: {
   307                           ;main.c: 101: modbus_receive();
   308  000AA4  ECE4  F002         	call	_modbus_receive	;wreg free
   309                           	line	106
   310                           ;main.c: 106: if(modbus_reg[3]==1)
   311  000AA8  0100               	movlb	0	; () banked
   312  000AAA  0100               	movlb	0	; () banked
   313  000AAC  053B               	decf	(0+(53+06h))&0ffh,w
   314  000AAE  113C               	iorwf (1+(53+06h))&0ffh,w
   315                           
   316  000AB0  A4D8               	btfss	status,2
   317  000AB2  EF5D  F005         	goto	u1401
   318  000AB6  EF5F  F005         	goto	u1400
   319  000ABA                     u1401:
   320  000ABA  EF61  F005         	goto	l756
   321  000ABE                     u1400:
   322                           	line	109
   323                           ;main.c: 107: {
   324                           ;main.c: 109: }
   325  000ABE  EF61  F005         	goto	l756
   326                           	line	115
   327                           	
   328  000AC2                     l756:		; BSR set to: ?
   329                           
   330                           	line	99
   331  000AC2  EF52  F005         	goto	l757
   332                           	global	start
   333  000AC6  EF0C  F000         	goto	start
   334                           	opt stack 0
   335                           GLOBAL __end_of_main
   336  000ACA                     	__end_of_main:
   337                           	FNSIZE	_main,0,0
   338                           ; =============== function _main ends ==========
                                 ==
   339                           
   340                                   psect   text1,class=CODE,space=0,reloc=2
   341                           	line	116
   342                           
   343                           	opt lm
   344                           	signat	_main,88
   345                           	global	_modbus_receive
   346                           	global	??_modbus_receive
   347                           	global	?_modbus_receive
   348                           
   349                           ; *************** function _modbus_receive *****
                                 ************
   350                           ; Defined at:
   351                           ;		line 113 in file "../modbus_rtu.c"
   352                           ; Parameters:
   353                           ;		None
   354                           ; Auto variables:
   355                           ;		None
   356                           ; Return value:
   357                           ;		type: void 
   358                           ;		size: 0
   359                           ; Registers used:
   360                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   361                           ; Tracked objects:
   362                           ;		On entry : 0/0
   363                           ;		On exit  : 0/0
   364                           ;		Unchanged: 0/0
   365                           ; Data sizes:
   366                           ;		Autos:    0
   367                           ;		Params:   0
   368                           ;		Temp:     1
   369                           ;		Total:    1
   370                           ; This function calls:
   371                           ;		_modbus_crc16
   372                           ;		_read_holding_regs
   373                           ;		_write_single_holding_reg
   374                           ; This function is called by:
   375                           ;		_main
   376                           ; This function uses a non-reentrant model
   377                           ; 
   378                           	file	"../modbus_rtu.c"
   379                           	line	113
   380  000000                     	__size_of_modbus_receive	equ	__end_of_modbus_re
                                 ceive-_modbus_receive
   381                           ;modbus_rtu.c: 112: void modbus_receive(void)
   382                           ;modbus_rtu.c: 113: {
   383                           	
   384  0005C8                     _modbus_receive:		; BSR set to: ?
   385                           
   386                           	opt stack 26
   387                           	line	114
   388                           ;modbus_rtu.c: 114: if(rx_buf.frame_ok==1)
   389  0005C8  0400               	decf	((c:0)),c,w
   390                           
   391  0005CA  A4D8               	btfss	status,2
   392  0005CC  EFEA  F002         	goto	u1351
   393  0005D0  EFEC  F002         	goto	u1350
   394  0005D4                     u1351:
   395  0005D4  EF31  F003         	goto	l378
   396  0005D8                     u1350:
   397                           	line	116
   398                           ;modbus_rtu.c: 115: {
   399                           ;modbus_rtu.c: 116: rx_buf.frame_ok = 0;
   400  0005D8  0102               	movlb	2	; () banked
   401  0005DA  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   402  0005DC  0E00               	movlw	low(0)
   403  0005DE  6E00               	movwf	((c:0)),c
   404  0005E0  0102               	movlb	2	; () banked
   405  0005E2  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   406                           	line	118
   407                           ;modbus_rtu.c: 118: if(modbus_crc16(rx_buf.data_
                                 buf,rx_buf.rec_count)==0)
   408  0005E4  0102               	movlb	2	; () banked
   409  0005E6  C002 F211          	movff	0+((c:0)+02h),0+(?_modbus_crc16+02h)
   410  0005EA  0102               	movlb	2	; () banked
   411  0005EC  0102               	movlb	2	; () banked
   412  0005EE  6B12               	clrf	(1+(?_modbus_crc16+02h))&0ffh
   413  0005F0  0E03               	movlw	low((c:0)+03h)
   414  0005F2  0102               	movlb	2	; () banked
   415  0005F4  0102               	movlb	2	; () banked
   416  0005F6  6F0F               	movwf	((?_modbus_crc16))&0ffh
   417  0005F8  0E00               	movlw	high((c:0)+03h)
   418  0005FA  0102               	movlb	2	; () banked
   419  0005FC  6F10               	movwf	((?_modbus_crc16+1))&0ffh
   420  0005FE  EC44  F004         	call	_modbus_crc16	;wreg free
   421  000602  0102               	movlb	2	; () banked
   422  000604  5110               	movf	(1+?_modbus_crc16)&0ffh,w
   423  000606  110F               	iorwf (0+?_modbus_crc16)&0ffh,w
   424                           
   425  000608  A4D8               	btfss	status,2
   426  00060A  EF09  F003         	goto	u1361
   427  00060E  EF0B  F003         	goto	u1360
   428  000612                     u1361:
   429  000612  EF2B  F003         	goto	l379
   430  000616                     u1360:
   431                           	line	120
   432                           ;modbus_rtu.c: 119: {
   433                           ;modbus_rtu.c: 120: if((1 ==rx_buf.data_buf[0])|
                                 |(255==rx_buf.data_buf[0]))
   434  000616  0403               	decf	(0+((c:0)+03h)),c,w
   435                           
   436  000618  B4D8               	btfsc	status,2
   437  00061A  EF11  F003         	goto	u1371
   438  00061E  EF13  F003         	goto	u1370
   439  000622                     u1371:
   440  000622  EF1B  F003         	goto	l600000235
   441  000626                     u1370:
   442  000626  2803               	incf	(0+((c:0)+03h)),c,w
   443                           
   444  000628  A4D8               	btfss	status,2
   445  00062A  EF19  F003         	goto	u1381
   446  00062E  EF1B  F003         	goto	u1380
   447  000632                     u1381:
   448  000632  EF23  F003         	goto	l380
   449  000636                     u1380:
   450                           	
   451  000636                     l600000235:		; BSR set to: ?
   452                           
   453                           	line	122
   454                           ;modbus_rtu.c: 121: {
   455                           ;modbus_rtu.c: 122: rx_buf.data_valid = 1;
   456  000636  0102               	movlb	2	; () banked
   457  000638  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   458  00063A  0E01               	movlw	low(01h)
   459  00063C  6E01               	movwf	(0+((c:0)+01h)),c
   460  00063E  0102               	movlb	2	; () banked
   461  000640  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   462                           	line	123
   463                           ;modbus_rtu.c: 123: }
   464  000642  EF29  F003         	goto	l381
   465                           	line	124
   466                           	
   467  000646                     l380:		; BSR set to: ?
   468                           
   469                           	line	126
   470                           ;modbus_rtu.c: 124: else
   471                           ;modbus_rtu.c: 125: {
   472                           ;modbus_rtu.c: 126: rx_buf.rec_count = 0;
   473  000646  0102               	movlb	2	; () banked
   474  000648  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   475  00064A  0E00               	movlw	low(0)
   476  00064C  6E02               	movwf	(0+((c:0)+02h)),c
   477  00064E  0102               	movlb	2	; () banked
   478  000650  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   479                           	line	127
   480                           	
   481  000652                     l381:		; BSR set to: ?
   482                           
   483                           	line	128
   484                           ;modbus_rtu.c: 127: }
   485                           ;modbus_rtu.c: 128: }
   486  000652  EF31  F003         	goto	l378
   487                           	line	129
   488                           	
   489  000656                     l379:		; BSR set to: ?
   490                           
   491                           	line	131
   492                           ;modbus_rtu.c: 129: else
   493                           ;modbus_rtu.c: 130: {
   494                           ;modbus_rtu.c: 131: rx_buf.rec_count = 0;
   495  000656  0102               	movlb	2	; () banked
   496  000658  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   497  00065A  0E00               	movlw	low(0)
   498  00065C  6E02               	movwf	(0+((c:0)+02h)),c
   499  00065E  0102               	movlb	2	; () banked
   500  000660  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   501                           	line	132
   502                           	
   503  000662                     l382:		; BSR set to: ?
   504                           
   505                           	line	133
   506                           	
   507  000662                     l378:		; BSR set to: ?
   508                           
   509                           	line	135
   510                           ;modbus_rtu.c: 132: }
   511                           ;modbus_rtu.c: 133: }
   512                           ;modbus_rtu.c: 135: if(rx_buf.data_valid)
   513  000662  5001               	movf	(0+((c:0)+01h)),c,w
   514  000664  B4D8               	btfsc	status,2
   515  000666  EF37  F003         	goto	u1391
   516  00066A  EF39  F003         	goto	u1390
   517  00066E                     u1391:
   518  00066E  EF68  F003         	goto	l383
   519  000672                     u1390:
   520                           	line	137
   521                           ;modbus_rtu.c: 136: {
   522                           ;modbus_rtu.c: 137: rx_buf.data_valid = 0;
   523  000672  0102               	movlb	2	; () banked
   524  000674  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   525  000676  0E00               	movlw	low(0)
   526  000678  6E01               	movwf	(0+((c:0)+01h)),c
   527  00067A  0102               	movlb	2	; () banked
   528  00067C  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   529                           	line	139
   530                           ;modbus_rtu.c: 139: switch(rx_buf.data_buf[1])
   531  00067E  EF5F  F003         	goto	l385
   532                           	line	141
   533                           ;modbus_rtu.c: 140: {
   534                           ;modbus_rtu.c: 141: case 0x03:
   535                           	
   536  000682                     l386:		; BSR set to: ?
   537                           
   538                           	line	142
   539                           ;modbus_rtu.c: 142: read_holding_regs();
   540  000682  EC30  F000         	call	_read_holding_regs	;wreg free
   541                           	line	143
   542                           ;modbus_rtu.c: 143: break;
   543  000686  EF68  F003         	goto	l383
   544                           	line	144
   545                           ;modbus_rtu.c: 144: case 0x06:
   546                           	
   547  00068A                     l387:		; BSR set to: ?
   548                           
   549                           	line	145
   550                           ;modbus_rtu.c: 145: write_single_holding_reg();
   551  00068A  ECE6  F003         	call	_write_single_holding_reg	;wreg free
   552                           	line	146
   553                           ;modbus_rtu.c: 146: break;
   554  00068E  EF68  F003         	goto	l383
   555                           	line	147
   556                           ;modbus_rtu.c: 147: case 0x16:
   557                           	
   558  000692                     l388:		; BSR set to: ?
   559                           
   560                           	line	149
   561                           ;modbus_rtu.c: 149: break;
   562  000692  EF68  F003         	goto	l383
   563                           	line	150
   564                           ;modbus_rtu.c: 150: default:
   565                           	
   566  000696                     l389:		; BSR set to: ?
   567                           
   568                           	line	151
   569                           ;modbus_rtu.c: 151: rx_buf.data_valid = 0;
   570  000696  0102               	movlb	2	; () banked
   571  000698  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   572  00069A  0E00               	movlw	low(0)
   573  00069C  6E01               	movwf	(0+((c:0)+01h)),c
   574  00069E  0102               	movlb	2	; () banked
   575  0006A0  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   576                           	line	152
   577                           ;modbus_rtu.c: 152: rx_buf.rec_count = 0;
   578  0006A2  0102               	movlb	2	; () banked
   579  0006A4  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   580  0006A6  0E00               	movlw	low(0)
   581  0006A8  6E02               	movwf	(0+((c:0)+02h)),c
   582  0006AA  0102               	movlb	2	; () banked
   583  0006AC  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   584                           	line	153
   585                           ;modbus_rtu.c: 153: rx_buf.frame_ok = 0;
   586  0006AE  0102               	movlb	2	; () banked
   587  0006B0  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   588  0006B2  0E00               	movlw	low(0)
   589  0006B4  6E00               	movwf	((c:0)),c
   590  0006B6  0102               	movlb	2	; () banked
   591  0006B8  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   592                           	line	154
   593                           ;modbus_rtu.c: 154: break;
   594  0006BA  EF68  F003         	goto	l383
   595                           	line	139
   596                           	
   597  0006BE                     l385:		; BSR set to: ?
   598                           
   599  0006BE  5004               	movf	(0+((c:0)+04h)),c,w
   600  0006C0  0A03               	xorlw	3 ^ 0
   601  0006C2  E0DF               	bz	l386
   602  0006C4  0A05               	xorlw	6 ^ 3
   603  0006C6  E0E1               	bz	l387
   604  0006C8  0A10               	xorlw	22 ^ 6
   605  0006CA  E0E3               	bz	l388
   606  0006CC  EF4B  F003         	goto	l389
   607                           
   608                           	line	156
   609                           	
   610  0006D0                     l383:		; BSR set to: ?
   611                           
   612                           	line	157
   613                           ;modbus_rtu.c: 156: }
   614                           ;modbus_rtu.c: 157: }
   615  0006D0                     l377:
   616                           			; BSR set to: ?
   617                           
   618  0006D0  0012               	return
   619                           	opt stack 0
   620                           GLOBAL __end_of_modbus_receive
   621  0006D2                     	__end_of_modbus_receive:
   622                           	FNSIZE	_modbus_receive,1,0
   623                           ; =============== function _modbus_receive ends 
                                 ============
   624                           
   625                           	signat	_modbus_receive,88
   626                           	global	_init_pv1
   627                           	global	??_init_pv1
   628                           	global	?_init_pv1
   629                           
   630                           ; *************** function _init_pv1 ***********
                                 ******
   631                           ; Defined at:
   632                           ;		line 176 in file "../main.c"
   633                           ; Parameters:
   634                           ;		None
   635                           ; Auto variables:
   636                           ;		None
   637                           ; Return value:
   638                           ;		type: void 
   639                           ;		size: 0
   640                           ; Registers used:
   641                           ;		wreg, status,2
   642                           ; Tracked objects:
   643                           ;		On entry : 0/0
   644                           ;		On exit  : 0/0
   645                           ;		Unchanged: 0/0
   646                           ; Data sizes:
   647                           ;		Autos:    0
   648                           ;		Params:   0
   649                           ;		Temp:     0
   650                           ;		Total:    0
   651                           ; This function calls:
   652                           ;		Nothing
   653                           ; This function is called by:
   654                           ;		_main
   655                           ; This function uses a non-reentrant model
   656                           ; 
   657                                   psect   text2,class=CODE,space=0,reloc=2
   658                           
   659                           	opt lm
   660                           	file	"../main.c"
   661                           	line	176
   662  000000                     	__size_of_init_pv1	equ	__end_of_init_pv1-_init_
                                 pv1
   663                           ;main.c: 175: void init_pv1(void)
   664                           ;main.c: 176: {
   665                           	
   666  000BD6                     _init_pv1:		; BSR set to: ?
   667                           
   668                           	opt stack 26
   669                           	line	177
   670                           ;main.c: 177: ANSELB = 0;
   671  000BD6  0E00               	movlw	low(0)
   672  000BD8  010F               	movlb	15	; () banked
   673  000BDA  010F               	movlb	15	; () banked
   674  000BDC  6F39               	movwf	((3897))&0ffh	;volatile
   675                           	line	178
   676                           ;main.c: 178: TRISB0=0;
   677  000BDE  9093               	bcf	c:(31896/8),(31896)&7	;volatile
   678                           	line	179
   679                           ;main.c: 179: RB0=1;
   680  000BE0  8081               	bsf	c:(31752/8),(31752)&7	;volatile
   681                           	line	180
   682                           ;main.c: 180: TRISB0=1;
   683  000BE2  8093               	bsf	c:(31896/8),(31896)&7	;volatile
   684                           	line	181
   685                           ;main.c: 181: INTEDG0 = 0;
   686  000BE4  9CF1               	bcf	c:(32654/8),(32654)&7	;volatile
   687                           	line	182
   688                           ;main.c: 182: INT0IE = 1;
   689  000BE6  88F2               	bsf	c:(32660/8),(32660)&7	;volatile
   690                           	line	183
   691                           ;main.c: 183: INT0IF = 0;
   692  000BE8  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
   693                           	line	184
   694                           ;main.c: 184: }
   695  000BEA                     l772:
   696                           			; BSR set to: ?
   697                           
   698  000BEA  0012               	return
   699                           	opt stack 0
   700                           GLOBAL __end_of_init_pv1
   701  000BEC                     	__end_of_init_pv1:
   702                           	FNSIZE	_init_pv1,0,0
   703                           ; =============== function _init_pv1 ends ======
                                 ======
   704                           
   705                           	signat	_init_pv1,88
   706                           	global	_init_timer3
   707                           	global	??_init_timer3
   708                           	global	?_init_timer3
   709                           
   710                           ; *************** function _init_timer3 ********
                                 *********
   711                           ; Defined at:
   712                           ;		line 47 in file "../main.c"
   713                           ; Parameters:
   714                           ;		None
   715                           ; Auto variables:
   716                           ;		None
   717                           ; Return value:
   718                           ;		type: void 
   719                           ;		size: 0
   720                           ; Registers used:
   721                           ;		wreg, status,2
   722                           ; Tracked objects:
   723                           ;		On entry : 0/0
   724                           ;		On exit  : 0/0
   725                           ;		Unchanged: 0/0
   726                           ; Data sizes:
   727                           ;		Autos:    0
   728                           ;		Params:   0
   729                           ;		Temp:     0
   730                           ;		Total:    0
   731                           ; This function calls:
   732                           ;		Nothing
   733                           ; This function is called by:
   734                           ;		_main
   735                           ; This function uses a non-reentrant model
   736                           ; 
   737                                   psect   text3,class=CODE,space=0,reloc=2
   738                           
   739                           	opt lm
   740                           	file	"../main.c"
   741                           	line	47
   742  000000                     	__size_of_init_timer3	equ	__end_of_init_timer3-
                                 _init_timer3
   743                           ;main.c: 19: asm("\tglobal __config" "1"); asm("
                                 \t__config" "1" " equ " "0xF9FF & 0xEFFF & 0xFFF
                                 F & 0xFFFF & 0xFFFF");
   744                           ;main.c: 21: asm("\tglobal __config" "2"); asm("
                                 \t__config" "2" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F");
   745                           ;main.c: 23: asm("\tglobal __config" "3"); asm("
                                 \t__config" "3" " equ " "0xFFFF & 0xFFFF");
   746                           ;main.c: 25: asm("\tglobal __config" "4"); asm("
                                 \t__config" "4" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF");
   747                           ;main.c: 27: asm("\tglobal __config" "5"); asm("
                                 \t__config" "5" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F");
   748                           	
   749  000BBC                     _init_timer3:		; BSR set to: ?
   750                           
   751                           	opt stack 26
   752                           	line	49
   753  000BBC  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
   754                           	line	51
   755                           ;main.c: 51: TMR3CS0 = 0;
   756  000BBE  9CB1               	bcf	c:(32142/8),(32142)&7	;volatile
   757                           	line	52
   758                           ;main.c: 52: TMR3CS1 = 0;
   759  000BC0  9EB1               	bcf	c:(32143/8),(32143)&7	;volatile
   760                           	line	54
   761                           ;main.c: 54: T3CKPS0 = 0;
   762  000BC2  98B1               	bcf	c:(32140/8),(32140)&7	;volatile
   763                           	line	55
   764                           ;main.c: 55: T3CKPS1 = 0;
   765  000BC4  9AB1               	bcf	c:(32141/8),(32141)&7	;volatile
   766                           	line	57
   767                           ;main.c: 57: TMR3 = 65535-11059;
   768  000BC6  0ECC               	movlw	low(0D4CCh)
   769  000BC8  6EB2               	movwf	((c:4018)),c	;volatile
   770  000BCA  0ED4               	movlw	high(0D4CCh)
   771  000BCC  6EB3               	movwf	((c:4018+1)),c	;volatile
   772                           	line	58
   773                           ;main.c: 58: TMR3IF=0;
   774  000BCE  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
   775                           	line	59
   776                           ;main.c: 59: TMR3IE=1;
   777  000BD0  82A0               	bsf	c:(32001/8),(32001)&7	;volatile
   778                           	line	60
   779                           ;main.c: 60: TMR3ON = 1;
   780  000BD2  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
   781                           	line	61
   782                           ;main.c: 61: }
   783  000BD4                     l751:
   784                           			; BSR set to: ?
   785                           
   786  000BD4  0012               	return
   787                           	opt stack 0
   788                           GLOBAL __end_of_init_timer3
   789  000BD6                     	__end_of_init_timer3:
   790                           	FNSIZE	_init_timer3,0,0
   791                           ; =============== function _init_timer3 ends ===
                                 =========
   792                           
   793                           	signat	_init_timer3,88
   794                           	global	_read_holding_regs
   795                           	global	??_read_holding_regs
   796                           	global	?_read_holding_regs
   797                           
   798                           ; *************** function _read_holding_regs **
                                 ***************
   799                           ; Defined at:
   800                           ;		line 160 in file "../modbus_rtu.c"
   801                           ; Parameters:
   802                           ;		None
   803                           ; Auto variables:
   804                           ;		i           	       	type: unsigned char 
   805                           ;		start_addr  	       	type: unsigned int 
   806                           ;		data_crc    	       	type: unsigned int 
   807                           ;		num         	       	type: unsigned int 
   808                           ; Return value:
   809                           ;		type: void 
   810                           ;		size: 0
   811                           ; Registers used:
   812                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   813                           ; Tracked objects:
   814                           ;		On entry : 0/0
   815                           ;		On exit  : 0/0
   816                           ;		Unchanged: 0/0
   817                           ; Data sizes:
   818                           ;		Autos:    7
   819                           ;		Params:   0
   820                           ;		Temp:     7
   821                           ;		Total:   14
   822                           ; This function calls:
   823                           ;		_modbus_crc16
   824                           ; This function is called by:
   825                           ;		_modbus_receive
   826                           ; This function uses a non-reentrant model
   827                           ; 
   828                                   psect   text4,class=CODE,space=0,reloc=2
   829                           
   830                           	opt lm
   831                           	file	"../modbus_rtu.c"
   832                           	line	160
   833  000000                     	__size_of_read_holding_regs	equ	__end_of_read_h
                                 olding_regs-_read_holding_regs
   834                           ;modbus_rtu.c: 159: void read_holding_regs(void)
   835                           ;modbus_rtu.c: 160: {
   836                           	
   837  000060                     _read_holding_regs:		; BSR set to: ?
   838                           
   839                           	opt stack 25
   840                           	line	161
   841  000060  0E00               	movlw	low(0)
   842  000062  0102               	movlb	2	; () banked
   843  000064  0102               	movlb	2	; () banked
   844  000066  6F06               	movwf	((read_holding_regs@num))&0ffh
   845  000068  0E00               	movlw	high(0)
   846  00006A  0102               	movlb	2	; () banked
   847  00006C  6F07               	movwf	((read_holding_regs@num+1))&0ffh
   848                           	line	163
   849                           ;modbus_rtu.c: 162: unsigned int start_addr;
   850                           ;modbus_rtu.c: 163: unsigned int data_crc=0;
   851  00006E  0E00               	movlw	low(0)
   852  000070  0102               	movlb	2	; () banked
   853  000072  0102               	movlb	2	; () banked
   854  000074  6F04               	movwf	((read_holding_regs@data_crc))&0ffh
   855  000076  0E00               	movlw	high(0)
   856  000078  0102               	movlb	2	; () banked
   857  00007A  6F05               	movwf	((read_holding_regs@data_crc+1))&0ffh
   858                           	line	164
   859                           ;modbus_rtu.c: 164: unsigned char i = 0 ;
   860  00007C  0102               	movlb	2	; () banked
   861  00007E  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   862  000080  0E00               	movlw	low(0)
   863  000082  0102               	movlb	2	; () banked
   864  000084  0102               	movlb	2	; () banked
   865  000086  6F01               	movwf	((read_holding_regs@i))&0ffh
   866  000088  0102               	movlb	2	; () banked
   867  00008A  5108               	movf	(??_read_holding_regs+7+0)&0ffh,w
   868                           	line	166
   869                           ;modbus_rtu.c: 166: start_addr = ((rx_buf.data_b
                                 uf[2])<<8)|(rx_buf.data_buf[3]);
   870  00008C  5005               	movf	(0+((c:0)+05h)),c,w
   871  00008E  0102               	movlb	2	; () banked
   872  000090  0102               	movlb	2	; () banked
   873  000092  6F03               	movwf	((read_holding_regs@start_addr+1))&0ffh
   874  000094  5006               	movf	(0+((c:0)+06h)),c,w
   875  000096  0102               	movlb	2	; () banked
   876  000098  6F02               	movwf	((read_holding_regs@start_addr))&0ffh
   877                           	line	168
   878                           ;modbus_rtu.c: 168: num = ((rx_buf.data_buf[4])<
                                 <8)|(rx_buf.data_buf[5]);
   879  00009A  5007               	movf	(0+((c:0)+07h)),c,w
   880  00009C  0102               	movlb	2	; () banked
   881  00009E  0102               	movlb	2	; () banked
   882  0000A0  6F07               	movwf	((read_holding_regs@num+1))&0ffh
   883  0000A2  5008               	movf	(0+((c:0)+08h)),c,w
   884  0000A4  0102               	movlb	2	; () banked
   885  0000A6  6F06               	movwf	((read_holding_regs@num))&0ffh
   886                           	line	170
   887                           ;modbus_rtu.c: 170: tx_buf.data_buf[0] = 1;
   888  0000A8  0102               	movlb	2	; () banked
   889  0000AA  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   890  0000AC  0E01               	movlw	low(01h)
   891  0000AE  0101               	movlb	1	; () banked
   892  0000B0  0101               	movlb	1	; () banked
   893  0000B2  6F01               	movwf	(0+(256+01h))&0ffh
   894  0000B4  0102               	movlb	2	; () banked
   895  0000B6  5108               	movf	(??_read_holding_regs+7+0)&0ffh,w
   896                           	line	171
   897                           ;modbus_rtu.c: 171: tx_buf.data_buf[1] = 0x03;
   898  0000B8  0102               	movlb	2	; () banked
   899  0000BA  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   900  0000BC  0E03               	movlw	low(03h)
   901  0000BE  0101               	movlb	1	; () banked
   902  0000C0  0101               	movlb	1	; () banked
   903  0000C2  6F02               	movwf	(0+(256+02h))&0ffh
   904  0000C4  0102               	movlb	2	; () banked
   905  0000C6  5108               	movf	(??_read_holding_regs+7+0)&0ffh,w
   906                           	line	172
   907                           ;modbus_rtu.c: 172: tx_buf.data_buf[2] = 2*num;
   908  0000C8  0102               	movlb	2	; () banked
   909  0000CA  0102               	movlb	2	; () banked
   910  0000CC  5106               	movf	((read_holding_regs@num))&0ffh,w
   911  0000CE  0102               	movlb	2	; () banked
   912  0000D0  2506               	addwf	((read_holding_regs@num))&0ffh,w
   913  0000D2  0101               	movlb	1	; () banked
   914  0000D4  0101               	movlb	1	; () banked
   915  0000D6  6F03               	movwf	(0+(256+03h))&0ffh
   916                           	line	174
   917                           ;modbus_rtu.c: 174: for(i=0;i<num;i++)
   918  0000D8  0102               	movlb	2	; () banked
   919  0000DA  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   920  0000DC  0E00               	movlw	low(0)
   921  0000DE  0102               	movlb	2	; () banked
   922  0000E0  0102               	movlb	2	; () banked
   923  0000E2  6F01               	movwf	((read_holding_regs@i))&0ffh
   924  0000E4  0102               	movlb	2	; () banked
   925  0000E6  5108               	movf	(??_read_holding_regs+7+0)&0ffh,w
   926  0000E8  EFEC  F000         	goto	l394
   927                           	line	175
   928                           	
   929  0000EC                     l391:		; BSR set to: ?
   930                           
   931                           	line	176
   932                           ;modbus_rtu.c: 175: {
   933                           ;modbus_rtu.c: 176: tx_buf.data_buf[3+2*i] = mod
                                 bus_reg[i+start_addr]>>8;
   934  0000EC  0102               	movlb	2	; () banked
   935  0000EE  0102               	movlb	2	; () banked
   936  0000F0  5101               	movf	((read_holding_regs@i))&0ffh,w
   937  0000F2  0D02               	mullw	02h
   938  0000F4  CFF3 F208          	movff	prodl,??_read_holding_regs+7+0
   939  0000F8  0E04               	movlw	04h
   940  0000FA  0102               	movlb	2	; () banked
   941  0000FC  2708               	addwf	(??_read_holding_regs+7+0)&0ffh
   942  0000FE  0101               	movlb	1	; () banked
   943  000100  0E00               	movlw	low(256)
   944  000102  0102               	movlb	2	; () banked
   945  000104  2508               	addwf	(??_read_holding_regs+7+0)&0ffh,w
   946  000106  6EE9               	movwf	c:fsr0l
   947  000108  6AEA               	clrf	1+c:fsr0l
   948  00010A  0101               	movlb	1	; () banked
   949  00010C  0E01               	movlw	high(256)
   950  00010E  22EA               	addwfc	1+c:fsr0l
   951  000110  0102               	movlb	2	; () banked
   952  000112  0102               	movlb	2	; () banked
   953  000114  5101               	movf	((read_holding_regs@i))&0ffh,w
   954  000116  0102               	movlb	2	; () banked
   955  000118  0102               	movlb	2	; () banked
   956  00011A  2502               	addwf	((read_holding_regs@start_addr))&0ffh,w
   957  00011C  0102               	movlb	2	; () banked
   958  00011E  6F09               	movwf	(??_read_holding_regs+8+0)&0ffh
   959  000120  0E00               	movlw	0
   960  000122  0102               	movlb	2	; () banked
   961  000124  0102               	movlb	2	; () banked
   962  000126  2103               	addwfc	((read_holding_regs@start_addr+1))&0ffh,
                                 w
   963  000128  0102               	movlb	2	; () banked
   964  00012A  6F0A               	movwf	(??_read_holding_regs+8+0+1)&0ffh
   965  00012C  90D8               	bcf	status,0
   966  00012E  0102               	movlb	2	; () banked
   967  000130  3509               	rlcf	(??_read_holding_regs+8+0)&0ffh,w
   968  000132  0102               	movlb	2	; () banked
   969  000134  6F0B               	movwf	(??_read_holding_regs+10+0)&0ffh
   970  000136  0102               	movlb	2	; () banked
   971  000138  350A               	rlcf	(??_read_holding_regs+8+1)&0ffh,w
   972  00013A  0102               	movlb	2	; () banked
   973  00013C  6F0C               	movwf	1+(??_read_holding_regs+10+0)&0ffh
   974  00013E  0100               	movlb	0	; () banked
   975  000140  0E35               	movlw	low(53)
   976  000142  0102               	movlb	2	; () banked
   977  000144  250B               	addwf	(??_read_holding_regs+10+0)&0ffh,w
   978  000146  6EE1               	movwf	c:fsr1l
   979  000148  0100               	movlb	0	; () banked
   980  00014A  0E00               	movlw	high(53)
   981  00014C  0102               	movlb	2	; () banked
   982  00014E  210C               	addwfc	(??_read_holding_regs+10+1)&0ffh,w
   983  000150  6EE2               	movwf	1+c:fsr1l
   984  000152  CFE6 F20D          	movff	postinc1,??_read_holding_regs+12+0
   985  000156  CFE5 F20E          	movff	postdec1,??_read_holding_regs+12+0+1
   986  00015A  C20E  F20D         	movff	??_read_holding_regs+12+1,??_read_holding
                                 _regs+12+0
   987  00015E  0102               	movlb	2	; () banked
   988  000160  6B0E               	clrf	(??_read_holding_regs+12+1)&0ffh
   989  000162  0102               	movlb	2	; () banked
   990  000164  510D               	movf	(??_read_holding_regs+12+0)&0ffh,w
   991  000166  6EEF               	movwf	indf0
   992                           
   993                           	line	177
   994                           ;modbus_rtu.c: 177: tx_buf.data_buf[3+2*i+1] = m
                                 odbus_reg[i+start_addr];
   995  000168  0102               	movlb	2	; () banked
   996  00016A  0102               	movlb	2	; () banked
   997  00016C  5101               	movf	((read_holding_regs@i))&0ffh,w
   998  00016E  0102               	movlb	2	; () banked
   999  000170  0102               	movlb	2	; () banked
  1000  000172  2502               	addwf	((read_holding_regs@start_addr))&0ffh,w
  1001  000174  0102               	movlb	2	; () banked
  1002  000176  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
  1003  000178  0E00               	movlw	0
  1004  00017A  0102               	movlb	2	; () banked
  1005  00017C  0102               	movlb	2	; () banked
  1006  00017E  2103               	addwfc	((read_holding_regs@start_addr+1))&0ffh,
                                 w
  1007  000180  0102               	movlb	2	; () banked
  1008  000182  6F09               	movwf	(??_read_holding_regs+7+0+1)&0ffh
  1009  000184  90D8               	bcf	status,0
  1010  000186  0102               	movlb	2	; () banked
  1011  000188  3508               	rlcf	(??_read_holding_regs+7+0)&0ffh,w
  1012  00018A  0102               	movlb	2	; () banked
  1013  00018C  6F0A               	movwf	(??_read_holding_regs+9+0)&0ffh
  1014  00018E  0102               	movlb	2	; () banked
  1015  000190  3509               	rlcf	(??_read_holding_regs+7+1)&0ffh,w
  1016  000192  0102               	movlb	2	; () banked
  1017  000194  6F0B               	movwf	1+(??_read_holding_regs+9+0)&0ffh
  1018  000196  0100               	movlb	0	; () banked
  1019  000198  0E35               	movlw	low(53)
  1020  00019A  0102               	movlb	2	; () banked
  1021  00019C  250A               	addwf	(??_read_holding_regs+9+0)&0ffh,w
  1022  00019E  6EE9               	movwf	c:fsr0l
  1023  0001A0  0100               	movlb	0	; () banked
  1024  0001A2  0E00               	movlw	high(53)
  1025  0001A4  0102               	movlb	2	; () banked
  1026  0001A6  210B               	addwfc	(??_read_holding_regs+9+1)&0ffh,w
  1027  0001A8  6EEA               	movwf	1+c:fsr0l
  1028  0001AA  0102               	movlb	2	; () banked
  1029  0001AC  0102               	movlb	2	; () banked
  1030  0001AE  5101               	movf	((read_holding_regs@i))&0ffh,w
  1031  0001B0  0D02               	mullw	02h
  1032  0001B2  CFF3 F20C          	movff	prodl,??_read_holding_regs+11+0
  1033  0001B6  0E05               	movlw	05h
  1034  0001B8  0102               	movlb	2	; () banked
  1035  0001BA  270C               	addwf	(??_read_holding_regs+11+0)&0ffh
  1036  0001BC  0101               	movlb	1	; () banked
  1037  0001BE  0E00               	movlw	low(256)
  1038  0001C0  0102               	movlb	2	; () banked
  1039  0001C2  250C               	addwf	(??_read_holding_regs+11+0)&0ffh,w
  1040  0001C4  6EE1               	movwf	c:fsr1l
  1041  0001C6  6AE2               	clrf	1+c:fsr1l
  1042  0001C8  0101               	movlb	1	; () banked
  1043  0001CA  0E01               	movlw	high(256)
  1044  0001CC  22E2               	addwfc	1+c:fsr1l
  1045  0001CE  CFEF FFE7          	movff	indf0,indf1
  1046                           	line	174
  1047  0001D2  0102               	movlb	2	; () banked
  1048  0001D4  0102               	movlb	2	; () banked
  1049  0001D6  2B01               	incf	((read_holding_regs@i))&0ffh
  1050                           	
  1051  0001D8                     l394:		; BSR set to: ?
  1052                           
  1053  0001D8  0102               	movlb	2	; () banked
  1054  0001DA  C201  F208         	movff	(read_holding_regs@i),??_read_holding_reg
                                 s+7+0
  1055  0001DE  0102               	movlb	2	; () banked
  1056  0001E0  6B09               	clrf	(??_read_holding_regs+7+0+1)&0ffh
  1057  0001E2  0102               	movlb	2	; () banked
  1058  0001E4  0102               	movlb	2	; () banked
  1059  0001E6  5106               	movf	((read_holding_regs@num))&0ffh,w
  1060  0001E8  0102               	movlb	2	; () banked
  1061  0001EA  5D08               	subwf	(??_read_holding_regs+7+0)&0ffh,w
  1062  0001EC  0102               	movlb	2	; () banked
  1063  0001EE  0102               	movlb	2	; () banked
  1064  0001F0  5107               	movf	((read_holding_regs@num+1))&0ffh,w
  1065  0001F2  0102               	movlb	2	; () banked
  1066  0001F4  5909               	subwfb	(??_read_holding_regs+7+1)&0ffh,w
  1067  0001F6  A0D8               	btfss	status,0
  1068  0001F8  EF00  F001         	goto	u1411
  1069  0001FC  EF02  F001         	goto	u1410
  1070  000200                     u1411:
  1071  000200  EF76  F000         	goto	l391
  1072  000204                     u1410:
  1073                           	
  1074  000204                     l392:		; BSR set to: ?
  1075                           
  1076                           	line	179
  1077                           ;modbus_rtu.c: 178: }
  1078                           ;modbus_rtu.c: 179: data_crc = modbus_crc16(tx_b
                                 uf.data_buf,(2*num+3));
  1079  000204  90D8               	bcf	status,0
  1080  000206  0102               	movlb	2	; () banked
  1081  000208  0102               	movlb	2	; () banked
  1082  00020A  3506               	rlcf	((read_holding_regs@num))&0ffh,w
  1083  00020C  0102               	movlb	2	; () banked
  1084  00020E  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
  1085  000210  0102               	movlb	2	; () banked
  1086  000212  0102               	movlb	2	; () banked
  1087  000214  3507               	rlcf	((read_holding_regs@num+1))&0ffh,w
  1088  000216  0102               	movlb	2	; () banked
  1089  000218  6F09               	movwf	1+(??_read_holding_regs+7+0)&0ffh
  1090  00021A  0E03               	movlw	low(03h)
  1091  00021C  0102               	movlb	2	; () banked
  1092  00021E  2508               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1093  000220  0102               	movlb	2	; () banked
  1094                           	
  1095  000222  0102               	movlb	2	; () banked
  1096  000224  6F11               	movwf	(0+(?_modbus_crc16+02h))&0ffh
  1097  000226  0E00               	movlw	high(03h)
  1098  000228  0102               	movlb	2	; () banked
  1099  00022A  2109               	addwfc	(??_read_holding_regs+7+1)&0ffh,w
  1100  00022C  0102               	movlb	2	; () banked
  1101  00022E  6F12               	movwf	1+(0+(?_modbus_crc16+02h))&0ffh
  1102  000230  0101               	movlb	1	; () banked
  1103  000232  0E01               	movlw	low(256+01h)
  1104  000234  0102               	movlb	2	; () banked
  1105  000236  0102               	movlb	2	; () banked
  1106  000238  6F0F               	movwf	((?_modbus_crc16))&0ffh
  1107  00023A  0101               	movlb	1	; () banked
  1108  00023C  0E01               	movlw	high(256+01h)
  1109  00023E  0102               	movlb	2	; () banked
  1110  000240  6F10               	movwf	((?_modbus_crc16+1))&0ffh
  1111  000242  EC44  F004         	call	_modbus_crc16	;wreg free
  1112  000246  C20F  F204         	movff	0+?_modbus_crc16,(read_holding_regs@data_
                                 crc)
  1113  00024A  C210  F205         	movff	1+?_modbus_crc16,(read_holding_regs@data_
                                 crc+1)
  1114                           	line	181
  1115                           ;modbus_rtu.c: 181: tx_buf.data_buf[3+2*num] = d
                                 ata_crc;
  1116  00024E  0102               	movlb	2	; () banked
  1117  000250  90D8               	bcf	status,0
  1118  000252  0102               	movlb	2	; () banked
  1119  000254  3506               	rlcf	((read_holding_regs@num))&0ffh,w
  1120  000256  0102               	movlb	2	; () banked
  1121  000258  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
  1122  00025A  0E04               	movlw	04h
  1123  00025C  0102               	movlb	2	; () banked
  1124  00025E  2708               	addwf	(??_read_holding_regs+7+0)&0ffh
  1125  000260  0101               	movlb	1	; () banked
  1126  000262  0E00               	movlw	low(256)
  1127  000264  0102               	movlb	2	; () banked
  1128  000266  2508               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1129  000268  6EE9               	movwf	c:fsr0l
  1130  00026A  6AEA               	clrf	1+c:fsr0l
  1131  00026C  0101               	movlb	1	; () banked
  1132  00026E  0E01               	movlw	high(256)
  1133  000270  22EA               	addwfc	1+c:fsr0l
  1134  000272  0102               	movlb	2	; () banked
  1135  000274  C204  FFEF         	movff	(read_holding_regs@data_crc),indf0
  1136                           
  1137                           	line	182
  1138                           ;modbus_rtu.c: 182: tx_buf.data_buf[4+2*num] = d
                                 ata_crc>>8;
  1139  000278  0102               	movlb	2	; () banked
  1140  00027A  90D8               	bcf	status,0
  1141  00027C  0102               	movlb	2	; () banked
  1142  00027E  3506               	rlcf	((read_holding_regs@num))&0ffh,w
  1143  000280  0102               	movlb	2	; () banked
  1144  000282  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
  1145  000284  0E05               	movlw	05h
  1146  000286  0102               	movlb	2	; () banked
  1147  000288  2708               	addwf	(??_read_holding_regs+7+0)&0ffh
  1148  00028A  0101               	movlb	1	; () banked
  1149  00028C  0E00               	movlw	low(256)
  1150  00028E  0102               	movlb	2	; () banked
  1151  000290  2508               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1152  000292  6EE9               	movwf	c:fsr0l
  1153  000294  6AEA               	clrf	1+c:fsr0l
  1154  000296  0101               	movlb	1	; () banked
  1155  000298  0E01               	movlw	high(256)
  1156  00029A  22EA               	addwfc	1+c:fsr0l
  1157  00029C  0102               	movlb	2	; () banked
  1158  00029E  0102               	movlb	2	; () banked
  1159  0002A0  5105               	movf	((read_holding_regs@data_crc+1))&0ffh,w
  1160  0002A2  6EEF               	movwf	indf0
  1161                           
  1162                           	line	183
  1163                           ;modbus_rtu.c: 183: tx_buf.tx_count = 5+2*num;
  1164  0002A4  0102               	movlb	2	; () banked
  1165  0002A6  0102               	movlb	2	; () banked
  1166  0002A8  5106               	movf	((read_holding_regs@num))&0ffh,w
  1167  0002AA  0102               	movlb	2	; () banked
  1168  0002AC  2506               	addwf	((read_holding_regs@num))&0ffh,w
  1169  0002AE  0F05               	addlw	low(05h)
  1170  0002B0  0101               	movlb	1	; () banked
  1171  0002B2  0101               	movlb	1	; () banked
  1172  0002B4  6F00               	movwf	((256))&0ffh
  1173                           	line	185
  1174                           ;modbus_rtu.c: 185: (TX1IE) = 1;
  1175  0002B6  889D               	bsf	c:(31980/8),(31980)&7	;volatile
  1176                           	line	186
  1177                           ;modbus_rtu.c: 186: }
  1178  0002B8                     l390:
  1179                           			; BSR set to: ?
  1180                           
  1181  0002B8  0012               	return
  1182                           	opt stack 0
  1183                           GLOBAL __end_of_read_holding_regs
  1184  0002BA                     	__end_of_read_holding_regs:
  1185                           	FNSIZE	_read_holding_regs,14,0
  1186                           ; =============== function _read_holding_regs en
                                 ds ============
  1187                           
  1188                           	signat	_read_holding_regs,88
  1189                           	global	_write_single_holding_reg
  1190                           	global	??_write_single_holding_reg
  1191                           	global	?_write_single_holding_reg
  1192                           
  1193                           ; *************** function _write_single_holding
                                 _reg *****************
  1194                           ; Defined at:
  1195                           ;		line 189 in file "../modbus_rtu.c"
  1196                           ; Parameters:
  1197                           ;		None
  1198                           ; Auto variables:
  1199                           ;		i           	       	type: unsigned char 
  1200                           ;		start_addr  	       	type: unsigned int 
  1201                           ; Return value:
  1202                           ;		type: void 
  1203                           ;		size: 0
  1204                           ; Registers used:
  1205                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0
  1206                           ; Tracked objects:
  1207                           ;		On entry : 0/0
  1208                           ;		On exit  : 0/0
  1209                           ;		Unchanged: 0/0
  1210                           ; Data sizes:
  1211                           ;		Autos:    3
  1212                           ;		Params:   0
  1213                           ;		Temp:     4
  1214                           ;		Total:    7
  1215                           ; This function calls:
  1216                           ;		Nothing
  1217                           ; This function is called by:
  1218                           ;		_modbus_receive
  1219                           ; This function uses a non-reentrant model
  1220                           ; 
  1221                                   psect   text5,class=CODE,space=0,reloc=2
  1222                           
  1223                           	opt lm
  1224                           	file	"../modbus_rtu.c"
  1225                           	line	189
  1226  000000                     	__size_of_write_single_holding_reg	equ	__end_of
                                 _write_single_holding_reg-_write_single_holding_
                                 reg
  1227                           ;modbus_rtu.c: 188: void write_single_holding_re
                                 g(void)
  1228                           ;modbus_rtu.c: 189: {
  1229                           	
  1230  0007CC                     _write_single_holding_reg:		; BSR set to: ?
  1231                           
  1232                           	opt stack 25
  1233                           	line	193
  1234                           ;modbus_rtu.c: 190: unsigned int start_addr;
  1235                           ;modbus_rtu.c: 191: unsigned char i;
  1236                           ;modbus_rtu.c: 193: start_addr = ((rx_buf.data_b
                                 uf[2])<<8)|(rx_buf.data_buf[3]);
  1237  0007CC  5005               	movf	(0+((c:0)+05h)),c,w
  1238  0007CE  0102               	movlb	2	; () banked
  1239  0007D0  0102               	movlb	2	; () banked
  1240  0007D2  6F03               	movwf	((write_single_holding_reg@start_addr+1))
                                 &0ffh
  1241  0007D4  5006               	movf	(0+((c:0)+06h)),c,w
  1242  0007D6  0102               	movlb	2	; () banked
  1243  0007D8  6F02               	movwf	((write_single_holding_reg@start_addr))&0
                                 ffh
  1244                           	line	195
  1245                           ;modbus_rtu.c: 195: modbus_reg[start_addr] = (rx
                                 _buf.data_buf[5])|((rx_buf.data_buf[4])<<8);
  1246  0007DA  5007               	movf	(0+((c:0)+07h)),c,w
  1247  0007DC  0102               	movlb	2	; () banked
  1248  0007DE  6F05               	movwf	(??_write_single_holding_reg+3+0+1)&0ffh
  1249  0007E0  5008               	movf	(0+((c:0)+08h)),c,w
  1250  0007E2  0102               	movlb	2	; () banked
  1251  0007E4  6F04               	movwf	(??_write_single_holding_reg+3+0)&0ffh
  1252  0007E6  90D8               	bcf	status,0
  1253  0007E8  0102               	movlb	2	; () banked
  1254  0007EA  0102               	movlb	2	; () banked
  1255  0007EC  3502               	rlcf	((write_single_holding_reg@start_addr))&0f
                                 fh,w
  1256  0007EE  0102               	movlb	2	; () banked
  1257  0007F0  6F06               	movwf	(??_write_single_holding_reg+5+0)&0ffh
  1258  0007F2  0102               	movlb	2	; () banked
  1259  0007F4  0102               	movlb	2	; () banked
  1260  0007F6  3503               	rlcf	((write_single_holding_reg@start_addr+1))&
                                 0ffh,w
  1261  0007F8  0102               	movlb	2	; () banked
  1262  0007FA  6F07               	movwf	1+(??_write_single_holding_reg+5+0)&0ffh
  1263  0007FC  0100               	movlb	0	; () banked
  1264  0007FE  0E35               	movlw	low(53)
  1265  000800  0102               	movlb	2	; () banked
  1266  000802  2506               	addwf	(??_write_single_holding_reg+5+0)&0ffh,w
  1267  000804  6EE9               	movwf	c:fsr0l
  1268  000806  0100               	movlb	0	; () banked
  1269  000808  0E00               	movlw	high(53)
  1270  00080A  0102               	movlb	2	; () banked
  1271  00080C  2107               	addwfc	(??_write_single_holding_reg+5+1)&0ffh,w
  1272  00080E  6EEA               	movwf	1+c:fsr0l
  1273  000810  C204  FFEE         	movff	??_write_single_holding_reg+3+0,postinc0
  1274  000814  C205  FFED         	movff	??_write_single_holding_reg+3+1,postdec0
  1275                           
  1276                           	line	197
  1277                           ;modbus_rtu.c: 197: for(i=0;i<rx_buf.rec_count;i
                                 ++)
  1278  000818  0102               	movlb	2	; () banked
  1279  00081A  6F04               	movwf	(??_write_single_holding_reg+3+0)&0ffh
  1280  00081C  0E00               	movlw	low(0)
  1281  00081E  0102               	movlb	2	; () banked
  1282  000820  0102               	movlb	2	; () banked
  1283  000822  6F01               	movwf	((write_single_holding_reg@i))&0ffh
  1284  000824  0102               	movlb	2	; () banked
  1285  000826  5104               	movf	(??_write_single_holding_reg+3+0)&0ffh,w
  1286  000828  EF35  F004         	goto	l399
  1287                           	line	198
  1288                           	
  1289  00082C                     l396:		; BSR set to: ?
  1290                           
  1291                           	line	199
  1292                           ;modbus_rtu.c: 198: {
  1293                           ;modbus_rtu.c: 199: tx_buf.data_buf[i] = rx_buf.
                                 data_buf[i];
  1294  00082C  C201  F204         	movff	(write_single_holding_reg@i),??_write_sin
                                 gle_holding_reg+3+0
  1295  000830  0E03               	movlw	03h
  1296  000832  0102               	movlb	2	; () banked
  1297  000834  2704               	addwf	(??_write_single_holding_reg+3+0)&0ffh
  1298  000836  0E00               	movlw	low((c:0))
  1299  000838  0102               	movlb	2	; () banked
  1300  00083A  2504               	addwf	(??_write_single_holding_reg+3+0)&0ffh,w
  1301  00083C  6EE9               	movwf	c:fsr0l
  1302  00083E  6AEA               	clrf	1+c:fsr0l
  1303  000840  0E00               	movlw	high((c:0))
  1304  000842  22EA               	addwfc	1+c:fsr0l
  1305  000844  C201  F205         	movff	(write_single_holding_reg@i),??_write_sin
                                 gle_holding_reg+4+0
  1306  000848  0E01               	movlw	01h
  1307  00084A  0102               	movlb	2	; () banked
  1308  00084C  2705               	addwf	(??_write_single_holding_reg+4+0)&0ffh
  1309  00084E  0101               	movlb	1	; () banked
  1310  000850  0E00               	movlw	low(256)
  1311  000852  0102               	movlb	2	; () banked
  1312  000854  2505               	addwf	(??_write_single_holding_reg+4+0)&0ffh,w
  1313  000856  6EE1               	movwf	c:fsr1l
  1314  000858  6AE2               	clrf	1+c:fsr1l
  1315  00085A  0101               	movlb	1	; () banked
  1316  00085C  0E01               	movlw	high(256)
  1317  00085E  22E2               	addwfc	1+c:fsr1l
  1318  000860  CFEF FFE7          	movff	indf0,indf1
  1319                           	line	197
  1320  000864  0102               	movlb	2	; () banked
  1321  000866  0102               	movlb	2	; () banked
  1322  000868  2B01               	incf	((write_single_holding_reg@i))&0ffh
  1323                           	
  1324  00086A                     l399:		; BSR set to: ?
  1325                           
  1326  00086A  5002               	movf	(0+((c:0)+02h)),c,w
  1327  00086C  0102               	movlb	2	; () banked
  1328  00086E  0102               	movlb	2	; () banked
  1329  000870  5D01               	subwf	((write_single_holding_reg@i))&0ffh,w
  1330  000872  A0D8               	btfss	status,0
  1331  000874  EF3E  F004         	goto	u1421
  1332  000878  EF40  F004         	goto	u1420
  1333  00087C                     u1421:
  1334  00087C  EF16  F004         	goto	l396
  1335  000880                     u1420:
  1336                           	
  1337  000880                     l397:		; BSR set to: ?
  1338                           
  1339                           	line	202
  1340                           ;modbus_rtu.c: 200: }
  1341                           ;modbus_rtu.c: 202: tx_buf.tx_count = rx_buf.rec
                                 _count;
  1342  000880  C002 F100          	movff	0+((c:0)+02h),(256)
  1343                           	line	205
  1344                           ;modbus_rtu.c: 205: (TX1IE) = 1;
  1345  000884  889D               	bsf	c:(31980/8),(31980)&7	;volatile
  1346                           	line	206
  1347                           ;modbus_rtu.c: 206: }
  1348  000886                     l395:
  1349                           			; BSR set to: ?
  1350                           
  1351  000886  0012               	return
  1352                           	opt stack 0
  1353                           GLOBAL __end_of_write_single_holding_reg
  1354  000888                     	__end_of_write_single_holding_reg:
  1355                           	FNSIZE	_write_single_holding_reg,7,0
  1356                           ; =============== function _write_single_holding
                                 _reg ends ============
  1357                           
  1358                           	signat	_write_single_holding_reg,88
  1359                           	global	_modbus_crc16
  1360                           	global	??_modbus_crc16
  1361                           	global	?_modbus_crc16
  1362                           
  1363                           ; *************** function _modbus_crc16 *******
                                 **********
  1364                           ; Defined at:
  1365                           ;		line 53 in file "../mbcrc.c"
  1366                           ; Parameters:
  1367                           ;		pucFrame       size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 53
  1368                           ;		 -> tx_buf(51), rx_buf(53), 
  1369                           ;		usLen          size:   2offs:   2	type: unsig
                                 ned int 
  1370                           ; Auto variables:
  1371                           ;		ucCRCHi     	       	type: unsigned char 
  1372                           ;		ucCRCLo     	       	type: unsigned char 
  1373                           ;		iIndex      	       	type: int 
  1374                           ; Return value:
  1375                           ;		type: unsigned int 
  1376                           ;		size: 2
  1377                           ; Registers used:
  1378                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat
  1379                           ; Tracked objects:
  1380                           ;		On entry : 0/0
  1381                           ;		On exit  : 0/0
  1382                           ;		Unchanged: 0/0
  1383                           ; Data sizes:
  1384                           ;		Autos:    4
  1385                           ;		Params:   4
  1386                           ;		Temp:     1
  1387                           ;		Total:    9
  1388                           ; This function calls:
  1389                           ;		Nothing
  1390                           ; This function is called by:
  1391                           ;		_modbus_receive
  1392                           ;		_read_holding_regs
  1393                           ; This function uses a non-reentrant model
  1394                           ; 
  1395                                   psect   text6,class=CODE,space=0,reloc=2
  1396                           
  1397                           	opt lm
  1398                           	file	"../mbcrc.c"
  1399                           	line	53
  1400  000000                     	__size_of_modbus_crc16	equ	__end_of_modbus_crc1
                                 6-_modbus_crc16
  1401                           ;mbcrc.h: 34: unsigned int modbus_crc16( unsigne
                                 d char * pucFrame, unsigned int usLen );
  1402                           ;mbcrc.c: 2: static const unsigned char aucCRCHi
                                 [] = {
  1403                           ;mbcrc.c: 3: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1404                           ;mbcrc.c: 4: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  1405                           ;mbcrc.c: 5: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1406                           ;mbcrc.c: 6: 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1,
                                  0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  1407                           ;mbcrc.c: 7: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1408                           	
  1409  000888                     _modbus_crc16:		; BSR set to: ?
  1410                           
  1411                           	opt stack 24
  1412                           	line	54
  1413  000888  0102               	movlb	2	; () banked
  1414  00088A  0102               	movlb	2	; () banked
  1415  00088C  6913               	setf	((modbus_crc16@ucCRCHi))&0ffh
  1416                           	line	55
  1417                           ;mbcrc.c: 55: unsigned char ucCRCLo = 0xFF;
  1418  00088E  0102               	movlb	2	; () banked
  1419  000890  0102               	movlb	2	; () banked
  1420  000892  6914               	setf	((modbus_crc16@ucCRCLo))&0ffh
  1421                           	line	58
  1422                           ;mbcrc.c: 56: int iIndex;
  1423                           ;mbcrc.c: 58: while( usLen-- )
  1424  000894  EF7F  F004         	goto	l2
  1425                           	
  1426  000898                     l3:		; BSR set to: ?
  1427                           
  1428                           	line	60
  1429  000898  C20F  FFE9         	movff	(modbus_crc16@pucFrame),fsr0l
  1430  00089C  C210  FFEA         	movff	(modbus_crc16@pucFrame+1),fsr0h
  1431  0008A0  50EF               	movf	indf0,w
  1432  0008A2  0102               	movlb	2	; () banked
  1433  0008A4  0102               	movlb	2	; () banked
  1434  0008A6  1914               	xorwf	((modbus_crc16@ucCRCLo))&0ffh,w
  1435  0008A8  0102               	movlb	2	; () banked
  1436  0008AA  6F17               	movwf	(??_modbus_crc16+4+0)&0ffh
  1437  0008AC  0102               	movlb	2	; () banked
  1438  0008AE  5117               	movf	((??_modbus_crc16+4+0))&0ffh,w
  1439  0008B0  0102               	movlb	2	; () banked
  1440  0008B2  0102               	movlb	2	; () banked
  1441  0008B4  6F15               	movwf	((modbus_crc16@iIndex))&0ffh
  1442  0008B6  0102               	movlb	2	; () banked
  1443  0008B8  6B16               	clrf	((modbus_crc16@iIndex+1))&0ffh
  1444                           ;mbcrc.c: 59: {
  1445                           ;mbcrc.c: 60: iIndex = ucCRCLo ^ *( pucFrame++ )
                                 ;
  1446  0008BA  0102               	movlb	2	; () banked
  1447  0008BC  0102               	movlb	2	; () banked
  1448  0008BE  4B0F               	infsnz	((modbus_crc16@pucFrame))&0ffh
  1449  0008C0  2B10               	incf	((modbus_crc16@pucFrame+1))&0ffh
  1450                           	line	61
  1451                           ;mbcrc.c: 61: ucCRCLo = ( unsigned char )( ucCRC
                                 Hi ^ aucCRCHi[iIndex] );
  1452  0008C2  0EFE               	movlw	low((_aucCRCHi))
  1453  0008C4  0102               	movlb	2	; () banked
  1454  0008C6  0102               	movlb	2	; () banked
  1455  0008C8  2515               	addwf	((modbus_crc16@iIndex))&0ffh,w
  1456  0008CA  6EF6               	movwf	tblptrl
  1457  0008CC  0E7D               	movlw	high((_aucCRCHi))
  1458  0008CE  0102               	movlb	2	; () banked
  1459  0008D0  2116               	addwfc	((modbus_crc16@iIndex+1))&0ffh,w
  1460  0008D2  6EF7               	movwf	tblptrh
  1461  0008D4  0008               	tblrd	*
  1462                           	
  1463  0008D6  50F5               	movf	tablat,w
  1464                           
  1465  0008D8  0102               	movlb	2	; () banked
  1466  0008DA  0102               	movlb	2	; () banked
  1467  0008DC  1913               	xorwf	((modbus_crc16@ucCRCHi))&0ffh,w
  1468  0008DE  0102               	movlb	2	; () banked
  1469  0008E0  0102               	movlb	2	; () banked
  1470  0008E2  6F14               	movwf	((modbus_crc16@ucCRCLo))&0ffh
  1471                           	line	62
  1472                           ;mbcrc.c: 62: ucCRCHi = aucCRCLo[iIndex];
  1473  0008E4  0EFE               	movlw	low((_aucCRCLo))
  1474  0008E6  0102               	movlb	2	; () banked
  1475  0008E8  0102               	movlb	2	; () banked
  1476  0008EA  2515               	addwf	((modbus_crc16@iIndex))&0ffh,w
  1477  0008EC  6EF6               	movwf	tblptrl
  1478  0008EE  0E7E               	movlw	high((_aucCRCLo))
  1479  0008F0  0102               	movlb	2	; () banked
  1480  0008F2  2116               	addwfc	((modbus_crc16@iIndex+1))&0ffh,w
  1481  0008F4  6EF7               	movwf	tblptrh
  1482  0008F6  0008               	tblrd	*
  1483                           	
  1484  0008F8  0102               	movlb	2	; () banked
  1485  0008FA  CFF5 F213          	movff	tablat,(modbus_crc16@ucCRCHi)
  1486                           	line	63
  1487                           	
  1488  0008FE                     l2:		; BSR set to: ?
  1489                           
  1490                           	line	58
  1491  0008FE  0102               	movlb	2	; () banked
  1492  000900  0102               	movlb	2	; () banked
  1493  000902  0711               	decf	((modbus_crc16@usLen))&0ffh
  1494  000904  A0D8               	btfss	status,0
  1495  000906  0712               	decf	((modbus_crc16@usLen+1))&0ffh
  1496  000908  0102               	movlb	2	; () banked
  1497  00090A  2911               	incf	((modbus_crc16@usLen))&0ffh,w
  1498  00090C  B4D8               	btfsc	status,2
  1499  00090E  2912               	incf ((modbus_crc16@usLen+1))&0ffh,w
  1500                           
  1501  000910  A4D8               	btfss	status,2
  1502  000912  EF8D  F004         	goto	u1431
  1503  000916  EF8F  F004         	goto	u1430
  1504  00091A                     u1431:
  1505  00091A  EF4C  F004         	goto	l3
  1506  00091E                     u1430:
  1507                           	
  1508  00091E                     l4:		; BSR set to: ?
  1509                           
  1510                           	line	64
  1511  00091E  0102               	movlb	2	; () banked
  1512  000920  0102               	movlb	2	; () banked
  1513  000922  5113               	movf	((modbus_crc16@ucCRCHi))&0ffh,w
  1514  000924  0102               	movlb	2	; () banked
  1515  000926  0102               	movlb	2	; () banked
  1516  000928  6F10               	movwf	((?_modbus_crc16+1))&0ffh
  1517  00092A  0102               	movlb	2	; () banked
  1518  00092C  0102               	movlb	2	; () banked
  1519  00092E  5114               	movf	((modbus_crc16@ucCRCLo))&0ffh,w
  1520  000930  0102               	movlb	2	; () banked
  1521  000932  6F0F               	movwf	((?_modbus_crc16))&0ffh
  1522  000934  EF9C  F004         	goto	l1
  1523                           	line	65
  1524                           ;mbcrc.c: 65: }
  1525  000938                     l1:
  1526                           			; BSR set to: ?
  1527                           
  1528  000938  0012               	return
  1529                           	opt stack 0
  1530                           GLOBAL __end_of_modbus_crc16
  1531  00093A                     	__end_of_modbus_crc16:
  1532                           	FNSIZE	_modbus_crc16,5,4
  1533                           ; =============== function _modbus_crc16 ends ==
                                 ==========
  1534                           
  1535                           	signat	_modbus_crc16,8314
  1536                           	global	_my_isr
  1537                           	global	??_my_isr
  1538                           	global	?_my_isr
  1539                           
  1540                           ; *************** function _my_isr *************
                                 ****
  1541                           ; Defined at:
  1542                           ;		line 119 in file "../main.c"
  1543                           ; Parameters:
  1544                           ;		None
  1545                           ; Auto variables:
  1546                           ;		None
  1547                           ; Return value:
  1548                           ;		type: void 
  1549                           ;		size: 0
  1550                           ; Registers used:
  1551                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  1552                           ; Tracked objects:
  1553                           ;		On entry : 0/0
  1554                           ;		On exit  : 0/0
  1555                           ;		Unchanged: 0/0
  1556                           ; Data sizes:
  1557                           ;		Autos:    0
  1558                           ;		Params:   0
  1559                           ;		Temp:    14
  1560                           ;		Total:   14
  1561                           ; This function calls:
  1562                           ;		_rec_isr
  1563                           ;		_tx_isr
  1564                           ;		_timer35_isr
  1565                           ;		_timer3_isr
  1566                           ;		_pv1_isr
  1567                           ; This function is called by:
  1568                           ;		Interrupt level 2
  1569                           ; This function uses a non-reentrant model
  1570                           ; 
  1571                                   psect   text7,class=CODE,space=0,reloc=2
  1572                           
  1573                           	opt lm
  1574                           	file	"../main.c"
  1575                           	line	119
  1576  000000                     	__size_of_my_isr	equ	__end_of_my_isr-_my_isr
  1577                           ;main.c: 118: void interrupt my_isr(void)
  1578                           ;main.c: 119: {
  1579                           	
  1580  0009D8                     _my_isr:		; BSR set to: ?
  1581                           
  1582                           	opt stack 31
  1583                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  1584                           	global	int_func
  1585  000008                     int_func:
  1586                                   psect   intcode
  1587  000008  CFFA F218          	movff	pclat+0,??_my_isr+0
  1588  00000C  CFFB F219          	movff	pclat+1,??_my_isr+1
  1589  000010  CFE9 F21A          	movff	fsr0l+0,??_my_isr+2
  1590  000014  EFEC  F004         	goto	_my_isr
  1591                                   psect   text7
  1592  0009D8  CFEA F21B          	movff	fsr0h+0,??_my_isr+3
  1593  0009DC  CFE1 F21C          	movff	fsr1l+0,??_my_isr+4
  1594  0009E0  CFE2 F21D          	movff	fsr1h+0,??_my_isr+5
  1595  0009E4  CFD9 F21E          	movff	fsr2l+0,??_my_isr+6
  1596  0009E8  CFDA F21F          	movff	fsr2h+0,??_my_isr+7
  1597  0009EC  CFF3 F220          	movff	prodl+0,??_my_isr+8
  1598  0009F0  CFF4 F221          	movff	prodh+0,??_my_isr+9
  1599  0009F4  CFF6 F222          	movff	tblptrl+0,??_my_isr+10
  1600  0009F8  CFF7 F223          	movff	tblptrh+0,??_my_isr+11
  1601  0009FC  CFF8 F224          	movff	tblptru+0,??_my_isr+12
  1602  000A00  CFF5 F225          	movff	tablat+0,??_my_isr+13
  1603                           	line	120
  1604  000A04  EC54  F002         	call	_rec_isr	;wreg free
  1605                           	line	121
  1606                           ;main.c: 121: tx_isr();
  1607  000A08  EC9D  F004         	call	_tx_isr	;wreg free
  1608                           	line	122
  1609                           ;main.c: 122: timer35_isr();
  1610  000A0C  EC65  F005         	call	_timer35_isr	;wreg free
  1611                           	line	123
  1612                           ;main.c: 123: timer3_isr();
  1613  000A10  EC9D  F005         	call	_timer3_isr	;wreg free
  1614                           	line	124
  1615                           ;main.c: 124: pv1_isr();
  1616  000A14  ECCC  F005         	call	_pv1_isr	;wreg free
  1617                           	line	125
  1618                           ;main.c: 125: }
  1619  000A18                     i2l761:
  1620                           			; BSR set to: ?
  1621                           
  1622  000A18  C225  FFF5         	movff	??_my_isr+13,tablat+0
  1623  000A1C  C224  FFF8         	movff	??_my_isr+12,tblptru+0
  1624  000A20  C223  FFF7         	movff	??_my_isr+11,tblptrh+0
  1625  000A24  C222  FFF6         	movff	??_my_isr+10,tblptrl+0
  1626  000A28  C221  FFF4         	movff	??_my_isr+9,prodh+0
  1627  000A2C  C220  FFF3         	movff	??_my_isr+8,prodl+0
  1628  000A30  C21F  FFDA         	movff	??_my_isr+7,fsr2h+0
  1629  000A34  C21E  FFD9         	movff	??_my_isr+6,fsr2l+0
  1630  000A38  C21D  FFE2         	movff	??_my_isr+5,fsr1h+0
  1631  000A3C  C21C  FFE1         	movff	??_my_isr+4,fsr1l+0
  1632  000A40  C21B  FFEA         	movff	??_my_isr+3,fsr0h+0
  1633  000A44  C21A  FFE9         	movff	??_my_isr+2,fsr0l+0
  1634  000A48  C219  FFFB         	movff	??_my_isr+1,pclat+1
  1635  000A4C  C218  FFFA         	movff	??_my_isr+0,pclat+0
  1636  000A50  0011               	retfie f
  1637                           	opt stack 0
  1638                           GLOBAL __end_of_my_isr
  1639  000A52                     	__end_of_my_isr:
  1640                           	FNSIZE	_my_isr,14,0
  1641                           ; =============== function _my_isr ends ========
                                 ====
  1642                           
  1643                           	signat	_my_isr,88
  1644                                   psect   text8,class=CODE,space=0,reloc=2
  1645                           	global	intlevel2
  1646                           
  1647                           	opt lm
  1648                           	FNBREAK _timer3_isr,intlevel2
  1649                           	global	_timer3_isr
  1650                           	global	??_timer3_isr
  1651                           	global	?_timer3_isr
  1652                           
  1653                           ; *************** function _timer3_isr *********
                                 ********
  1654                           ; Defined at:
  1655                           ;		line 64 in file "../main.c"
  1656                           ; Parameters:
  1657                           ;		None
  1658                           ; Auto variables:
  1659                           ;		None
  1660                           ; Return value:
  1661                           ;		type: void 
  1662                           ;		size: 0
  1663                           ; Registers used:
  1664                           ;		wreg, status,2, status,0
  1665                           ; Tracked objects:
  1666                           ;		On entry : 0/0
  1667                           ;		On exit  : 0/0
  1668                           ;		Unchanged: 0/0
  1669                           ; Data sizes:
  1670                           ;		Autos:    0
  1671                           ;		Params:   0
  1672                           ;		Temp:     0
  1673                           ;		Total:    0
  1674                           ; This function calls:
  1675                           ;		Nothing
  1676                           ; This function is called by:
  1677                           ;		_my_isr
  1678                           ; This function uses a non-reentrant model
  1679                           ; 
  1680                           	file	"../main.c"
  1681                           	line	64
  1682  000000                     	__size_of_timer3_isr	equ	__end_of_timer3_isr-_t
                                 imer3_isr
  1683                           ;main.c: 63: void timer3_isr(void)
  1684                           ;main.c: 64: {
  1685                           	
  1686  000B3A                     _timer3_isr:		; BSR set to: ?
  1687                           
  1688                           	opt stack 30
  1689                           	line	66
  1690  000B3A  A2A0               	btfss	c:(32001/8),(32001)&7	;volatile
  1691  000B3C  EFA2  F005         	goto	i2u1441
  1692  000B40  EFA4  F005         	goto	i2u1440
  1693  000B44                     i2u1441:
  1694  000B44  EFCB  F005         	goto	i2l753
  1695  000B48                     i2u1440:
  1696  000B48  A2A1               	btfss	c:(32009/8),(32009)&7	;volatile
  1697  000B4A  EFA9  F005         	goto	i2u1451
  1698  000B4E  EFAB  F005         	goto	i2u1450
  1699  000B52                     i2u1451:
  1700  000B52  EFCB  F005         	goto	i2l753
  1701  000B56                     i2u1450:
  1702                           	line	68
  1703                           ;main.c: 67: {
  1704                           ;main.c: 68: TMR3IF = 0;
  1705  000B56  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
  1706                           	line	69
  1707                           ;main.c: 69: TMR3 = 65535-11059;
  1708  000B58  0ECC               	movlw	low(0D4CCh)
  1709  000B5A  6EB2               	movwf	((c:4018)),c	;volatile
  1710  000B5C  0ED4               	movlw	high(0D4CCh)
  1711  000B5E  6EB3               	movwf	((c:4018+1)),c	;volatile
  1712                           	line	70
  1713                           ;main.c: 70: count_10ms++;
  1714  000B60  0100               	movlb	0	; () banked
  1715  000B62  0100               	movlb	0	; () banked
  1716  000B64  4BFD               	infsnz	((253))&0ffh
  1717  000B66  2BFE               	incf	((253+1))&0ffh
  1718                           	line	71
  1719                           ;main.c: 71: if(count_10ms==6000)
  1720  000B68  0100               	movlb	0	; () banked
  1721  000B6A  0100               	movlb	0	; () banked
  1722  000B6C  51FE               	movf	((253+1))&0ffh,w
  1723  000B6E  0A17               	xorlw	23
  1724  000B70  0E70               	movlw	112
  1725  000B72  B4D8               	btfsc	status,2
  1726  000B74  19FD               	xorwf ((253))&0ffh,w
  1727                           
  1728  000B76  A4D8               	btfss	status,2
  1729  000B78  EFC0  F005         	goto	i2u1461
  1730  000B7C  EFC2  F005         	goto	i2u1460
  1731  000B80                     i2u1461:
  1732  000B80  EFCB  F005         	goto	i2l753
  1733  000B84                     i2u1460:
  1734                           	line	73
  1735                           ;main.c: 72: {
  1736                           ;main.c: 73: modbus_reg[0] = 0;
  1737  000B84  0E00               	movlw	low(0)
  1738  000B86  6E35               	movwf	((c:53)),c
  1739  000B88  0E00               	movlw	high(0)
  1740  000B8A  6E36               	movwf	((c:53+1)),c
  1741                           	line	74
  1742                           ;main.c: 74: count_10ms--;
  1743  000B8C  0100               	movlb	0	; () banked
  1744  000B8E  0100               	movlb	0	; () banked
  1745  000B90  07FD               	decf	((253))&0ffh
  1746  000B92  A0D8               	btfss	status,0
  1747  000B94  07FE               	decf	((253+1))&0ffh
  1748                           	line	75
  1749                           	
  1750  000B96                     i2l754:		; BSR set to: ?
  1751                           
  1752                           	line	76
  1753                           	
  1754  000B96                     i2l753:		; BSR set to: ?
  1755                           
  1756                           	line	77
  1757                           ;main.c: 75: }
  1758                           ;main.c: 76: }
  1759                           ;main.c: 77: }
  1760  000B96                     i2l752:
  1761                           			; BSR set to: ?
  1762                           
  1763  000B96  0012               	return
  1764                           	opt stack 0
  1765                           GLOBAL __end_of_timer3_isr
  1766  000B98                     	__end_of_timer3_isr:
  1767                           	FNSIZE	_timer3_isr,0,0
  1768                           ; =============== function _timer3_isr ends ====
                                 ========
  1769                           
  1770                           	signat	_timer3_isr,88
  1771                                   psect   text9,class=CODE,space=0,reloc=2
  1772                           	global	intlevel2
  1773                           
  1774                           	opt lm
  1775                           	FNBREAK _pv1_isr,intlevel2
  1776                           	global	_pv1_isr
  1777                           	global	??_pv1_isr
  1778                           	global	?_pv1_isr
  1779                           
  1780                           ; *************** function _pv1_isr ************
                                 *****
  1781                           ; Defined at:
  1782                           ;		line 186 in file "../main.c"
  1783                           ; Parameters:
  1784                           ;		None
  1785                           ; Auto variables:
  1786                           ;		None
  1787                           ; Return value:
  1788                           ;		type: void 
  1789                           ;		size: 0
  1790                           ; Registers used:
  1791                           ;		wreg, status,2, status,0, cstack
  1792                           ; Tracked objects:
  1793                           ;		On entry : 0/0
  1794                           ;		On exit  : 0/0
  1795                           ;		Unchanged: 0/0
  1796                           ; Data sizes:
  1797                           ;		Autos:    0
  1798                           ;		Params:   0
  1799                           ;		Temp:     0
  1800                           ;		Total:    0
  1801                           ; This function calls:
  1802                           ;		_get_speed
  1803                           ; This function is called by:
  1804                           ;		_my_isr
  1805                           ; This function uses a non-reentrant model
  1806                           ; 
  1807                           	file	"../main.c"
  1808                           	line	186
  1809  000000                     	__size_of_pv1_isr	equ	__end_of_pv1_isr-_pv1_isr
  1810                           ;main.c: 185: void pv1_isr(void)
  1811                           ;main.c: 186: {
  1812                           	
  1813  000B98                     _pv1_isr:		; BSR set to: ?
  1814                           
  1815                           	opt stack 30
  1816                           	line	187
  1817                           ;main.c: 187: if(INT0IF&&INT0IE)
  1818  000B98  A2F2               	btfss	c:(32657/8),(32657)&7	;volatile
  1819  000B9A  EFD1  F005         	goto	i2u1491
  1820  000B9E  EFD3  F005         	goto	i2u1490
  1821  000BA2                     i2u1491:
  1822  000BA2  EFDD  F005         	goto	i2l774
  1823  000BA6                     i2u1490:
  1824  000BA6  A8F2               	btfss	c:(32660/8),(32660)&7	;volatile
  1825  000BA8  EFD8  F005         	goto	i2u1501
  1826  000BAC  EFDA  F005         	goto	i2u1500
  1827  000BB0                     i2u1501:
  1828  000BB0  EFDD  F005         	goto	i2l774
  1829  000BB4                     i2u1500:
  1830                           	line	189
  1831                           ;main.c: 188: {
  1832                           ;main.c: 189: INT0IF = 0;
  1833  000BB4  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
  1834                           	line	190
  1835                           ;main.c: 190: get_speed();
  1836  000BB6  EC69  F003         	call	_get_speed	;wreg free
  1837                           	line	191
  1838                           	
  1839  000BBA                     i2l774:		; BSR set to: ?
  1840                           
  1841                           	line	192
  1842                           ;main.c: 191: }
  1843                           ;main.c: 192: }
  1844  000BBA                     i2l773:
  1845                           			; BSR set to: ?
  1846                           
  1847  000BBA  0012               	return
  1848                           	opt stack 0
  1849                           GLOBAL __end_of_pv1_isr
  1850  000BBC                     	__end_of_pv1_isr:
  1851                           	FNSIZE	_pv1_isr,0,0
  1852                           ; =============== function _pv1_isr ends =======
                                 =====
  1853                           
  1854                           	signat	_pv1_isr,88
  1855                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  1856                           	global	intlevel2
  1857                           
  1858                           	opt lm
  1859                           	FNBREAK _timer35_isr,intlevel2
  1860                           	global	_timer35_isr
  1861                           	global	??_timer35_isr
  1862                           	global	?_timer35_isr
  1863                           
  1864                           ; *************** function _timer35_isr ********
                                 *********
  1865                           ; Defined at:
  1866                           ;		line 90 in file "../modbus_rtu.c"
  1867                           ; Parameters:
  1868                           ;		None
  1869                           ; Auto variables:
  1870                           ;		None
  1871                           ; Return value:
  1872                           ;		type: void 
  1873                           ;		size: 0
  1874                           ; Registers used:
  1875                           ;		wreg, status,2, status,0
  1876                           ; Tracked objects:
  1877                           ;		On entry : 0/0
  1878                           ;		On exit  : 0/0
  1879                           ;		Unchanged: 0/0
  1880                           ; Data sizes:
  1881                           ;		Autos:    0
  1882                           ;		Params:   0
  1883                           ;		Temp:     1
  1884                           ;		Total:    1
  1885                           ; This function calls:
  1886                           ;		Nothing
  1887                           ; This function is called by:
  1888                           ;		_my_isr
  1889                           ; This function uses a non-reentrant model
  1890                           ; 
  1891                           	file	"../modbus_rtu.c"
  1892                           	line	90
  1893  000000                     	__size_of_timer35_isr	equ	__end_of_timer35_isr-
                                 _timer35_isr
  1894                           ;modbus_rtu.c: 89: void timer35_isr(void)
  1895                           ;modbus_rtu.c: 90: {
  1896                           	
  1897  000ACA                     _timer35_isr:		; BSR set to: ?
  1898                           
  1899                           	opt stack 30
  1900                           	line	91
  1901  000ACA  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
  1902  000ACC  EF6A  F005         	goto	i2u1571
  1903  000AD0  EF6C  F005         	goto	i2u1570
  1904  000AD4                     i2u1571:
  1905  000AD4  EF9C  F005         	goto	i2l371
  1906  000AD8                     i2u1570:
  1907  000AD8  A09D               	btfss	c:(31976/8),(31976)&7	;volatile
  1908  000ADA  EF71  F005         	goto	i2u1581
  1909  000ADE  EF73  F005         	goto	i2u1580
  1910  000AE2                     i2u1581:
  1911  000AE2  EF9C  F005         	goto	i2l371
  1912  000AE6                     i2u1580:
  1913                           	line	94
  1914                           ;modbus_rtu.c: 92: {
  1915                           ;modbus_rtu.c: 94: switch(rx_state)
  1916  000AE6  EF91  F005         	goto	i2l373
  1917                           	line	96
  1918                           ;modbus_rtu.c: 95: {
  1919                           ;modbus_rtu.c: 96: case RX_STATE_INIT:
  1920                           	
  1921  000AEA                     i2l374:		; BSR set to: ?
  1922                           
  1923                           	line	97
  1924                           ;modbus_rtu.c: 97: rx_state = RX_STATE_IDLE;
  1925  000AEA  0102               	movlb	2	; () banked
  1926  000AEC  6F26               	movwf	(??_timer35_isr+0+0)&0ffh
  1927  000AEE  0E01               	movlw	low(01h)
  1928  000AF0  0100               	movlb	0	; () banked
  1929  000AF2  0100               	movlb	0	; () banked
  1930  000AF4  6FFF               	movwf	((255))&0ffh
  1931  000AF6  0102               	movlb	2	; () banked
  1932  000AF8  5126               	movf	(??_timer35_isr+0+0)&0ffh,w
  1933                           	line	98
  1934                           ;modbus_rtu.c: 98: break;
  1935  000AFA  EF9A  F005         	goto	i2l372
  1936                           	line	99
  1937                           ;modbus_rtu.c: 99: case RX_STATE_RECEIVE:
  1938                           	
  1939  000AFE                     i2l375:		; BSR set to: ?
  1940                           
  1941                           	line	100
  1942                           ;modbus_rtu.c: 100: rx_state = RX_STATE_IDLE;
  1943  000AFE  0102               	movlb	2	; () banked
  1944  000B00  6F26               	movwf	(??_timer35_isr+0+0)&0ffh
  1945  000B02  0E01               	movlw	low(01h)
  1946  000B04  0100               	movlb	0	; () banked
  1947  000B06  0100               	movlb	0	; () banked
  1948  000B08  6FFF               	movwf	((255))&0ffh
  1949  000B0A  0102               	movlb	2	; () banked
  1950  000B0C  5126               	movf	(??_timer35_isr+0+0)&0ffh,w
  1951                           	line	101
  1952                           ;modbus_rtu.c: 101: rx_buf.frame_ok = 1;
  1953  000B0E  0102               	movlb	2	; () banked
  1954  000B10  6F26               	movwf	(??_timer35_isr+0+0)&0ffh
  1955  000B12  0E01               	movlw	low(01h)
  1956  000B14  6E00               	movwf	((c:0)),c
  1957  000B16  0102               	movlb	2	; () banked
  1958  000B18  5126               	movf	(??_timer35_isr+0+0)&0ffh,w
  1959                           	line	102
  1960                           ;modbus_rtu.c: 102: break;
  1961  000B1A  EF9A  F005         	goto	i2l372
  1962                           	line	103
  1963                           ;modbus_rtu.c: 103: default:
  1964                           	
  1965  000B1E                     i2l376:		; BSR set to: ?
  1966                           
  1967                           	line	104
  1968                           ;modbus_rtu.c: 104: break;
  1969  000B1E  EF9A  F005         	goto	i2l372
  1970                           	line	94
  1971                           	
  1972  000B22                     i2l373:		; BSR set to: ?
  1973                           
  1974  000B22  0100               	movlb	0	; () banked
  1975  000B24  0100               	movlb	0	; () banked
  1976  000B26  51FF               	movf	((255))&0ffh,w
  1977  000B28  0A00               	xorlw	0 ^ 0
  1978  000B2A  E0DF               	bz	i2l374
  1979  000B2C  0A02               	xorlw	2 ^ 0
  1980  000B2E  E0E7               	bz	i2l375
  1981  000B30  EF8F  F005         	goto	i2l376
  1982                           
  1983                           	line	105
  1984                           	
  1985  000B34                     i2l372:		; BSR set to: ?
  1986                           
  1987                           	line	106
  1988                           ;modbus_rtu.c: 106: TMR1ON = 0;
  1989  000B34  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  1990                           	line	108
  1991                           ;modbus_rtu.c: 108: TMR1IF=0;
  1992  000B36  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  1993                           	line	110
  1994                           	
  1995  000B38                     i2l371:		; BSR set to: ?
  1996                           
  1997                           	line	111
  1998                           ;modbus_rtu.c: 110: }
  1999                           ;modbus_rtu.c: 111: }
  2000  000B38                     i2l370:
  2001                           			; BSR set to: ?
  2002                           
  2003  000B38  0012               	return
  2004                           	opt stack 0
  2005                           GLOBAL __end_of_timer35_isr
  2006  000B3A                     	__end_of_timer35_isr:
  2007                           	FNSIZE	_timer35_isr,1,0
  2008                           ; =============== function _timer35_isr ends ===
                                 =========
  2009                           
  2010                           	signat	_timer35_isr,88
  2011                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  2012                           	global	intlevel2
  2013                           
  2014                           	opt lm
  2015                           	FNBREAK _rec_isr,intlevel2
  2016                           	global	_rec_isr
  2017                           	global	??_rec_isr
  2018                           	global	?_rec_isr
  2019                           
  2020                           ; *************** function _rec_isr ************
                                 *****
  2021                           ; Defined at:
  2022                           ;		line 30 in file "../modbus_rtu.c"
  2023                           ; Parameters:
  2024                           ;		None
  2025                           ; Auto variables:
  2026                           ;		rec_data    	       	type: unsigned char 
  2027                           ; Return value:
  2028                           ;		type: void 
  2029                           ;		size: 0
  2030                           ; Registers used:
  2031                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2032                           ; Tracked objects:
  2033                           ;		On entry : 0/0
  2034                           ;		On exit  : 0/0
  2035                           ;		Unchanged: 0/0
  2036                           ; Data sizes:
  2037                           ;		Autos:    1
  2038                           ;		Params:   0
  2039                           ;		Temp:     1
  2040                           ;		Total:    2
  2041                           ; This function calls:
  2042                           ;		Nothing
  2043                           ; This function is called by:
  2044                           ;		_my_isr
  2045                           ; This function uses a non-reentrant model
  2046                           ; 
  2047                           	file	"../modbus_rtu.c"
  2048                           	line	30
  2049  000000                     	__size_of_rec_isr	equ	__end_of_rec_isr-_rec_isr
  2050                           ;modbus_rtu.c: 22: RX_STATE rx_state = RX_STATE_
                                 INIT;
  2051                           ;modbus_rtu.c: 24: unsigned int modbus_reg[100];
  2052                           ;modbus_rtu.c: 29: void rec_isr(void)
  2053                           ;modbus_rtu.c: 30: {
  2054                           	
  2055  0004A8                     _rec_isr:		; BSR set to: ?
  2056                           
  2057                           	opt stack 30
  2058                           	line	31
  2059                           ;modbus_rtu.c: 31: unsigned char rec_data = 0;
  2060  0004A8  0102               	movlb	2	; () banked
  2061  0004AA  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2062  0004AC  0E00               	movlw	low(0)
  2063  0004AE  0102               	movlb	2	; () banked
  2064  0004B0  0102               	movlb	2	; () banked
  2065  0004B2  6F26               	movwf	((rec_isr@rec_data))&0ffh
  2066  0004B4  0102               	movlb	2	; () banked
  2067  0004B6  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2068                           	line	33
  2069                           ;modbus_rtu.c: 33: if(((RC1IE)&&(RC1IF)))
  2070  0004B8  AA9D               	btfss	c:(31981/8),(31981)&7	;volatile
  2071  0004BA  EF61  F002         	goto	i2u1281
  2072  0004BE  EF63  F002         	goto	i2u1280
  2073  0004C2                     i2u1281:
  2074  0004C2  EFE3  F002         	goto	i2l357
  2075  0004C6                     i2u1280:
  2076  0004C6  AA9E               	btfss	c:(31989/8),(31989)&7	;volatile
  2077  0004C8  EF68  F002         	goto	i2u1291
  2078  0004CC  EF6A  F002         	goto	i2u1290
  2079  0004D0                     i2u1291:
  2080  0004D0  EFE3  F002         	goto	i2l357
  2081  0004D4                     i2u1290:
  2082                           	line	37
  2083                           ;modbus_rtu.c: 34: {
  2084                           ;modbus_rtu.c: 37: rec_data = (RC1REG);
  2085  0004D4  CFAE F226          	movff	(c:4014),(rec_isr@rec_data)	;volatile
  2086                           	line	39
  2087                           ;modbus_rtu.c: 39: switch(rx_state)
  2088  0004D8  EFD8  F002         	goto	i2l359
  2089                           	line	41
  2090                           ;modbus_rtu.c: 40: {
  2091                           ;modbus_rtu.c: 41: case RX_STATE_INIT:
  2092                           	
  2093  0004DC                     i2l360:		; BSR set to: ?
  2094                           
  2095                           	line	42
  2096                           ;modbus_rtu.c: 42: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2097  0004DC  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2098  0004DE  0E7F               	movlw	low(0627Fh)
  2099  0004E0  6ECE               	movwf	((c:4046)),c	;volatile
  2100  0004E2  0E62               	movlw	high(0627Fh)
  2101  0004E4  6ECF               	movwf	((c:4046+1)),c	;volatile
  2102  0004E6  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2103  0004E8  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2104  0004EA  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2105                           	line	43
  2106                           ;modbus_rtu.c: 43: rx_buf.rec_count = 0;
  2107  0004EC  0102               	movlb	2	; () banked
  2108  0004EE  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2109  0004F0  0E00               	movlw	low(0)
  2110  0004F2  6E02               	movwf	(0+((c:0)+02h)),c
  2111  0004F4  0102               	movlb	2	; () banked
  2112  0004F6  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2113                           	line	44
  2114                           ;modbus_rtu.c: 44: rx_buf.frame_ok = 0;
  2115  0004F8  0102               	movlb	2	; () banked
  2116  0004FA  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2117  0004FC  0E00               	movlw	low(0)
  2118  0004FE  6E00               	movwf	((c:0)),c
  2119  000500  0102               	movlb	2	; () banked
  2120  000502  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2121                           	line	45
  2122                           ;modbus_rtu.c: 45: break;
  2123  000504  EFE3  F002         	goto	i2l357
  2124                           	line	46
  2125                           ;modbus_rtu.c: 46: case RX_STATE_IDLE:
  2126                           	
  2127  000508                     i2l361:		; BSR set to: ?
  2128                           
  2129                           	line	47
  2130                           ;modbus_rtu.c: 47: rx_buf.data_buf[rx_buf.rec_co
                                 unt++] = rec_data;
  2131  000508  EE00 F002          	lfsr	0,(c:0)+02h
  2132  00050C  CFEF F227          	movff	indf0,??_rec_isr+1+0
  2133  000510  0E01               	movlw	01h
  2134  000512  26EF               	addwf	indf0
  2135  000514  0E03               	movlw	03h
  2136  000516  0102               	movlb	2	; () banked
  2137  000518  2727               	addwf	(??_rec_isr+1+0)&0ffh
  2138  00051A  0E00               	movlw	low((c:0))
  2139  00051C  0102               	movlb	2	; () banked
  2140  00051E  2527               	addwf	(??_rec_isr+1+0)&0ffh,w
  2141  000520  6EE9               	movwf	c:fsr0l
  2142  000522  6AEA               	clrf	1+c:fsr0l
  2143  000524  0E00               	movlw	high((c:0))
  2144  000526  22EA               	addwfc	1+c:fsr0l
  2145  000528  0102               	movlb	2	; () banked
  2146  00052A  C226  FFEF         	movff	(rec_isr@rec_data),indf0
  2147                           
  2148                           	line	48
  2149                           ;modbus_rtu.c: 48: rx_state = RX_STATE_RECEIVE;
  2150  00052E  0102               	movlb	2	; () banked
  2151  000530  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2152  000532  0E02               	movlw	low(02h)
  2153  000534  0100               	movlb	0	; () banked
  2154  000536  0100               	movlb	0	; () banked
  2155  000538  6FFF               	movwf	((255))&0ffh
  2156  00053A  0102               	movlb	2	; () banked
  2157  00053C  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2158                           	line	49
  2159                           ;modbus_rtu.c: 49: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2160  00053E  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2161  000540  0E7F               	movlw	low(0627Fh)
  2162  000542  6ECE               	movwf	((c:4046)),c	;volatile
  2163  000544  0E62               	movlw	high(0627Fh)
  2164  000546  6ECF               	movwf	((c:4046+1)),c	;volatile
  2165  000548  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2166  00054A  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2167  00054C  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2168                           	line	50
  2169                           ;modbus_rtu.c: 50: break;
  2170  00054E  EFE3  F002         	goto	i2l357
  2171                           	line	51
  2172                           ;modbus_rtu.c: 51: case RX_STATE_RECEIVE:
  2173                           	
  2174  000552                     i2l362:		; BSR set to: ?
  2175                           
  2176                           	line	52
  2177                           ;modbus_rtu.c: 52: if(rx_buf.rec_count<250)
  2178  000552  0EFA               	movlw	(0FAh)&0ffh
  2179  000554  6002               	cpfslt	(0+((c:0)+02h)),c
  2180  000556  EFAF  F002         	goto	i2u1301
  2181  00055A  EFB1  F002         	goto	i2u1300
  2182  00055E                     i2u1301:
  2183  00055E  EFCE  F002         	goto	i2l363
  2184  000562                     i2u1300:
  2185                           	line	54
  2186                           ;modbus_rtu.c: 53: {
  2187                           ;modbus_rtu.c: 54: rx_buf.data_buf[rx_buf.rec_co
                                 unt++] = rec_data;
  2188  000562  EE00 F002          	lfsr	0,(c:0)+02h
  2189  000566  CFEF F227          	movff	indf0,??_rec_isr+1+0
  2190  00056A  0E01               	movlw	01h
  2191  00056C  26EF               	addwf	indf0
  2192  00056E  0E03               	movlw	03h
  2193  000570  0102               	movlb	2	; () banked
  2194  000572  2727               	addwf	(??_rec_isr+1+0)&0ffh
  2195  000574  0E00               	movlw	low((c:0))
  2196  000576  0102               	movlb	2	; () banked
  2197  000578  2527               	addwf	(??_rec_isr+1+0)&0ffh,w
  2198  00057A  6EE9               	movwf	c:fsr0l
  2199  00057C  6AEA               	clrf	1+c:fsr0l
  2200  00057E  0E00               	movlw	high((c:0))
  2201  000580  22EA               	addwfc	1+c:fsr0l
  2202  000582  0102               	movlb	2	; () banked
  2203  000584  C226  FFEF         	movff	(rec_isr@rec_data),indf0
  2204                           
  2205                           	line	55
  2206                           ;modbus_rtu.c: 55: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2207  000588  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2208  00058A  0E7F               	movlw	low(0627Fh)
  2209  00058C  6ECE               	movwf	((c:4046)),c	;volatile
  2210  00058E  0E62               	movlw	high(0627Fh)
  2211  000590  6ECF               	movwf	((c:4046+1)),c	;volatile
  2212  000592  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2213  000594  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2214  000596  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2215                           	line	56
  2216                           ;modbus_rtu.c: 56: }
  2217  000598  EFD6  F002         	goto	i2l364
  2218                           	line	57
  2219                           	
  2220  00059C                     i2l363:		; BSR set to: ?
  2221                           
  2222                           	line	59
  2223                           ;modbus_rtu.c: 57: else
  2224                           ;modbus_rtu.c: 58: {
  2225                           ;modbus_rtu.c: 59: rx_state = RX_STATE_INIT;
  2226  00059C  0102               	movlb	2	; () banked
  2227  00059E  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2228  0005A0  0E00               	movlw	low(0)
  2229  0005A2  0100               	movlb	0	; () banked
  2230  0005A4  0100               	movlb	0	; () banked
  2231  0005A6  6FFF               	movwf	((255))&0ffh
  2232  0005A8  0102               	movlb	2	; () banked
  2233  0005AA  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2234                           	line	60
  2235                           	
  2236  0005AC                     i2l364:		; BSR set to: ?
  2237                           
  2238                           	line	61
  2239                           ;modbus_rtu.c: 60: }
  2240                           ;modbus_rtu.c: 61: break;
  2241  0005AC  EFE3  F002         	goto	i2l357
  2242                           	line	39
  2243                           	
  2244  0005B0                     i2l359:		; BSR set to: ?
  2245                           
  2246  0005B0  0100               	movlb	0	; () banked
  2247  0005B2  0100               	movlb	0	; () banked
  2248  0005B4  51FF               	movf	((255))&0ffh,w
  2249  0005B6  0A00               	xorlw	0 ^ 0
  2250  0005B8  E091               	bz	i2l360
  2251  0005BA  0A01               	xorlw	1 ^ 0
  2252  0005BC  E0A5               	bz	i2l361
  2253  0005BE  0A03               	xorlw	2 ^ 1
  2254  0005C0  E0C8               	bz	i2l362
  2255  0005C2  EFD6  F002         	goto	i2l364
  2256                           
  2257                           	line	65
  2258                           	
  2259  0005C6                     i2l357:		; BSR set to: ?
  2260                           
  2261                           	line	66
  2262                           ;modbus_rtu.c: 65: }
  2263                           ;modbus_rtu.c: 66: }
  2264  0005C6                     i2l356:
  2265                           			; BSR set to: ?
  2266                           
  2267  0005C6  0012               	return
  2268                           	opt stack 0
  2269                           GLOBAL __end_of_rec_isr
  2270  0005C8                     	__end_of_rec_isr:
  2271                           	FNSIZE	_rec_isr,2,0
  2272                           ; =============== function _rec_isr ends =======
                                 =====
  2273                           
  2274                           	signat	_rec_isr,88
  2275                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  2276                           	global	intlevel2
  2277                           
  2278                           	opt lm
  2279                           	FNBREAK _tx_isr,intlevel2
  2280                           	global	_tx_isr
  2281                           	global	??_tx_isr
  2282                           	global	?_tx_isr
  2283                           
  2284                           ; *************** function _tx_isr *************
                                 ****
  2285                           ; Defined at:
  2286                           ;		line 69 in file "../modbus_rtu.c"
  2287                           ; Parameters:
  2288                           ;		None
  2289                           ; Auto variables:
  2290                           ;		None
  2291                           ; Return value:
  2292                           ;		type: void 
  2293                           ;		size: 0
  2294                           ; Registers used:
  2295                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2296                           ; Tracked objects:
  2297                           ;		On entry : 0/0
  2298                           ;		On exit  : 0/0
  2299                           ;		Unchanged: 0/0
  2300                           ; Data sizes:
  2301                           ;		Autos:    0
  2302                           ;		Params:   0
  2303                           ;		Temp:     1
  2304                           ;		Total:    1
  2305                           ; This function calls:
  2306                           ;		Nothing
  2307                           ; This function is called by:
  2308                           ;		_my_isr
  2309                           ; This function uses a non-reentrant model
  2310                           ; 
  2311                           	file	"../modbus_rtu.c"
  2312                           	line	69
  2313  000000                     	__size_of_tx_isr	equ	__end_of_tx_isr-_tx_isr
  2314                           ;modbus_rtu.c: 68: void tx_isr(void)
  2315                           ;modbus_rtu.c: 69: {
  2316                           	
  2317  00093A                     _tx_isr:		; BSR set to: ?
  2318                           
  2319                           	opt stack 30
  2320                           	line	72
  2321  00093A  A89D               	btfss	c:(31980/8),(31980)&7	;volatile
  2322  00093C  EFA2  F004         	goto	i2u1311
  2323  000940  EFA4  F004         	goto	i2u1310
  2324  000944                     i2u1311:
  2325  000944  EFEB  F004         	goto	i2l367
  2326  000948                     i2u1310:
  2327  000948  A89E               	btfss	c:(31988/8),(31988)&7	;volatile
  2328  00094A  EFA9  F004         	goto	i2u1321
  2329  00094E  EFAB  F004         	goto	i2u1320
  2330  000952                     i2u1321:
  2331  000952  EFEB  F004         	goto	i2l367
  2332  000956                     i2u1320:
  2333                           	line	75
  2334                           ;modbus_rtu.c: 73: {
  2335                           ;modbus_rtu.c: 75: if(tx_buf.tx_count>0)
  2336  000956  0101               	movlb	1	; () banked
  2337  000958  0101               	movlb	1	; () banked
  2338  00095A  5100               	movf	((256))&0ffh,w
  2339  00095C  B4D8               	btfsc	status,2
  2340  00095E  EFB3  F004         	goto	i2u1331
  2341  000962  EFB5  F004         	goto	i2u1330
  2342  000966                     i2u1331:
  2343  000966  EFEB  F004         	goto	i2l367
  2344  00096A                     i2u1330:
  2345                           	line	77
  2346  00096A  C133 F226          	movff	(307),??_tx_isr+0+0
  2347  00096E  0E01               	movlw	01h
  2348  000970  0102               	movlb	2	; () banked
  2349  000972  2726               	addwf	(??_tx_isr+0+0)&0ffh
  2350  000974  0101               	movlb	1	; () banked
  2351  000976  0E00               	movlw	low(256)
  2352  000978  0102               	movlb	2	; () banked
  2353  00097A  2526               	addwf	(??_tx_isr+0+0)&0ffh,w
  2354  00097C  6EE9               	movwf	c:fsr0l
  2355  00097E  6AEA               	clrf	1+c:fsr0l
  2356  000980  0101               	movlb	1	; () banked
  2357  000982  0E01               	movlw	high(256)
  2358  000984  22EA               	addwfc	1+c:fsr0l
  2359  000986  50EF               	movf	indf0,w
  2360  000988  6EAD               	movwf	((c:4013)),c	;volatile
  2361                           ;modbus_rtu.c: 76: {
  2362                           ;modbus_rtu.c: 77: (TX1REG) = tx_buf.data_buf[cu
                                 rrent_need_send++];
  2363  00098A  0101               	movlb	1	; () banked
  2364  00098C  0101               	movlb	1	; () banked
  2365  00098E  2B33               	incf	((307))&0ffh
  2366                           	line	78
  2367                           ;modbus_rtu.c: 78: if(current_need_send==tx_buf.
                                 tx_count)
  2368  000990  0101               	movlb	1	; () banked
  2369  000992  0101               	movlb	1	; () banked
  2370  000994  5100               	movf	((256))&0ffh,w
  2371  000996  0101               	movlb	1	; () banked
  2372  000998  0101               	movlb	1	; () banked
  2373  00099A  6333               	cpfseq	((307))&0ffh
  2374  00099C  EFD2  F004         	goto	i2u1341
  2375  0009A0  EFD4  F004         	goto	i2u1340
  2376  0009A4                     i2u1341:
  2377  0009A4  EFEB  F004         	goto	i2l367
  2378  0009A8                     i2u1340:
  2379                           	line	80
  2380                           ;modbus_rtu.c: 79: {
  2381                           ;modbus_rtu.c: 80: (TX1IE) = 0;
  2382  0009A8  989D               	bcf	c:(31980/8),(31980)&7	;volatile
  2383                           	line	81
  2384                           ;modbus_rtu.c: 81: current_need_send = 0;
  2385  0009AA  0102               	movlb	2	; () banked
  2386  0009AC  6F26               	movwf	(??_tx_isr+0+0)&0ffh
  2387  0009AE  0E00               	movlw	low(0)
  2388  0009B0  0101               	movlb	1	; () banked
  2389  0009B2  0101               	movlb	1	; () banked
  2390  0009B4  6F33               	movwf	((307))&0ffh
  2391  0009B6  0102               	movlb	2	; () banked
  2392  0009B8  5126               	movf	(??_tx_isr+0+0)&0ffh,w
  2393                           	line	82
  2394                           ;modbus_rtu.c: 82: tx_buf.tx_count = 0;
  2395  0009BA  0102               	movlb	2	; () banked
  2396  0009BC  6F26               	movwf	(??_tx_isr+0+0)&0ffh
  2397  0009BE  0E00               	movlw	low(0)
  2398  0009C0  0101               	movlb	1	; () banked
  2399  0009C2  0101               	movlb	1	; () banked
  2400  0009C4  6F00               	movwf	((256))&0ffh
  2401  0009C6  0102               	movlb	2	; () banked
  2402  0009C8  5126               	movf	(??_tx_isr+0+0)&0ffh,w
  2403                           	line	83
  2404                           ;modbus_rtu.c: 83: rx_buf.rec_count = 0;
  2405  0009CA  0102               	movlb	2	; () banked
  2406  0009CC  6F26               	movwf	(??_tx_isr+0+0)&0ffh
  2407  0009CE  0E00               	movlw	low(0)
  2408  0009D0  6E02               	movwf	(0+((c:0)+02h)),c
  2409  0009D2  0102               	movlb	2	; () banked
  2410  0009D4  5126               	movf	(??_tx_isr+0+0)&0ffh,w
  2411                           	line	85
  2412                           	
  2413  0009D6                     i2l369:		; BSR set to: ?
  2414                           
  2415                           	line	86
  2416                           	
  2417  0009D6                     i2l368:		; BSR set to: ?
  2418                           
  2419                           	line	87
  2420                           	
  2421  0009D6                     i2l367:		; BSR set to: ?
  2422                           
  2423                           	line	88
  2424                           ;modbus_rtu.c: 85: }
  2425                           ;modbus_rtu.c: 86: }
  2426                           ;modbus_rtu.c: 87: }
  2427                           ;modbus_rtu.c: 88: }
  2428  0009D6                     i2l366:
  2429                           			; BSR set to: ?
  2430                           
  2431  0009D6  0012               	return
  2432                           	opt stack 0
  2433                           GLOBAL __end_of_tx_isr
  2434  0009D8                     	__end_of_tx_isr:
  2435                           	FNSIZE	_tx_isr,1,0
  2436                           ; =============== function _tx_isr ends ========
                                 ====
  2437                           
  2438                           	signat	_tx_isr,88
  2439                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  2440                           	global	intlevel2
  2441                           
  2442                           	opt lm
  2443                           	FNBREAK _get_speed,intlevel2
  2444                           	global	_get_speed
  2445                           	global	??_get_speed
  2446                           	global	?_get_speed
  2447                           
  2448                           ; *************** function _get_speed **********
                                 *******
  2449                           ; Defined at:
  2450                           ;		line 127 in file "../main.c"
  2451                           ; Parameters:
  2452                           ;		None
  2453                           ; Auto variables:
  2454                           ;		None
  2455                           ; Return value:
  2456                           ;		type: void 
  2457                           ;		size: 0
  2458                           ; Registers used:
  2459                           ;		wreg, status,2, status,0, cstack
  2460                           ; Tracked objects:
  2461                           ;		On entry : 0/0
  2462                           ;		On exit  : 0/0
  2463                           ;		Unchanged: 0/0
  2464                           ; Data sizes:
  2465                           ;		Autos:    0
  2466                           ;		Params:   0
  2467                           ;		Temp:     1
  2468                           ;		Total:    1
  2469                           ; This function calls:
  2470                           ;		_start_timer3
  2471                           ;		_stop_timer3
  2472                           ;		___aldiv
  2473                           ; This function is called by:
  2474                           ;		_pv1_isr
  2475                           ; This function uses a non-reentrant model
  2476                           ; 
  2477                           	file	"../main.c"
  2478                           	line	127
  2479  000000                     	__size_of_get_speed	equ	__end_of_get_speed-_get
                                 _speed
  2480                           ;main.c: 126: void get_speed(void)
  2481                           ;main.c: 127: {
  2482                           	
  2483  0006D2                     _get_speed:		; BSR set to: ?
  2484                           
  2485                           	opt stack 29
  2486                           	line	131
  2487  0006D2  EFDC  F003         	goto	i2l764
  2488                           	line	133
  2489                           ;main.c: 132: {
  2490                           ;main.c: 133: case 1:
  2491                           	
  2492  0006D6                     i2l765:		; BSR set to: ?
  2493                           
  2494                           	line	134
  2495                           ;main.c: 134: start_timer3();
  2496  0006D6  ECF6  F005         	call	_start_timer3	;wreg free
  2497                           	line	135
  2498                           ;main.c: 135: pulse_count++;
  2499  0006DA  0101               	movlb	1	; () banked
  2500  0006DC  0101               	movlb	1	; () banked
  2501  0006DE  4B34               	infsnz	((308))&0ffh
  2502  0006E0  2B35               	incf	((308+1))&0ffh
  2503                           	line	136
  2504                           ;main.c: 136: sample_step = 2;
  2505  0006E2  0102               	movlb	2	; () banked
  2506  0006E4  6F26               	movwf	(??_get_speed+0+0)&0ffh
  2507  0006E6  0E02               	movlw	low(02h)
  2508  0006E8  0101               	movlb	1	; () banked
  2509  0006EA  0101               	movlb	1	; () banked
  2510  0006EC  6F36               	movwf	((310))&0ffh
  2511  0006EE  0102               	movlb	2	; () banked
  2512  0006F0  5126               	movf	(??_get_speed+0+0)&0ffh,w
  2513                           	line	137
  2514                           ;main.c: 137: break;
  2515  0006F2  EFE5  F003         	goto	i2l763
  2516                           	line	138
  2517                           ;main.c: 138: case 2:
  2518                           	
  2519  0006F6                     i2l766:		; BSR set to: ?
  2520                           
  2521                           	line	139
  2522                           ;main.c: 139: pulse_count++;
  2523  0006F6  0101               	movlb	1	; () banked
  2524  0006F8  0101               	movlb	1	; () banked
  2525  0006FA  4B34               	infsnz	((308))&0ffh
  2526  0006FC  2B35               	incf	((308+1))&0ffh
  2527                           	line	140
  2528                           ;main.c: 140: if(pulse_count==6)
  2529  0006FE  0101               	movlb	1	; () banked
  2530  000700  0101               	movlb	1	; () banked
  2531  000702  5134               	movf	((308))&0ffh,w
  2532  000704  0A06               	xorlw	6
  2533  000706  1135               	iorwf ((308+1))&0ffh,w
  2534                           
  2535  000708  A4D8               	btfss	status,2
  2536  00070A  EF89  F003         	goto	i2u1471
  2537  00070E  EF8B  F003         	goto	i2u1470
  2538  000712                     i2u1471:
  2539  000712  EFD0  F003         	goto	i2l767
  2540  000716                     i2u1470:
  2541                           	line	142
  2542                           ;main.c: 141: {
  2543                           ;main.c: 142: stop_timer3();
  2544  000716  ECFC  F005         	call	_stop_timer3	;wreg free
  2545                           	line	143
  2546                           ;main.c: 143: pulse_count = 0;
  2547  00071A  0E00               	movlw	low(0)
  2548  00071C  0101               	movlb	1	; () banked
  2549  00071E  0101               	movlb	1	; () banked
  2550  000720  6F34               	movwf	((308))&0ffh
  2551  000722  0E00               	movlw	high(0)
  2552  000724  0101               	movlb	1	; () banked
  2553  000726  6F35               	movwf	((308+1))&0ffh
  2554                           	line	145
  2555                           ;main.c: 145: stop_timer3();
  2556  000728  ECFC  F005         	call	_stop_timer3	;wreg free
  2557                           	line	147
  2558                           ;main.c: 147: if(count_10ms>0)
  2559  00072C  0100               	movlb	0	; () banked
  2560  00072E  0100               	movlb	0	; () banked
  2561  000730  51FE               	movf	((253+1))&0ffh,w
  2562  000732  11FD               	iorwf ((253))&0ffh,w
  2563                           
  2564  000734  B4D8               	btfsc	status,2
  2565  000736  EF9F  F003         	goto	i2u1481
  2566  00073A  EFA1  F003         	goto	i2u1480
  2567  00073E                     i2u1481:
  2568  00073E  EFC1  F003         	goto	i2l768
  2569  000742                     i2u1480:
  2570                           	line	149
  2571                           ;main.c: 148: {
  2572                           ;main.c: 149: modbus_reg[0] = (unsigned int)(100
                                 000/count_10ms);
  2573  000742  0100               	movlb	0	; () banked
  2574  000744  0102               	movlb	2	; () banked
  2575  000746  C0FD F22B          	movff	(253),0+(?___aldiv+04h)
  2576  00074A  0100               	movlb	0	; () banked
  2577  00074C  0102               	movlb	2	; () banked
  2578  00074E  C0FE F22C          	movff	(253+1),1+(?___aldiv+04h)
  2579  000752  0102               	movlb	2	; () banked
  2580  000754  0102               	movlb	2	; () banked
  2581  000756  6B2D               	clrf	(2+(?___aldiv+04h))&0ffh
  2582  000758  0102               	movlb	2	; () banked
  2583  00075A  6B2E               	clrf	(3+(?___aldiv+04h))&0ffh
  2584                           
  2585  00075C  0EA0               	movlw	low(0186A0h)
  2586  00075E  0102               	movlb	2	; () banked
  2587  000760  0102               	movlb	2	; () banked
  2588  000762  6F27               	movwf	((?___aldiv))&0ffh
  2589  000764  0E86               	movlw	high(0186A0h)
  2590  000766  0102               	movlb	2	; () banked
  2591  000768  6F28               	movwf	((?___aldiv+1))&0ffh
  2592  00076A  0E01               	movlw	low highword(0186A0h)
  2593  00076C  0102               	movlb	2	; () banked
  2594  00076E  6F29               	movwf	((?___aldiv+2))&0ffh
  2595  000770  0E00               	movlw	high highword(0186A0h)
  2596  000772  0102               	movlb	2	; () banked
  2597  000774  6F2A               	movwf	((?___aldiv+3))&0ffh
  2598  000776  EC5D  F001         	call	___aldiv	;wreg free
  2599  00077A  C227  F035         	movff	0+?___aldiv,(c:53)
  2600  00077E  C228  F036         	movff	1+?___aldiv,(c:53+1)
  2601                           	line	151
  2602                           	
  2603  000782                     i2l768:		; BSR set to: ?
  2604                           
  2605                           	line	153
  2606                           ;main.c: 151: }
  2607                           ;main.c: 153: count_10ms = 0;
  2608  000782  0E00               	movlw	low(0)
  2609  000784  0100               	movlb	0	; () banked
  2610  000786  0100               	movlb	0	; () banked
  2611  000788  6FFD               	movwf	((253))&0ffh
  2612  00078A  0E00               	movlw	high(0)
  2613  00078C  0100               	movlb	0	; () banked
  2614  00078E  6FFE               	movwf	((253+1))&0ffh
  2615                           	line	155
  2616                           ;main.c: 155: sample_step = 1;
  2617  000790  0102               	movlb	2	; () banked
  2618  000792  6F26               	movwf	(??_get_speed+0+0)&0ffh
  2619  000794  0E01               	movlw	low(01h)
  2620  000796  0101               	movlb	1	; () banked
  2621  000798  0101               	movlb	1	; () banked
  2622  00079A  6F36               	movwf	((310))&0ffh
  2623  00079C  0102               	movlb	2	; () banked
  2624  00079E  5126               	movf	(??_get_speed+0+0)&0ffh,w
  2625                           	line	156
  2626                           	
  2627  0007A0                     i2l767:		; BSR set to: ?
  2628                           
  2629                           	line	157
  2630                           ;main.c: 156: }
  2631                           ;main.c: 157: break;
  2632  0007A0  EFE5  F003         	goto	i2l763
  2633                           	line	159
  2634                           ;main.c: 159: default:
  2635                           	
  2636  0007A4                     i2l769:		; BSR set to: ?
  2637                           
  2638                           	line	160
  2639                           ;main.c: 160: sample_step = 1;
  2640  0007A4  0102               	movlb	2	; () banked
  2641  0007A6  6F26               	movwf	(??_get_speed+0+0)&0ffh
  2642  0007A8  0E01               	movlw	low(01h)
  2643  0007AA  0101               	movlb	1	; () banked
  2644  0007AC  0101               	movlb	1	; () banked
  2645  0007AE  6F36               	movwf	((310))&0ffh
  2646  0007B0  0102               	movlb	2	; () banked
  2647  0007B2  5126               	movf	(??_get_speed+0+0)&0ffh,w
  2648                           	line	161
  2649                           ;main.c: 161: break;
  2650  0007B4  EFE5  F003         	goto	i2l763
  2651                           	line	131
  2652                           	
  2653  0007B8                     i2l764:		; BSR set to: ?
  2654                           
  2655  0007B8  0101               	movlb	1	; () banked
  2656  0007BA  0101               	movlb	1	; () banked
  2657  0007BC  5136               	movf	((310))&0ffh,w
  2658  0007BE  0A01               	xorlw	1 ^ 0
  2659  0007C0  E08A               	bz	i2l765
  2660  0007C2  0A03               	xorlw	2 ^ 1
  2661  0007C4  E098               	bz	i2l766
  2662  0007C6  EFD2  F003         	goto	i2l769
  2663                           
  2664                           	line	162
  2665                           	
  2666  0007CA                     i2l763:		; BSR set to: ?
  2667                           
  2668                           	line	163
  2669                           ;main.c: 163: }
  2670  0007CA                     i2l762:
  2671                           			; BSR set to: ?
  2672                           
  2673  0007CA  0012               	return
  2674                           	opt stack 0
  2675                           GLOBAL __end_of_get_speed
  2676  0007CC                     	__end_of_get_speed:
  2677                           	FNSIZE	_get_speed,1,0
  2678                           ; =============== function _get_speed ends =====
                                 =======
  2679                           
  2680                           	signat	_get_speed,88
  2681                                   psect   text14,class=CODE,space=0,reloc=
                                 2
  2682                           	global	intlevel2
  2683                           
  2684                           	opt lm
  2685                           	FNBREAK ___aldiv,intlevel2
  2686                           	global	___aldiv
  2687                           	global	??___aldiv
  2688                           	global	?___aldiv
  2689                           
  2690                           ; *************** function ___aldiv ************
                                 *****
  2691                           ; Defined at:
  2692                           ;		line 5 in file "d:\Program Files\HI-TECH Soft
                                 ware\PICC-18\PRO\9.66\sources\aldiv.c"
  2693                           ; Parameters:
  2694                           ;		dividend       size:   4offs:   0	type: long 
  2695                           ;		divisor        size:   4offs:   4	type: long 
  2696                           ; Auto variables:
  2697                           ;		counter     	       	type: unsigned char 
  2698                           ;		sign        	       	type: unsigned char 
  2699                           ;		quotient    	       	type: long 
  2700                           ; Return value:
  2701                           ;		type: long 
  2702                           ;		size: 4
  2703                           ; Registers used:
  2704                           ;		wreg, status,2, status,0
  2705                           ; Tracked objects:
  2706                           ;		On entry : 0/0
  2707                           ;		On exit  : 0/0
  2708                           ;		Unchanged: 0/0
  2709                           ; Data sizes:
  2710                           ;		Autos:    6
  2711                           ;		Params:   8
  2712                           ;		Temp:     1
  2713                           ;		Total:   15
  2714                           ; This function calls:
  2715                           ;		Nothing
  2716                           ; This function is called by:
  2717                           ;		_get_speed
  2718                           ; This function uses a non-reentrant model
  2719                           ; 
  2720                           	file	"d:\Program Files\HI-TECH Software\PICC-18
                                 \PRO\9.66\sources\aldiv.c"
  2721                           	line	5
  2722  000000                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  2723                           	
  2724  0002BA                     ___aldiv:		; BSR set to: ?
  2725                           
  2726                           	opt stack 28
  2727                           	line	9
  2728  0002BA  0102               	movlb	2	; () banked
  2729  0002BC  6F35               	movwf	(??___aldiv+6+0)&0ffh
  2730  0002BE  0E00               	movlw	low(0)
  2731  0002C0  0102               	movlb	2	; () banked
  2732  0002C2  0102               	movlb	2	; () banked
  2733  0002C4  6F30               	movwf	((___aldiv@sign))&0ffh
  2734  0002C6  0102               	movlb	2	; () banked
  2735  0002C8  5135               	movf	(??___aldiv+6+0)&0ffh,w
  2736                           	line	10
  2737  0002CA  0102               	movlb	2	; () banked
  2738  0002CC  0102               	movlb	2	; () banked
  2739  0002CE  AF2E               	btfss	((___aldiv@divisor+3))&0ffh,7
  2740  0002D0  EF6C  F001         	goto	i2u1511
  2741  0002D4  EF6E  F001         	goto	i2u1510
  2742  0002D8                     i2u1511:
  2743  0002D8  EF86  F001         	goto	i2l800
  2744  0002DC                     i2u1510:
  2745                           	line	11
  2746  0002DC  0102               	movlb	2	; () banked
  2747  0002DE  0102               	movlb	2	; () banked
  2748  0002E0  1F2E               	comf	((___aldiv@divisor+3))&0ffh
  2749  0002E2  0102               	movlb	2	; () banked
  2750  0002E4  1F2D               	comf	((___aldiv@divisor+2))&0ffh
  2751  0002E6  0102               	movlb	2	; () banked
  2752  0002E8  1F2C               	comf	((___aldiv@divisor+1))&0ffh
  2753  0002EA  0102               	movlb	2	; () banked
  2754  0002EC  6D2B               	negf	((___aldiv@divisor))&0ffh
  2755  0002EE  0E00               	movlw	0
  2756  0002F0  0102               	movlb	2	; () banked
  2757  0002F2  232C               	addwfc	((___aldiv@divisor+1))&0ffh
  2758  0002F4  0102               	movlb	2	; () banked
  2759  0002F6  232D               	addwfc	((___aldiv@divisor+2))&0ffh
  2760  0002F8  0102               	movlb	2	; () banked
  2761  0002FA  232E               	addwfc	((___aldiv@divisor+3))&0ffh
  2762                           	line	12
  2763  0002FC  0102               	movlb	2	; () banked
  2764  0002FE  6F35               	movwf	(??___aldiv+6+0)&0ffh
  2765  000300  0E01               	movlw	low(01h)
  2766  000302  0102               	movlb	2	; () banked
  2767  000304  0102               	movlb	2	; () banked
  2768  000306  6F30               	movwf	((___aldiv@sign))&0ffh
  2769  000308  0102               	movlb	2	; () banked
  2770  00030A  5135               	movf	(??___aldiv+6+0)&0ffh,w
  2771                           	line	13
  2772                           	
  2773  00030C                     i2l800:		; BSR set to: ?
  2774                           
  2775                           	line	14
  2776  00030C  0102               	movlb	2	; () banked
  2777  00030E  0102               	movlb	2	; () banked
  2778  000310  AF2A               	btfss	((___aldiv@dividend+3))&0ffh,7
  2779  000312  EF8D  F001         	goto	i2u1521
  2780  000316  EF8F  F001         	goto	i2u1520
  2781  00031A                     i2u1521:
  2782  00031A  EFA3  F001         	goto	i2l801
  2783  00031E                     i2u1520:
  2784                           	line	15
  2785  00031E  0102               	movlb	2	; () banked
  2786  000320  0102               	movlb	2	; () banked
  2787  000322  1F2A               	comf	((___aldiv@dividend+3))&0ffh
  2788  000324  0102               	movlb	2	; () banked
  2789  000326  1F29               	comf	((___aldiv@dividend+2))&0ffh
  2790  000328  0102               	movlb	2	; () banked
  2791  00032A  1F28               	comf	((___aldiv@dividend+1))&0ffh
  2792  00032C  0102               	movlb	2	; () banked
  2793  00032E  6D27               	negf	((___aldiv@dividend))&0ffh
  2794  000330  0E00               	movlw	0
  2795  000332  0102               	movlb	2	; () banked
  2796  000334  2328               	addwfc	((___aldiv@dividend+1))&0ffh
  2797  000336  0102               	movlb	2	; () banked
  2798  000338  2329               	addwfc	((___aldiv@dividend+2))&0ffh
  2799  00033A  0102               	movlb	2	; () banked
  2800  00033C  232A               	addwfc	((___aldiv@dividend+3))&0ffh
  2801                           	line	16
  2802  00033E  0E01               	movlw	(01h)&0ffh
  2803  000340  0102               	movlb	2	; () banked
  2804  000342  0102               	movlb	2	; () banked
  2805  000344  1B30               	xorwf	((___aldiv@sign))&0ffh
  2806                           	line	17
  2807                           	
  2808  000346                     i2l801:		; BSR set to: ?
  2809                           
  2810                           	line	18
  2811  000346  0E00               	movlw	low(0)
  2812  000348  0102               	movlb	2	; () banked
  2813  00034A  0102               	movlb	2	; () banked
  2814  00034C  6F31               	movwf	((___aldiv@quotient))&0ffh
  2815  00034E  0E00               	movlw	high(0)
  2816  000350  0102               	movlb	2	; () banked
  2817  000352  6F32               	movwf	((___aldiv@quotient+1))&0ffh
  2818  000354  0E00               	movlw	low highword(0)
  2819  000356  0102               	movlb	2	; () banked
  2820  000358  6F33               	movwf	((___aldiv@quotient+2))&0ffh
  2821  00035A  0E00               	movlw	high highword(0)
  2822  00035C  0102               	movlb	2	; () banked
  2823  00035E  6F34               	movwf	((___aldiv@quotient+3))&0ffh
  2824                           	line	19
  2825  000360  0102               	movlb	2	; () banked
  2826  000362  512E               	movf	((___aldiv@divisor+3))&0ffh,w
  2827  000364  112B               	iorwf ((___aldiv@divisor))&0ffh,w
  2828  000366  112C               	iorwf ((___aldiv@divisor+1))&0ffh,w
  2829  000368  112D               	iorwf ((___aldiv@divisor+2))&0ffh,w
  2830                           
  2831  00036A  B4D8               	btfsc	status,2
  2832  00036C  EFBA  F001         	goto	i2u1531
  2833  000370  EFBC  F001         	goto	i2u1530
  2834  000374                     i2u1531:
  2835  000374  EF2F  F002         	goto	i2l802
  2836  000378                     i2u1530:
  2837                           	line	20
  2838  000378  0102               	movlb	2	; () banked
  2839  00037A  6F35               	movwf	(??___aldiv+6+0)&0ffh
  2840  00037C  0E01               	movlw	low(01h)
  2841  00037E  0102               	movlb	2	; () banked
  2842  000380  0102               	movlb	2	; () banked
  2843  000382  6F2F               	movwf	((___aldiv@counter))&0ffh
  2844  000384  0102               	movlb	2	; () banked
  2845  000386  5135               	movf	(??___aldiv+6+0)&0ffh,w
  2846                           	line	21
  2847  000388  EFD3  F001         	goto	i2l803
  2848                           	
  2849  00038C                     i2l804:		; BSR set to: ?
  2850                           
  2851                           	line	22
  2852  00038C  0102               	movlb	2	; () banked
  2853  00038E  90D8               	bcf	status,0
  2854  000390  0102               	movlb	2	; () banked
  2855  000392  372B               	rlcf	((___aldiv@divisor))&0ffh
  2856  000394  0102               	movlb	2	; () banked
  2857  000396  372C               	rlcf	((___aldiv@divisor+1))&0ffh
  2858  000398  0102               	movlb	2	; () banked
  2859  00039A  372D               	rlcf	((___aldiv@divisor+2))&0ffh
  2860  00039C  0102               	movlb	2	; () banked
  2861  00039E  372E               	rlcf	((___aldiv@divisor+3))&0ffh
  2862                           	line	23
  2863  0003A0  0102               	movlb	2	; () banked
  2864  0003A2  0102               	movlb	2	; () banked
  2865  0003A4  2B2F               	incf	((___aldiv@counter))&0ffh
  2866                           	line	24
  2867                           	
  2868  0003A6                     i2l803:		; BSR set to: ?
  2869                           
  2870                           	line	21
  2871  0003A6  0102               	movlb	2	; () banked
  2872                           	
  2873  0003A8  0102               	movlb	2	; () banked
  2874  0003AA  AF2E               	btfss	((___aldiv@divisor+3))&0ffh,(31)&7
  2875  0003AC  EFDA  F001         	goto	i2u1541
  2876  0003B0  EFDC  F001         	goto	i2u1540
  2877  0003B4                     i2u1541:
  2878  0003B4  EFC6  F001         	goto	i2l804
  2879  0003B8                     i2u1540:
  2880                           	
  2881  0003B8                     i2l805:		; BSR set to: ?
  2882                           
  2883                           	line	25
  2884                           	
  2885  0003B8                     i2l808:		; BSR set to: ?
  2886                           
  2887                           	line	26
  2888  0003B8  0102               	movlb	2	; () banked
  2889  0003BA  90D8               	bcf	status,0
  2890  0003BC  0102               	movlb	2	; () banked
  2891  0003BE  3731               	rlcf	((___aldiv@quotient))&0ffh
  2892  0003C0  0102               	movlb	2	; () banked
  2893  0003C2  3732               	rlcf	((___aldiv@quotient+1))&0ffh
  2894  0003C4  0102               	movlb	2	; () banked
  2895  0003C6  3733               	rlcf	((___aldiv@quotient+2))&0ffh
  2896  0003C8  0102               	movlb	2	; () banked
  2897  0003CA  3734               	rlcf	((___aldiv@quotient+3))&0ffh
  2898                           	line	27
  2899  0003CC  0102               	movlb	2	; () banked
  2900  0003CE  0102               	movlb	2	; () banked
  2901  0003D0  512B               	movf	((___aldiv@divisor))&0ffh,w
  2902  0003D2  0102               	movlb	2	; () banked
  2903  0003D4  0102               	movlb	2	; () banked
  2904  0003D6  5D27               	subwf	((___aldiv@dividend))&0ffh,w
  2905  0003D8  0102               	movlb	2	; () banked
  2906  0003DA  0102               	movlb	2	; () banked
  2907  0003DC  512C               	movf	((___aldiv@divisor+1))&0ffh,w
  2908  0003DE  0102               	movlb	2	; () banked
  2909  0003E0  0102               	movlb	2	; () banked
  2910  0003E2  5928               	subwfb	((___aldiv@dividend+1))&0ffh,w
  2911  0003E4  0102               	movlb	2	; () banked
  2912  0003E6  0102               	movlb	2	; () banked
  2913  0003E8  512D               	movf	((___aldiv@divisor+2))&0ffh,w
  2914  0003EA  0102               	movlb	2	; () banked
  2915  0003EC  0102               	movlb	2	; () banked
  2916  0003EE  5929               	subwfb	((___aldiv@dividend+2))&0ffh,w
  2917  0003F0  0102               	movlb	2	; () banked
  2918  0003F2  0102               	movlb	2	; () banked
  2919  0003F4  512E               	movf	((___aldiv@divisor+3))&0ffh,w
  2920  0003F6  0102               	movlb	2	; () banked
  2921  0003F8  0102               	movlb	2	; () banked
  2922  0003FA  592A               	subwfb	((___aldiv@dividend+3))&0ffh,w
  2923  0003FC  A0D8               	btfss	status,0
  2924  0003FE  EF03  F002         	goto	i2u1551
  2925  000402  EF05  F002         	goto	i2u1550
  2926  000406                     i2u1551:
  2927  000406  EF20  F002         	goto	i2l809
  2928  00040A                     i2u1550:
  2929                           	line	28
  2930  00040A  0102               	movlb	2	; () banked
  2931  00040C  0102               	movlb	2	; () banked
  2932  00040E  512B               	movf	((___aldiv@divisor))&0ffh,w
  2933  000410  0102               	movlb	2	; () banked
  2934  000412  0102               	movlb	2	; () banked
  2935  000414  5F27               	subwf	((___aldiv@dividend))&0ffh
  2936  000416  0102               	movlb	2	; () banked
  2937  000418  0102               	movlb	2	; () banked
  2938  00041A  512C               	movf	((___aldiv@divisor+1))&0ffh,w
  2939  00041C  0102               	movlb	2	; () banked
  2940  00041E  0102               	movlb	2	; () banked
  2941  000420  5B28               	subwfb	((___aldiv@dividend+1))&0ffh
  2942  000422  0102               	movlb	2	; () banked
  2943  000424  0102               	movlb	2	; () banked
  2944  000426  512D               	movf	((___aldiv@divisor+2))&0ffh,w
  2945  000428  0102               	movlb	2	; () banked
  2946  00042A  0102               	movlb	2	; () banked
  2947  00042C  5B29               	subwfb	((___aldiv@dividend+2))&0ffh
  2948  00042E  0102               	movlb	2	; () banked
  2949  000430  0102               	movlb	2	; () banked
  2950  000432  512E               	movf	((___aldiv@divisor+3))&0ffh,w
  2951  000434  0102               	movlb	2	; () banked
  2952  000436  0102               	movlb	2	; () banked
  2953  000438  5B2A               	subwfb	((___aldiv@dividend+3))&0ffh
  2954                           	line	29
  2955  00043A  0102               	movlb	2	; () banked
  2956  00043C  0102               	movlb	2	; () banked
  2957  00043E  8131               	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
  2958                           	line	30
  2959                           	
  2960  000440                     i2l809:		; BSR set to: ?
  2961                           
  2962                           	line	31
  2963  000440  0102               	movlb	2	; () banked
  2964  000442  90D8               	bcf	status,0
  2965  000444  0102               	movlb	2	; () banked
  2966  000446  332E               	rrcf	((___aldiv@divisor+3))&0ffh
  2967  000448  0102               	movlb	2	; () banked
  2968  00044A  332D               	rrcf	((___aldiv@divisor+2))&0ffh
  2969  00044C  0102               	movlb	2	; () banked
  2970  00044E  332C               	rrcf	((___aldiv@divisor+1))&0ffh
  2971  000450  0102               	movlb	2	; () banked
  2972  000452  332B               	rrcf	((___aldiv@divisor))&0ffh
  2973                           	line	32
  2974  000454  0102               	movlb	2	; () banked
  2975  000456  0102               	movlb	2	; () banked
  2976  000458  2F2F               	decfsz	((___aldiv@counter))&0ffh
  2977                           	
  2978  00045A  EFDC  F001         	goto	i2l808
  2979                           	
  2980  00045E                     i2l807:		; BSR set to: ?
  2981                           
  2982                           	line	33
  2983                           	
  2984  00045E                     i2l802:		; BSR set to: ?
  2985                           
  2986                           	line	34
  2987  00045E  0102               	movlb	2	; () banked
  2988  000460  0102               	movlb	2	; () banked
  2989  000462  5130               	movf	((___aldiv@sign))&0ffh,w
  2990  000464  B4D8               	btfsc	status,2
  2991  000466  EF37  F002         	goto	i2u1561
  2992  00046A  EF39  F002         	goto	i2u1560
  2993  00046E                     i2u1561:
  2994  00046E  EF49  F002         	goto	i2l810
  2995  000472                     i2u1560:
  2996                           	line	35
  2997  000472  0102               	movlb	2	; () banked
  2998  000474  0102               	movlb	2	; () banked
  2999  000476  1F34               	comf	((___aldiv@quotient+3))&0ffh
  3000  000478  0102               	movlb	2	; () banked
  3001  00047A  1F33               	comf	((___aldiv@quotient+2))&0ffh
  3002  00047C  0102               	movlb	2	; () banked
  3003  00047E  1F32               	comf	((___aldiv@quotient+1))&0ffh
  3004  000480  0102               	movlb	2	; () banked
  3005  000482  6D31               	negf	((___aldiv@quotient))&0ffh
  3006  000484  0E00               	movlw	0
  3007  000486  0102               	movlb	2	; () banked
  3008  000488  2332               	addwfc	((___aldiv@quotient+1))&0ffh
  3009  00048A  0102               	movlb	2	; () banked
  3010  00048C  2333               	addwfc	((___aldiv@quotient+2))&0ffh
  3011  00048E  0102               	movlb	2	; () banked
  3012  000490  2334               	addwfc	((___aldiv@quotient+3))&0ffh
  3013                           	
  3014  000492                     i2l810:		; BSR set to: ?
  3015                           
  3016                           	line	36
  3017  000492  C231  F227         	movff	(___aldiv@quotient),(?___aldiv)
  3018  000496  C232  F228         	movff	(___aldiv@quotient+1),(?___aldiv+1)
  3019  00049A  C233  F229         	movff	(___aldiv@quotient+2),(?___aldiv+2)
  3020  00049E  C234  F22A         	movff	(___aldiv@quotient+3),(?___aldiv+3)
  3021  0004A2  EF53  F002         	goto	i2l799
  3022                           	line	37
  3023  0004A6                     i2l799:
  3024                           			; BSR set to: ?
  3025                           
  3026  0004A6  0012               	return
  3027                           	opt stack 0
  3028                           GLOBAL __end_of___aldiv
  3029  0004A8                     	__end_of___aldiv:
  3030                           	FNSIZE	___aldiv,7,8
  3031                           ; =============== function ___aldiv ends =======
                                 =====
  3032                           
  3033                           	signat	___aldiv,8316
  3034                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  3035                           	global	intlevel2
  3036                           
  3037                           	opt lm
  3038                           	FNBREAK _stop_timer3,intlevel2
  3039                           	global	_stop_timer3
  3040                           	global	??_stop_timer3
  3041                           	global	?_stop_timer3
  3042                           
  3043                           ; *************** function _stop_timer3 ********
                                 *********
  3044                           ; Defined at:
  3045                           ;		line 171 in file "../main.c"
  3046                           ; Parameters:
  3047                           ;		None
  3048                           ; Auto variables:
  3049                           ;		None
  3050                           ; Return value:
  3051                           ;		type: void 
  3052                           ;		size: 0
  3053                           ; Registers used:
  3054                           ;		wreg, status,2
  3055                           ; Tracked objects:
  3056                           ;		On entry : 0/0
  3057                           ;		On exit  : 0/0
  3058                           ;		Unchanged: 0/0
  3059                           ; Data sizes:
  3060                           ;		Autos:    0
  3061                           ;		Params:   0
  3062                           ;		Temp:     0
  3063                           ;		Total:    0
  3064                           ; This function calls:
  3065                           ;		Nothing
  3066                           ; This function is called by:
  3067                           ;		_get_speed
  3068                           ; This function uses a non-reentrant model
  3069                           ; 
  3070                           	file	"../main.c"
  3071                           	line	171
  3072  000000                     	__size_of_stop_timer3	equ	__end_of_stop_timer3-
                                 _stop_timer3
  3073                           ;main.c: 170: void stop_timer3(void)
  3074                           ;main.c: 171: {
  3075                           	
  3076  000BF8                     _stop_timer3:		; BSR set to: ?
  3077                           
  3078                           	opt stack 28
  3079                           	line	172
  3080                           ;main.c: 172: TMR3ON = 0;
  3081  000BF8  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
  3082                           	line	173
  3083                           ;main.c: 173: TMR3 = 65535-11059;
  3084  000BFA  0ECC               	movlw	low(0D4CCh)
  3085  000BFC  6EB2               	movwf	((c:4018)),c	;volatile
  3086  000BFE  0ED4               	movlw	high(0D4CCh)
  3087  000C00  6EB3               	movwf	((c:4018+1)),c	;volatile
  3088                           	line	174
  3089                           ;main.c: 174: }
  3090  000C02                     i2l771:
  3091                           			; BSR set to: ?
  3092                           
  3093  000C02  0012               	return
  3094                           	opt stack 0
  3095                           GLOBAL __end_of_stop_timer3
  3096  000C04                     	__end_of_stop_timer3:
  3097                           	FNSIZE	_stop_timer3,0,0
  3098                           ; =============== function _stop_timer3 ends ===
                                 =========
  3099                           
  3100                           	signat	_stop_timer3,88
  3101                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  3102                           	global	intlevel2
  3103                           
  3104                           	opt lm
  3105                           	FNBREAK _start_timer3,intlevel2
  3106                           	global	_start_timer3
  3107                           	global	??_start_timer3
  3108                           	global	?_start_timer3
  3109                           
  3110                           ; *************** function _start_timer3 *******
                                 **********
  3111                           ; Defined at:
  3112                           ;		line 166 in file "../main.c"
  3113                           ; Parameters:
  3114                           ;		None
  3115                           ; Auto variables:
  3116                           ;		None
  3117                           ; Return value:
  3118                           ;		type: void 
  3119                           ;		size: 0
  3120                           ; Registers used:
  3121                           ;		wreg, status,2
  3122                           ; Tracked objects:
  3123                           ;		On entry : 0/0
  3124                           ;		On exit  : 0/0
  3125                           ;		Unchanged: 0/0
  3126                           ; Data sizes:
  3127                           ;		Autos:    0
  3128                           ;		Params:   0
  3129                           ;		Temp:     0
  3130                           ;		Total:    0
  3131                           ; This function calls:
  3132                           ;		Nothing
  3133                           ; This function is called by:
  3134                           ;		_get_speed
  3135                           ; This function uses a non-reentrant model
  3136                           ; 
  3137                           	file	"../main.c"
  3138                           	line	166
  3139  000000                     	__size_of_start_timer3	equ	__end_of_start_timer
                                 3-_start_timer3
  3140                           ;main.c: 165: void start_timer3(void)
  3141                           ;main.c: 166: {
  3142                           	
  3143  000BEC                     _start_timer3:		; BSR set to: ?
  3144                           
  3145                           	opt stack 28
  3146                           	line	167
  3147                           ;main.c: 167: TMR3 = 65535-11059;
  3148  000BEC  0ECC               	movlw	low(0D4CCh)
  3149  000BEE  6EB2               	movwf	((c:4018)),c	;volatile
  3150  000BF0  0ED4               	movlw	high(0D4CCh)
  3151  000BF2  6EB3               	movwf	((c:4018+1)),c	;volatile
  3152                           	line	168
  3153                           ;main.c: 168: TMR3ON = 1;
  3154  000BF4  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
  3155                           	line	169
  3156                           ;main.c: 169: }
  3157  000BF6                     i2l770:
  3158                           			; BSR set to: ?
  3159                           
  3160  000BF6  0012               	return
  3161                           	opt stack 0
  3162                           GLOBAL __end_of_start_timer3
  3163  000BF8                     	__end_of_start_timer3:
  3164                           	FNSIZE	_start_timer3,0,0
  3165                           ; =============== function _start_timer3 ends ==
                                 ==========
  3166                           
  3167                           	signat	_start_timer3,88
  3168                           	FNCALL	_main,_init_timer3
  3169                           	FNCALL	_main,_init_pv1
  3170                           	FNCALL	_main,_modbus_receive
  3171                           	FNCALL	_modbus_receive,_modbus_crc16
  3172                           	FNCALL	_modbus_receive,_read_holding_regs
  3173                           	FNCALL	_modbus_receive,_write_single_holding_re
                                 g
  3174                           	FNCALL	_read_holding_regs,_modbus_crc16
  3175                           	FNROOT	_main
  3176                           	FNCALL	_my_isr,_rec_isr
  3177                           	FNCALL	_my_isr,_tx_isr
  3178                           	FNCALL	_my_isr,_timer35_isr
  3179                           	FNCALL	_my_isr,_timer3_isr
  3180                           	FNCALL	_my_isr,_pv1_isr
  3181                           	FNCALL	_pv1_isr,_get_speed
  3182                           	FNCALL	_get_speed,_start_timer3
  3183                           	FNCALL	_get_speed,_stop_timer3
  3184                           	FNCALL	_get_speed,___aldiv
  3185                           	FNCALL	intlevel2,_my_isr
  3186                           	global	intlevel2
  3187                           	FNROOT	intlevel2
  3188                           	global	F3912
  3189                                   psect   text17,class=CODE,space=0,reloc=
                                 2
  3190  000000                     F3912  equ     310
  3191                           
  3192                           	opt lm
  3193                           
  3194                           	DABS	1,310,1	;F3912
  3195                                   psect   idata,class=CODE,space=0
  3196                           	line	129
  3197                           
  3198                           ;initializer for F3912
  3199  00005E  01                 	db	low(01h)
  3200                                   psect   mediumconst,class=MEDIUMCONST,sp
                                 ace=0,reloc=2
  3201                           	global	_aucCRCHi
  3202                           	file	"../mbcrc.c"
  3203                           	line	2
  3204  007DFE                     _aucCRCHi:
  3205  007DFE  00                 	db	low(0)
  3206  007DFF  C1                 	db	low(0C1h)
  3207  007E00  81                 	db	low(081h)
  3208  007E01  40                 	db	low(040h)
  3209  007E02  01                 	db	low(01h)
  3210  007E03  C0                 	db	low(0C0h)
  3211  007E04  80                 	db	low(080h)
  3212  007E05  41                 	db	low(041h)
  3213  007E06  01                 	db	low(01h)
  3214  007E07  C0                 	db	low(0C0h)
  3215  007E08  80                 	db	low(080h)
  3216  007E09  41                 	db	low(041h)
  3217  007E0A  00                 	db	low(0)
  3218  007E0B  C1                 	db	low(0C1h)
  3219  007E0C  81                 	db	low(081h)
  3220  007E0D  40                 	db	low(040h)
  3221  007E0E  01                 	db	low(01h)
  3222  007E0F  C0                 	db	low(0C0h)
  3223  007E10  80                 	db	low(080h)
  3224  007E11  41                 	db	low(041h)
  3225  007E12  00                 	db	low(0)
  3226  007E13  C1                 	db	low(0C1h)
  3227  007E14  81                 	db	low(081h)
  3228  007E15  40                 	db	low(040h)
  3229  007E16  00                 	db	low(0)
  3230  007E17  C1                 	db	low(0C1h)
  3231  007E18  81                 	db	low(081h)
  3232  007E19  40                 	db	low(040h)
  3233  007E1A  01                 	db	low(01h)
  3234  007E1B  C0                 	db	low(0C0h)
  3235  007E1C  80                 	db	low(080h)
  3236  007E1D  41                 	db	low(041h)
  3237  007E1E  01                 	db	low(01h)
  3238  007E1F  C0                 	db	low(0C0h)
  3239  007E20  80                 	db	low(080h)
  3240  007E21  41                 	db	low(041h)
  3241  007E22  00                 	db	low(0)
  3242  007E23  C1                 	db	low(0C1h)
  3243  007E24  81                 	db	low(081h)
  3244  007E25  40                 	db	low(040h)
  3245  007E26  00                 	db	low(0)
  3246  007E27  C1                 	db	low(0C1h)
  3247  007E28  81                 	db	low(081h)
  3248  007E29  40                 	db	low(040h)
  3249  007E2A  01                 	db	low(01h)
  3250  007E2B  C0                 	db	low(0C0h)
  3251  007E2C  80                 	db	low(080h)
  3252  007E2D  41                 	db	low(041h)
  3253  007E2E  00                 	db	low(0)
  3254  007E2F  C1                 	db	low(0C1h)
  3255  007E30  81                 	db	low(081h)
  3256  007E31  40                 	db	low(040h)
  3257  007E32  01                 	db	low(01h)
  3258  007E33  C0                 	db	low(0C0h)
  3259  007E34  80                 	db	low(080h)
  3260  007E35  41                 	db	low(041h)
  3261  007E36  01                 	db	low(01h)
  3262  007E37  C0                 	db	low(0C0h)
  3263  007E38  80                 	db	low(080h)
  3264  007E39  41                 	db	low(041h)
  3265  007E3A  00                 	db	low(0)
  3266  007E3B  C1                 	db	low(0C1h)
  3267  007E3C  81                 	db	low(081h)
  3268  007E3D  40                 	db	low(040h)
  3269  007E3E  01                 	db	low(01h)
  3270  007E3F  C0                 	db	low(0C0h)
  3271  007E40  80                 	db	low(080h)
  3272  007E41  41                 	db	low(041h)
  3273  007E42  00                 	db	low(0)
  3274  007E43  C1                 	db	low(0C1h)
  3275  007E44  81                 	db	low(081h)
  3276  007E45  40                 	db	low(040h)
  3277  007E46  00                 	db	low(0)
  3278  007E47  C1                 	db	low(0C1h)
  3279  007E48  81                 	db	low(081h)
  3280  007E49  40                 	db	low(040h)
  3281  007E4A  01                 	db	low(01h)
  3282  007E4B  C0                 	db	low(0C0h)
  3283  007E4C  80                 	db	low(080h)
  3284  007E4D  41                 	db	low(041h)
  3285  007E4E  00                 	db	low(0)
  3286  007E4F  C1                 	db	low(0C1h)
  3287  007E50  81                 	db	low(081h)
  3288  007E51  40                 	db	low(040h)
  3289  007E52  01                 	db	low(01h)
  3290  007E53  C0                 	db	low(0C0h)
  3291  007E54  80                 	db	low(080h)
  3292  007E55  41                 	db	low(041h)
  3293  007E56  01                 	db	low(01h)
  3294  007E57  C0                 	db	low(0C0h)
  3295  007E58  80                 	db	low(080h)
  3296  007E59  41                 	db	low(041h)
  3297  007E5A  00                 	db	low(0)
  3298  007E5B  C1                 	db	low(0C1h)
  3299  007E5C  81                 	db	low(081h)
  3300  007E5D  40                 	db	low(040h)
  3301  007E5E  00                 	db	low(0)
  3302  007E5F  C1                 	db	low(0C1h)
  3303  007E60  81                 	db	low(081h)
  3304  007E61  40                 	db	low(040h)
  3305  007E62  01                 	db	low(01h)
  3306  007E63  C0                 	db	low(0C0h)
  3307  007E64  80                 	db	low(080h)
  3308  007E65  41                 	db	low(041h)
  3309  007E66  01                 	db	low(01h)
  3310  007E67  C0                 	db	low(0C0h)
  3311  007E68  80                 	db	low(080h)
  3312  007E69  41                 	db	low(041h)
  3313  007E6A  00                 	db	low(0)
  3314  007E6B  C1                 	db	low(0C1h)
  3315  007E6C  81                 	db	low(081h)
  3316  007E6D  40                 	db	low(040h)
  3317  007E6E  01                 	db	low(01h)
  3318  007E6F  C0                 	db	low(0C0h)
  3319  007E70  80                 	db	low(080h)
  3320  007E71  41                 	db	low(041h)
  3321  007E72  00                 	db	low(0)
  3322  007E73  C1                 	db	low(0C1h)
  3323  007E74  81                 	db	low(081h)
  3324  007E75  40                 	db	low(040h)
  3325  007E76  00                 	db	low(0)
  3326  007E77  C1                 	db	low(0C1h)
  3327  007E78  81                 	db	low(081h)
  3328  007E79  40                 	db	low(040h)
  3329  007E7A  01                 	db	low(01h)
  3330  007E7B  C0                 	db	low(0C0h)
  3331  007E7C  80                 	db	low(080h)
  3332  007E7D  41                 	db	low(041h)
  3333  007E7E  01                 	db	low(01h)
  3334  007E7F  C0                 	db	low(0C0h)
  3335  007E80  80                 	db	low(080h)
  3336  007E81  41                 	db	low(041h)
  3337  007E82  00                 	db	low(0)
  3338  007E83  C1                 	db	low(0C1h)
  3339  007E84  81                 	db	low(081h)
  3340  007E85  40                 	db	low(040h)
  3341  007E86  00                 	db	low(0)
  3342  007E87  C1                 	db	low(0C1h)
  3343  007E88  81                 	db	low(081h)
  3344  007E89  40                 	db	low(040h)
  3345  007E8A  01                 	db	low(01h)
  3346  007E8B  C0                 	db	low(0C0h)
  3347  007E8C  80                 	db	low(080h)
  3348  007E8D  41                 	db	low(041h)
  3349  007E8E  00                 	db	low(0)
  3350  007E8F  C1                 	db	low(0C1h)
  3351  007E90  81                 	db	low(081h)
  3352  007E91  40                 	db	low(040h)
  3353  007E92  01                 	db	low(01h)
  3354  007E93  C0                 	db	low(0C0h)
  3355  007E94  80                 	db	low(080h)
  3356  007E95  41                 	db	low(041h)
  3357  007E96  01                 	db	low(01h)
  3358  007E97  C0                 	db	low(0C0h)
  3359  007E98  80                 	db	low(080h)
  3360  007E99  41                 	db	low(041h)
  3361  007E9A  00                 	db	low(0)
  3362  007E9B  C1                 	db	low(0C1h)
  3363  007E9C  81                 	db	low(081h)
  3364  007E9D  40                 	db	low(040h)
  3365  007E9E  00                 	db	low(0)
  3366  007E9F  C1                 	db	low(0C1h)
  3367  007EA0  81                 	db	low(081h)
  3368  007EA1  40                 	db	low(040h)
  3369  007EA2  01                 	db	low(01h)
  3370  007EA3  C0                 	db	low(0C0h)
  3371  007EA4  80                 	db	low(080h)
  3372  007EA5  41                 	db	low(041h)
  3373  007EA6  01                 	db	low(01h)
  3374  007EA7  C0                 	db	low(0C0h)
  3375  007EA8  80                 	db	low(080h)
  3376  007EA9  41                 	db	low(041h)
  3377  007EAA  00                 	db	low(0)
  3378  007EAB  C1                 	db	low(0C1h)
  3379  007EAC  81                 	db	low(081h)
  3380  007EAD  40                 	db	low(040h)
  3381  007EAE  01                 	db	low(01h)
  3382  007EAF  C0                 	db	low(0C0h)
  3383  007EB0  80                 	db	low(080h)
  3384  007EB1  41                 	db	low(041h)
  3385  007EB2  00                 	db	low(0)
  3386  007EB3  C1                 	db	low(0C1h)
  3387  007EB4  81                 	db	low(081h)
  3388  007EB5  40                 	db	low(040h)
  3389  007EB6  00                 	db	low(0)
  3390  007EB7  C1                 	db	low(0C1h)
  3391  007EB8  81                 	db	low(081h)
  3392  007EB9  40                 	db	low(040h)
  3393  007EBA  01                 	db	low(01h)
  3394  007EBB  C0                 	db	low(0C0h)
  3395  007EBC  80                 	db	low(080h)
  3396  007EBD  41                 	db	low(041h)
  3397  007EBE  00                 	db	low(0)
  3398  007EBF  C1                 	db	low(0C1h)
  3399  007EC0  81                 	db	low(081h)
  3400  007EC1  40                 	db	low(040h)
  3401  007EC2  01                 	db	low(01h)
  3402  007EC3  C0                 	db	low(0C0h)
  3403  007EC4  80                 	db	low(080h)
  3404  007EC5  41                 	db	low(041h)
  3405  007EC6  01                 	db	low(01h)
  3406  007EC7  C0                 	db	low(0C0h)
  3407  007EC8  80                 	db	low(080h)
  3408  007EC9  41                 	db	low(041h)
  3409  007ECA  00                 	db	low(0)
  3410  007ECB  C1                 	db	low(0C1h)
  3411  007ECC  81                 	db	low(081h)
  3412  007ECD  40                 	db	low(040h)
  3413  007ECE  01                 	db	low(01h)
  3414  007ECF  C0                 	db	low(0C0h)
  3415  007ED0  80                 	db	low(080h)
  3416  007ED1  41                 	db	low(041h)
  3417  007ED2  00                 	db	low(0)
  3418  007ED3  C1                 	db	low(0C1h)
  3419  007ED4  81                 	db	low(081h)
  3420  007ED5  40                 	db	low(040h)
  3421  007ED6  00                 	db	low(0)
  3422  007ED7  C1                 	db	low(0C1h)
  3423  007ED8  81                 	db	low(081h)
  3424  007ED9  40                 	db	low(040h)
  3425  007EDA  01                 	db	low(01h)
  3426  007EDB  C0                 	db	low(0C0h)
  3427  007EDC  80                 	db	low(080h)
  3428  007EDD  41                 	db	low(041h)
  3429  007EDE  01                 	db	low(01h)
  3430  007EDF  C0                 	db	low(0C0h)
  3431  007EE0  80                 	db	low(080h)
  3432  007EE1  41                 	db	low(041h)
  3433  007EE2  00                 	db	low(0)
  3434  007EE3  C1                 	db	low(0C1h)
  3435  007EE4  81                 	db	low(081h)
  3436  007EE5  40                 	db	low(040h)
  3437  007EE6  00                 	db	low(0)
  3438  007EE7  C1                 	db	low(0C1h)
  3439  007EE8  81                 	db	low(081h)
  3440  007EE9  40                 	db	low(040h)
  3441  007EEA  01                 	db	low(01h)
  3442  007EEB  C0                 	db	low(0C0h)
  3443  007EEC  80                 	db	low(080h)
  3444  007EED  41                 	db	low(041h)
  3445  007EEE  00                 	db	low(0)
  3446  007EEF  C1                 	db	low(0C1h)
  3447  007EF0  81                 	db	low(081h)
  3448  007EF1  40                 	db	low(040h)
  3449  007EF2  01                 	db	low(01h)
  3450  007EF3  C0                 	db	low(0C0h)
  3451  007EF4  80                 	db	low(080h)
  3452  007EF5  41                 	db	low(041h)
  3453  007EF6  01                 	db	low(01h)
  3454  007EF7  C0                 	db	low(0C0h)
  3455  007EF8  80                 	db	low(080h)
  3456  007EF9  41                 	db	low(041h)
  3457  007EFA  00                 	db	low(0)
  3458  007EFB  C1                 	db	low(0C1h)
  3459  007EFC  81                 	db	low(081h)
  3460  007EFD  40                 	db	low(040h)
  3461                           	global	_aucCRCLo
  3462                           	line	27
  3463  007EFE                     _aucCRCLo:
  3464  007EFE  00                 	db	low(0)
  3465  007EFF  C0                 	db	low(0C0h)
  3466  007F00  C1                 	db	low(0C1h)
  3467  007F01  01                 	db	low(01h)
  3468  007F02  C3                 	db	low(0C3h)
  3469  007F03  03                 	db	low(03h)
  3470  007F04  02                 	db	low(02h)
  3471  007F05  C2                 	db	low(0C2h)
  3472  007F06  C6                 	db	low(0C6h)
  3473  007F07  06                 	db	low(06h)
  3474  007F08  07                 	db	low(07h)
  3475  007F09  C7                 	db	low(0C7h)
  3476  007F0A  05                 	db	low(05h)
  3477  007F0B  C5                 	db	low(0C5h)
  3478  007F0C  C4                 	db	low(0C4h)
  3479  007F0D  04                 	db	low(04h)
  3480  007F0E  CC                 	db	low(0CCh)
  3481  007F0F  0C                 	db	low(0Ch)
  3482  007F10  0D                 	db	low(0Dh)
  3483  007F11  CD                 	db	low(0CDh)
  3484  007F12  0F                 	db	low(0Fh)
  3485  007F13  CF                 	db	low(0CFh)
  3486  007F14  CE                 	db	low(0CEh)
  3487  007F15  0E                 	db	low(0Eh)
  3488  007F16  0A                 	db	low(0Ah)
  3489  007F17  CA                 	db	low(0CAh)
  3490  007F18  CB                 	db	low(0CBh)
  3491  007F19  0B                 	db	low(0Bh)
  3492  007F1A  C9                 	db	low(0C9h)
  3493  007F1B  09                 	db	low(09h)
  3494  007F1C  08                 	db	low(08h)
  3495  007F1D  C8                 	db	low(0C8h)
  3496  007F1E  D8                 	db	low(0D8h)
  3497  007F1F  18                 	db	low(018h)
  3498  007F20  19                 	db	low(019h)
  3499  007F21  D9                 	db	low(0D9h)
  3500  007F22  1B                 	db	low(01Bh)
  3501  007F23  DB                 	db	low(0DBh)
  3502  007F24  DA                 	db	low(0DAh)
  3503  007F25  1A                 	db	low(01Ah)
  3504  007F26  1E                 	db	low(01Eh)
  3505  007F27  DE                 	db	low(0DEh)
  3506  007F28  DF                 	db	low(0DFh)
  3507  007F29  1F                 	db	low(01Fh)
  3508  007F2A  DD                 	db	low(0DDh)
  3509  007F2B  1D                 	db	low(01Dh)
  3510  007F2C  1C                 	db	low(01Ch)
  3511  007F2D  DC                 	db	low(0DCh)
  3512  007F2E  14                 	db	low(014h)
  3513  007F2F  D4                 	db	low(0D4h)
  3514  007F30  D5                 	db	low(0D5h)
  3515  007F31  15                 	db	low(015h)
  3516  007F32  D7                 	db	low(0D7h)
  3517  007F33  17                 	db	low(017h)
  3518  007F34  16                 	db	low(016h)
  3519  007F35  D6                 	db	low(0D6h)
  3520  007F36  D2                 	db	low(0D2h)
  3521  007F37  12                 	db	low(012h)
  3522  007F38  13                 	db	low(013h)
  3523  007F39  D3                 	db	low(0D3h)
  3524  007F3A  11                 	db	low(011h)
  3525  007F3B  D1                 	db	low(0D1h)
  3526  007F3C  D0                 	db	low(0D0h)
  3527  007F3D  10                 	db	low(010h)
  3528  007F3E  F0                 	db	low(0F0h)
  3529  007F3F  30                 	db	low(030h)
  3530  007F40  31                 	db	low(031h)
  3531  007F41  F1                 	db	low(0F1h)
  3532  007F42  33                 	db	low(033h)
  3533  007F43  F3                 	db	low(0F3h)
  3534  007F44  F2                 	db	low(0F2h)
  3535  007F45  32                 	db	low(032h)
  3536  007F46  36                 	db	low(036h)
  3537  007F47  F6                 	db	low(0F6h)
  3538  007F48  F7                 	db	low(0F7h)
  3539  007F49  37                 	db	low(037h)
  3540  007F4A  F5                 	db	low(0F5h)
  3541  007F4B  35                 	db	low(035h)
  3542  007F4C  34                 	db	low(034h)
  3543  007F4D  F4                 	db	low(0F4h)
  3544  007F4E  3C                 	db	low(03Ch)
  3545  007F4F  FC                 	db	low(0FCh)
  3546  007F50  FD                 	db	low(0FDh)
  3547  007F51  3D                 	db	low(03Dh)
  3548  007F52  FF                 	db	low(0FFh)
  3549  007F53  3F                 	db	low(03Fh)
  3550  007F54  3E                 	db	low(03Eh)
  3551  007F55  FE                 	db	low(0FEh)
  3552  007F56  FA                 	db	low(0FAh)
  3553  007F57  3A                 	db	low(03Ah)
  3554  007F58  3B                 	db	low(03Bh)
  3555  007F59  FB                 	db	low(0FBh)
  3556  007F5A  39                 	db	low(039h)
  3557  007F5B  F9                 	db	low(0F9h)
  3558  007F5C  F8                 	db	low(0F8h)
  3559  007F5D  38                 	db	low(038h)
  3560  007F5E  28                 	db	low(028h)
  3561  007F5F  E8                 	db	low(0E8h)
  3562  007F60  E9                 	db	low(0E9h)
  3563  007F61  29                 	db	low(029h)
  3564  007F62  EB                 	db	low(0EBh)
  3565  007F63  2B                 	db	low(02Bh)
  3566  007F64  2A                 	db	low(02Ah)
  3567  007F65  EA                 	db	low(0EAh)
  3568  007F66  EE                 	db	low(0EEh)
  3569  007F67  2E                 	db	low(02Eh)
  3570  007F68  2F                 	db	low(02Fh)
  3571  007F69  EF                 	db	low(0EFh)
  3572  007F6A  2D                 	db	low(02Dh)
  3573  007F6B  ED                 	db	low(0EDh)
  3574  007F6C  EC                 	db	low(0ECh)
  3575  007F6D  2C                 	db	low(02Ch)
  3576  007F6E  E4                 	db	low(0E4h)
  3577  007F6F  24                 	db	low(024h)
  3578  007F70  25                 	db	low(025h)
  3579  007F71  E5                 	db	low(0E5h)
  3580  007F72  27                 	db	low(027h)
  3581  007F73  E7                 	db	low(0E7h)
  3582  007F74  E6                 	db	low(0E6h)
  3583  007F75  26                 	db	low(026h)
  3584  007F76  22                 	db	low(022h)
  3585  007F77  E2                 	db	low(0E2h)
  3586  007F78  E3                 	db	low(0E3h)
  3587  007F79  23                 	db	low(023h)
  3588  007F7A  E1                 	db	low(0E1h)
  3589  007F7B  21                 	db	low(021h)
  3590  007F7C  20                 	db	low(020h)
  3591  007F7D  E0                 	db	low(0E0h)
  3592  007F7E  A0                 	db	low(0A0h)
  3593  007F7F  60                 	db	low(060h)
  3594  007F80  61                 	db	low(061h)
  3595  007F81  A1                 	db	low(0A1h)
  3596  007F82  63                 	db	low(063h)
  3597  007F83  A3                 	db	low(0A3h)
  3598  007F84  A2                 	db	low(0A2h)
  3599  007F85  62                 	db	low(062h)
  3600  007F86  66                 	db	low(066h)
  3601  007F87  A6                 	db	low(0A6h)
  3602  007F88  A7                 	db	low(0A7h)
  3603  007F89  67                 	db	low(067h)
  3604  007F8A  A5                 	db	low(0A5h)
  3605  007F8B  65                 	db	low(065h)
  3606  007F8C  64                 	db	low(064h)
  3607  007F8D  A4                 	db	low(0A4h)
  3608  007F8E  6C                 	db	low(06Ch)
  3609  007F8F  AC                 	db	low(0ACh)
  3610  007F90  AD                 	db	low(0ADh)
  3611  007F91  6D                 	db	low(06Dh)
  3612  007F92  AF                 	db	low(0AFh)
  3613  007F93  6F                 	db	low(06Fh)
  3614  007F94  6E                 	db	low(06Eh)
  3615  007F95  AE                 	db	low(0AEh)
  3616  007F96  AA                 	db	low(0AAh)
  3617  007F97  6A                 	db	low(06Ah)
  3618  007F98  6B                 	db	low(06Bh)
  3619  007F99  AB                 	db	low(0ABh)
  3620  007F9A  69                 	db	low(069h)
  3621  007F9B  A9                 	db	low(0A9h)
  3622  007F9C  A8                 	db	low(0A8h)
  3623  007F9D  68                 	db	low(068h)
  3624  007F9E  78                 	db	low(078h)
  3625  007F9F  B8                 	db	low(0B8h)
  3626  007FA0  B9                 	db	low(0B9h)
  3627  007FA1  79                 	db	low(079h)
  3628  007FA2  BB                 	db	low(0BBh)
  3629  007FA3  7B                 	db	low(07Bh)
  3630  007FA4  7A                 	db	low(07Ah)
  3631  007FA5  BA                 	db	low(0BAh)
  3632  007FA6  BE                 	db	low(0BEh)
  3633  007FA7  7E                 	db	low(07Eh)
  3634  007FA8  7F                 	db	low(07Fh)
  3635  007FA9  BF                 	db	low(0BFh)
  3636  007FAA  7D                 	db	low(07Dh)
  3637  007FAB  BD                 	db	low(0BDh)
  3638  007FAC  BC                 	db	low(0BCh)
  3639  007FAD  7C                 	db	low(07Ch)
  3640  007FAE  B4                 	db	low(0B4h)
  3641  007FAF  74                 	db	low(074h)
  3642  007FB0  75                 	db	low(075h)
  3643  007FB1  B5                 	db	low(0B5h)
  3644  007FB2  77                 	db	low(077h)
  3645  007FB3  B7                 	db	low(0B7h)
  3646  007FB4  B6                 	db	low(0B6h)
  3647  007FB5  76                 	db	low(076h)
  3648  007FB6  72                 	db	low(072h)
  3649  007FB7  B2                 	db	low(0B2h)
  3650  007FB8  B3                 	db	low(0B3h)
  3651  007FB9  73                 	db	low(073h)
  3652  007FBA  B1                 	db	low(0B1h)
  3653  007FBB  71                 	db	low(071h)
  3654  007FBC  70                 	db	low(070h)
  3655  007FBD  B0                 	db	low(0B0h)
  3656  007FBE  50                 	db	low(050h)
  3657  007FBF  90                 	db	low(090h)
  3658  007FC0  91                 	db	low(091h)
  3659  007FC1  51                 	db	low(051h)
  3660  007FC2  93                 	db	low(093h)
  3661  007FC3  53                 	db	low(053h)
  3662  007FC4  52                 	db	low(052h)
  3663  007FC5  92                 	db	low(092h)
  3664  007FC6  96                 	db	low(096h)
  3665  007FC7  56                 	db	low(056h)
  3666  007FC8  57                 	db	low(057h)
  3667  007FC9  97                 	db	low(097h)
  3668  007FCA  55                 	db	low(055h)
  3669  007FCB  95                 	db	low(095h)
  3670  007FCC  94                 	db	low(094h)
  3671  007FCD  54                 	db	low(054h)
  3672  007FCE  9C                 	db	low(09Ch)
  3673  007FCF  5C                 	db	low(05Ch)
  3674  007FD0  5D                 	db	low(05Dh)
  3675  007FD1  9D                 	db	low(09Dh)
  3676  007FD2  5F                 	db	low(05Fh)
  3677  007FD3  9F                 	db	low(09Fh)
  3678  007FD4  9E                 	db	low(09Eh)
  3679  007FD5  5E                 	db	low(05Eh)
  3680  007FD6  5A                 	db	low(05Ah)
  3681  007FD7  9A                 	db	low(09Ah)
  3682  007FD8  9B                 	db	low(09Bh)
  3683  007FD9  5B                 	db	low(05Bh)
  3684  007FDA  99                 	db	low(099h)
  3685  007FDB  59                 	db	low(059h)
  3686  007FDC  58                 	db	low(058h)
  3687  007FDD  98                 	db	low(098h)
  3688  007FDE  88                 	db	low(088h)
  3689  007FDF  48                 	db	low(048h)
  3690  007FE0  49                 	db	low(049h)
  3691  007FE1  89                 	db	low(089h)
  3692  007FE2  4B                 	db	low(04Bh)
  3693  007FE3  8B                 	db	low(08Bh)
  3694  007FE4  8A                 	db	low(08Ah)
  3695  007FE5  4A                 	db	low(04Ah)
  3696  007FE6  4E                 	db	low(04Eh)
  3697  007FE7  8E                 	db	low(08Eh)
  3698  007FE8  8F                 	db	low(08Fh)
  3699  007FE9  4F                 	db	low(04Fh)
  3700  007FEA  8D                 	db	low(08Dh)
  3701  007FEB  4D                 	db	low(04Dh)
  3702  007FEC  4C                 	db	low(04Ch)
  3703  007FED  8C                 	db	low(08Ch)
  3704  007FEE  44                 	db	low(044h)
  3705  007FEF  84                 	db	low(084h)
  3706  007FF0  85                 	db	low(085h)
  3707  007FF1  45                 	db	low(045h)
  3708  007FF2  87                 	db	low(087h)
  3709  007FF3  47                 	db	low(047h)
  3710  007FF4  46                 	db	low(046h)
  3711  007FF5  86                 	db	low(086h)
  3712  007FF6  82                 	db	low(082h)
  3713  007FF7  42                 	db	low(042h)
  3714  007FF8  43                 	db	low(043h)
  3715  007FF9  83                 	db	low(083h)
  3716  007FFA  41                 	db	low(041h)
  3717  007FFB  81                 	db	low(081h)
  3718  007FFC  80                 	db	low(080h)
  3719  007FFD  40                 	db	low(040h)
  3720                           	global	_aucCRCHi
  3721                           	global	_aucCRCLo
  3722                           	global	_modbus_reg
  3723                           	global	_modbus_reg
  3724  000000                     _modbus_reg  equ     53
  3725                           
  3726                           	DABS	1,53,200	;_modbus_reg
  3727                           	global	_rx_buf
  3728                           	global	_rx_buf
  3729  000000                     _rx_buf  equ     0
  3730                           
  3731                           	DABS	1,0,53	;_rx_buf
  3732                           	global	_tx_buf
  3733                           	global	_tx_buf
  3734  000000                     _tx_buf  equ     256
  3735                           
  3736                           	DABS	1,256,51	;_tx_buf
  3737                           	global	F3911
  3738  000000                     F3911  equ     308
  3739                           
  3740                           	DABS	1,308,2	;F3911
  3741                           	global	_count_10ms
  3742                           	global	_count_10ms
  3743  000000                     _count_10ms  equ     253
  3744                           
  3745                           	DABS	1,253,2	;_count_10ms
  3746                           	global	F3899
  3747  000000                     F3899  equ     307
  3748                           
  3749                           	DABS	1,307,1	;F3899
  3750                           	global	_rx_state
  3751                           	global	_rx_state
  3752  000000                     _rx_state  equ     255
  3753                           
  3754                           	DABS	1,255,1	;_rx_state
  3755                           	global	_TMR1
  3756  000000                     _TMR1	equ	0xFCE
  3757                           	global	_TMR3
  3758  000000                     _TMR3	equ	0xFB2
  3759                           	global	_ANSELA
  3760  000000                     _ANSELA	equ	0xF38
  3761                           	global	_ANSELB
  3762  000000                     _ANSELB	equ	0xF39
  3763                           	global	_ANSELC
  3764  000000                     _ANSELC	equ	0xF3A
  3765                           	global	_PORTC
  3766  000000                     _PORTC	equ	0xF82
  3767                           	global	_PORTCbits
  3768  000000                     _PORTCbits	equ	0xF82
  3769                           	global	_RC1REG
  3770  000000                     _RC1REG	equ	0xFAE
  3771                           	global	_SPBRG1
  3772  000000                     _SPBRG1	equ	0xFAF
  3773                           	global	_TRISC
  3774  000000                     _TRISC	equ	0xF94
  3775                           	global	_TX1REG
  3776  000000                     _TX1REG	equ	0xFAD
  3777                           	global	_BRGH1
  3778  000000                     _BRGH1	equ	0x7D62
  3779                           	global	_CREN1
  3780  000000                     _CREN1	equ	0x7D5C
  3781                           	global	_GIE
  3782  000000                     _GIE	equ	0x7F97
  3783                           	global	_INT0IE
  3784  000000                     _INT0IE	equ	0x7F94
  3785                           	global	_INT0IF
  3786  000000                     _INT0IF	equ	0x7F91
  3787                           	global	_INTEDG0
  3788  000000                     _INTEDG0	equ	0x7F8E
  3789                           	global	_PEIE
  3790  000000                     _PEIE	equ	0x7F96
  3791                           	global	_RA5
  3792  000000                     _RA5	equ	0x7C05
  3793                           	global	_RB0
  3794  000000                     _RB0	equ	0x7C08
  3795                           	global	_RC1IE
  3796  000000                     _RC1IE	equ	0x7CED
  3797                           	global	_RC1IF
  3798  000000                     _RC1IF	equ	0x7CF5
  3799                           	global	_SPEN1
  3800  000000                     _SPEN1	equ	0x7D5F
  3801                           	global	_SYNC1
  3802  000000                     _SYNC1	equ	0x7D64
  3803                           	global	_T1CKPS0
  3804  000000                     _T1CKPS0	equ	0x7E6C
  3805                           	global	_T1CKPS1
  3806  000000                     _T1CKPS1	equ	0x7E6D
  3807                           	global	_T3CKPS0
  3808  000000                     _T3CKPS0	equ	0x7D8C
  3809                           	global	_T3CKPS1
  3810  000000                     _T3CKPS1	equ	0x7D8D
  3811                           	global	_TMR1CS0
  3812  000000                     _TMR1CS0	equ	0x7E6E
  3813                           	global	_TMR1CS1
  3814  000000                     _TMR1CS1	equ	0x7E6F
  3815                           	global	_TMR1IE
  3816  000000                     _TMR1IE	equ	0x7CE8
  3817                           	global	_TMR1IF
  3818  000000                     _TMR1IF	equ	0x7CF0
  3819                           	global	_TMR1ON
  3820  000000                     _TMR1ON	equ	0x7E68
  3821                           	global	_TMR3CS0
  3822  000000                     _TMR3CS0	equ	0x7D8E
  3823                           	global	_TMR3CS1
  3824  000000                     _TMR3CS1	equ	0x7D8F
  3825                           	global	_TMR3IE
  3826  000000                     _TMR3IE	equ	0x7D01
  3827                           	global	_TMR3IF
  3828  000000                     _TMR3IF	equ	0x7D09
  3829                           	global	_TMR3ON
  3830  000000                     _TMR3ON	equ	0x7D88
  3831                           	global	_TRISA5
  3832  000000                     _TRISA5	equ	0x7C95
  3833                           	global	_TRISB0
  3834  000000                     _TRISB0	equ	0x7C98
  3835                           	global	_TX1IE
  3836  000000                     _TX1IE	equ	0x7CEC
  3837                           	global	_TX1IF
  3838  000000                     _TX1IF	equ	0x7CF4
  3839                           	global	_TXEN1
  3840  000000                     _TXEN1	equ	0x7D65
  3841  007FFE  00                 	db 0	; dummy byte at the end
  3842                           	psect	intsave_regs,class=BIGRAM,space=1
  3843                           	PSECT	param2,class=BANK2,space=1
  3844                           	GLOBAL	__Lparam2
  3845                           	FNCONF	param2,??,?
  3846                           	GLOBAL	__Labsbss0
  3847  000000                     __Labsbss0	EQU	0
  3848                           	GLOBAL	__Habsbss0
  3849  000000                     __Habsbss0	EQU	310
  3850                           	GLOBAL	__Ldata0
  3851  000000                     __Ldata0	EQU	310
  3852                           	GLOBAL	__Hdata0
  3853  000000                     __Hdata0	EQU	311
  3854                           GLOBAL	__Lparam, __Hparam
  3855                           GLOBAL	__Lparam2, __Hparam2
  3856  000000                     __Lparam	EQU	__Lparam2
  3857  000000                     __Hparam	EQU	__Hparam2


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Thu May 30 00:30:48 2013

                                 l1 0938  
                                 l2 08FE  
                                 l3 0898  
                                 l4 091E  
            __end_of_modbus_receive 06D2  
                               l380 0646  
                               l381 0652  
                               l390 02B8  
                               l382 0662  
                               l391 00EC  
                               l383 06D0  
                               l392 0204  
                               l377 06D0  
                               l385 06BE  
                               l394 01D8  
                               l386 0682  
                               l378 0662  
                               l395 0886  
                               l387 068A  
                               l379 0656  
                               l396 082C  
                               l388 0692  
                               l397 0880  
                               l389 0696  
                               l399 086A  
                               l751 0BD4  
                               l772 0BEA  
                               l756 0AC2  
                               l757 0AA4  
                               _GIE 007F97  
                               _RB0 007C08  
                               _RA5 007C05  
                              F3911 000134  
                              F3912 000136  
                              F3899 000133  
          _write_single_holding_reg 07CC  
         read_holding_regs@data_crc 0204  
                              u1400 0ABE  
                              u1401 0ABA  
                              u1410 0204  
                              u1411 0200  
                              u1420 0880  
                              u1421 087C  
                              u1430 091E  
                              u1350 05D8  
                              u1431 091A  
                              u1351 05D4  
                              u1360 0616  
                              u1361 0612  
                              u1370 0626  
                              u1371 0622  
                              u1380 0636  
                              u1381 0632  
                              u1390 0672  
                              u1391 066E  
                              _PEIE 007F96  
                              _TMR1 000FCE  
                              _TMR3 000FB2  
                              _main 0A52  
                              fsr0h 000FEA  
                              fsr1h 000FE2  
                              indf0 000FEF  
                              fsr0l 000FE9  
                              fsr2h 000FDA  
                              indf1 000FE7  
                              fsr1l 000FE1  
                              fsr2l 000FD9  
                      _start_timer3 0BEC  
                              pclat 000FFA  
                              prodh 000FF4  
                              prodl 000FF3  
                              start 0018  
                       _stop_timer3 0BF8  
                   ?_modbus_receive 0200  
                   __end_of___aldiv 04A8  
                             ?_main 0200  
                             _BRGH1 007D62  
                             _CREN1 007D5C  
                             _RC1IE 007CED  
                             _RC1IF 007CF5  
                             i2l360 04DC  
                             i2l361 0508  
                             i2l362 0552  
                             i2l370 0B38  
                             i2l363 059C  
                             i2l371 0B38  
                             i2l356 05C6  
                             i2l364 05AC  
                             i2l372 0B34  
                             i2l357 05C6  
                             i2l373 0B22  
                             i2l366 09D6  
                             i2l374 0AEA  
                             i2l367 09D6  
                             i2l359 05B0  
                             i2l375 0AFE  
                             i2l800 030C  
                             i2l368 09D6  
                             i2l376 0B1E  
                             i2l801 0346  
                             i2l369 09D6  
                             i2l810 0492  
                             i2l802 045E  
                             i2l803 03A6  
                             i2l804 038C  
                             i2l805 03B8  
                             i2l807 045E  
                             i2l808 03B8  
                             i2l752 0B96  
                             i2l809 0440  
                             i2l753 0B96  
                             i2l761 0A18  
                             i2l770 0BF6  
                             i2l762 07CA  
                             i2l754 0B96  
                             i2l771 0C02  
                             i2l763 07CA  
                             i2l764 07B8  
                             i2l765 06D6  
                             i2l773 0BBA  
                             i2l766 06F6  
                             i2l774 0BBA  
                             i2l767 07A0  
                             i2l768 0782  
                             i2l769 07A4  
                             i2l799 04A6  
                             _SPEN1 007D5F  
                             _TX1IE 007CEC  
                             _TX1IF 007CF4  
                             _PORTC 000F82  
                             _TRISC 000F94  
                             _TXEN1 007D65  
                             _SYNC1 007D64  
                      ?_init_timer3 0200  
                   __end_of_pv1_isr 0BBC  
                   __end_of_rec_isr 05C8  
                             tablat 000FF5  
                             status 000FD8  
                   rec_isr@rec_data 0226  
                      __end_of_main 0ACA  
                            ??_main 0200  
                     __activetblptr 000002  
               modbus_crc16@ucCRCHi 0213  
               modbus_crc16@ucCRCLo 0214  
                            _ANSELA 000F38  
                            _ANSELB 000F39  
                            _ANSELC 000F3A  
                            _RC1REG 000FAE  
                            _INT0IE 007F94  
                            _INT0IF 007F91  
                            i2u1300 0562  
                            i2u1301 055E  
                            i2u1310 0948  
                            i2u1311 0944  
                            i2u1320 0956  
                            i2u1321 0952  
                            i2u1330 096A  
                            i2u1331 0966  
                            i2u1340 09A8  
                            i2u1500 0BB4  
                            i2u1341 09A4  
                            i2u1501 0BB0  
                            i2u1510 02DC  
                            i2u1511 02D8  
                            i2u1520 031E  
                            i2u1280 04C6  
                            i2u1440 0B48  
                            i2u1521 031A  
                            i2u1281 04C2  
                            i2u1441 0B44  
                            i2u1530 0378  
                            i2u1290 04D4  
                            i2u1450 0B56  
                            i2u1531 0374  
                            i2u1291 04D0  
                            i2u1451 0B52  
                            i2u1540 03B8  
                            i2u1460 0B84  
                            i2u1541 03B4  
                            i2u1461 0B80  
                            i2u1550 040A  
                            i2u1470 0716  
                            i2u1551 0406  
                            i2u1471 0712  
                            i2u1560 0472  
                            i2u1480 0742  
                            i2u1561 046E  
                            i2u1481 073E  
                            i2u1570 0AD8  
                            i2u1490 0BA6  
                            i2u1571 0AD4  
                            i2u1491 0BA2  
                            i2u1580 0AE6  
                            i2u1581 0AE2  
                            _SPBRG1 000FAF  
                            _TMR1IE 007CE8  
                            _TMR1IF 007CF0  
                            _TMR3IE 007D01  
                            _TMR3IF 007D09  
                            _TMR1ON 007E68  
                            _TMR3ON 007D88  
                            _TX1REG 000FAD  
                            _TRISB0 007C98  
                            _TRISA5 007C95  
                            __Ldata 000136  
                      ?_timer35_isr 0226  
                         ??___aldiv 022F  
                  __end_of_init_pv1 0BEC  
                            _my_isr 09D8  
                            _rx_buf 000000  
                            _tx_buf 000100  
                            _tx_isr 093A  
                         ??_pv1_isr 0226  
                         ??_rec_isr 0226  
                      __mediumconst 7DFE  
                            tblptrh 000FF7  
                            tblptrl 000FF6  
                            tblptru 000FF8  
                        __accesstop 0060  
                     ?_modbus_crc16 020F  
        ??_write_single_holding_reg 0201  
              read_holding_regs@num 0206  
                 modbus_crc16@usLen 0211  
                    ??_modbus_crc16 0213  
                      ?_stop_timer3 0227  
                  ??_modbus_receive 0200  
                         l600000235 0636  
                           ?_my_isr 0218  
                           ?_tx_isr 0226  
                           _T1CKPS0 007E6C  
                           _T1CKPS1 007E6D  
                           _T3CKPS0 007D8C  
                           _T3CKPS1 007D8D  
                           _INTEDG0 007F8E  
                           _TMR1CS0 007E6E  
                           _TMR1CS1 007E6F  
                           _TMR3CS0 007D8E  
                           _TMR3CS1 007D8F  
              modbus_crc16@pucFrame 020F  
                        _count_10ms 0000FD  
                         ?_init_pv1 0200  
                           __Hdata0 000137  
                           __Ldata0 000136  
                           __Hparam 0236  
                           __Lparam 0200  
                           ___aldiv 02BA  
                 __end_of_get_speed 07CC  
                           __ramtop 0600  
                           _pv1_isr 0B98  
                           _rec_isr 04A8  
                  ___aldiv@dividend 0227  
                        _modbus_reg 000035  
                     __Lmediumconst 7DFE  
                        ??_init_pv1 0200  
                           int_func 0008  
                  ___aldiv@quotient 0231  
                           postdec0 000FED  
                           postdec1 000FE5  
                        _timer3_isr 0B3A  
                           postinc0 000FEE  
                           postinc1 000FE6  
  __end_of_write_single_holding_reg 0888  
                 _read_holding_regs 0060  
                         _PORTCbits 000F82  
                ?_read_holding_regs 0201  
              __end_of_modbus_crc16 093A  
               ??_read_holding_regs 0201  
       read_holding_regs@start_addr 0202  
write_single_holding_reg@start_addr 0202  
         __end_of_read_holding_regs 02BA  
                    __end_of_my_isr 0A52  
                    __end_of_tx_isr 09D8  
                         __Habsbss0 000136  
                read_holding_regs@i 0201  
                         __Labsbss0 000000  
                modbus_crc16@iIndex 0215  
                     ?_start_timer3 0227  
                       ?_timer3_isr 0226  
                          ??_my_isr 0218  
                          ??_tx_isr 0226  
                     ??_init_timer3 0200  
                         __config10 00FFFF  
                         __config11 00FFFF  
         ?_write_single_holding_reg 0201  
                    ??_start_timer3 0227  
                          ?___aldiv 0227  
                         _get_speed 06D2  
                          ?_pv1_isr 0226  
                       __smallconst 0600  
                          ?_rec_isr 0226  
               __end_of_init_timer3 0BD6  
                   ___aldiv@divisor 022B  
                   ___aldiv@counter 022F  
                     ??_timer35_isr 0226  
                      _modbus_crc16 0888  
                        ?_get_speed 0226  
                          __Hparam2 0236  
                          __Lparam2 0200  
                      __Lsmallconst 0600  
               __end_of_timer35_isr 0B3A  
              __end_of_start_timer3 0BF8  
                          __config1 00E9FF  
                          __config2 00FFFF  
                          __config3 00FFFF  
                          __config4 00FFFF  
                          __config5 00FFFF  
                          __config6 00FFFF  
                          __config7 00FFFF  
                          __config8 00FFFF  
                          __config9 00FFFF  
                          _aucCRCHi 7DFE  
                          _aucCRCLo 7EFE  
                       _init_timer3 0BBC  
                          _init_pv1 0BD6  
                     ??_stop_timer3 0227  
                      ??_timer3_isr 0226  
                          _rx_state 0000FF  
                       ??_get_speed 0226  
                          intlevel2 0C04  
                __end_of_timer3_isr 0B98  
                       _timer35_isr 0ACA  
               __end_of_stop_timer3 0C04  
                    _modbus_receive 05C8  
                      ___aldiv@sign 0230  
         write_single_holding_reg@i 0201  
