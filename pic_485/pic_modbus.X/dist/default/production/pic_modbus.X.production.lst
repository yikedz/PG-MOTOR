

HI-TECH Software LITE Macro Assembler (PIC18) V9.66 build 8870 
                                                       Thu May 30 19:26:17 2013

HI-TECH Software Omniscient Code Generator build 8870
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 8870"
     2                           
     3                           	processor	18F25K22
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           # 15 "../main.c"
   102                           	global __config1 ;#
   103                           # 15 "../main.c"
   104  000000                     	__config1 equ 0xF9FF & 0xEFFF & 0xFFFF & 0xFFFF
                                  & 0xFFFF ;#
   105                           # 17 "../main.c"
   106                           	global __config2 ;#
   107                           # 17 "../main.c"
   108  000000                     	__config2 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   109                           # 19 "../main.c"
   110                           	global __config3 ;#
   111                           # 19 "../main.c"
   112  000000                     	__config3 equ 0xFFFF & 0xFFFF ;#
   113                           # 21 "../main.c"
   114                           	global __config4 ;#
   115                           # 21 "../main.c"
   116  000000                     	__config4 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  & 0xFFFF & 0xFFFF & 0xFFFF ;#
   117                           # 23 "../main.c"
   118                           	global __config5 ;#
   119                           # 23 "../main.c"
   120  000000                     	__config5 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   121                           # 25 "../main.c"
   122                           	global __config6 ;#
   123                           # 25 "../main.c"
   124  000000                     	__config6 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  ;#
   125                           # 27 "../main.c"
   126                           	global __config7 ;#
   127                           # 27 "../main.c"
   128  000000                     	__config7 equ 0xFFFF & 0xFFFF ;#
   129                           # 29 "../main.c"
   130                           	global __config8 ;#
   131                           # 29 "../main.c"
   132  000000                     	__config8 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  ;#
   133                           # 31 "../main.c"
   134                           	global __config9 ;#
   135                           # 31 "../main.c"
   136  000000                     	__config9 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   137                           # 33 "../main.c"
   138                           	global __config10 ;#
   139                           # 33 "../main.c"
   140  000000                     	__config10 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFF
                                 F ;#
   141                           # 35 "../main.c"
   142                           	global __config11 ;#
   143                           # 35 "../main.c"
   144  000000                     	__config11 equ 0xFFFF ;#
   145                           	GLOBAL	__activetblptr
   146  000000                     __activetblptr	EQU	2
   147                           	GLOBAL	__smallconst,__Lsmallconst
   148  000000                     __smallconst	EQU	__Lsmallconst
   149                           	GLOBAL	__mediumconst,__Lmediumconst
   150  000000                     __mediumconst	EQU	__Lmediumconst
   151                           	GLOBAL	__Ldata
   152  000000                     __Ldata	EQU	313
   153  000000                     read_holding_regs@i	equ	??_read_holding_regs+0
   154                           	global	read_holding_regs@i
   155  000000                     read_holding_regs@start_addr	equ	??_read_holding
                                 _regs+1
   156                           	global	read_holding_regs@start_addr
   157  000000                     read_holding_regs@data_crc	equ	??_read_holding_r
                                 egs+3
   158                           	global	read_holding_regs@data_crc
   159  000000                     read_holding_regs@num	equ	??_read_holding_regs+5
   160                           	global	read_holding_regs@num
   161  000000                     write_single_holding_reg@i	equ	??_write_single_h
                                 olding_reg+0
   162                           	global	write_single_holding_reg@i
   163  000000                     write_single_holding_reg@start_addr	equ	??_write
                                 _single_holding_reg+1
   164                           	global	write_single_holding_reg@start_addr
   165  000000                     modbus_crc16@ucCRCHi	equ	??_modbus_crc16+0
   166                           	global	modbus_crc16@ucCRCHi
   167  000000                     modbus_crc16@ucCRCLo	equ	??_modbus_crc16+1
   168                           	global	modbus_crc16@ucCRCLo
   169  000000                     modbus_crc16@iIndex	equ	??_modbus_crc16+2
   170                           	global	modbus_crc16@iIndex
   171  000000                     modbus_crc16@pucFrame	equ	?_modbus_crc16+0
   172                           	global	modbus_crc16@pucFrame
   173  000000                     modbus_crc16@usLen	equ	?_modbus_crc16+2
   174                           	global	modbus_crc16@usLen
   175  000000                     rec_isr@rec_data	equ	??_rec_isr+0
   176                           	global	rec_isr@rec_data
   177  000000                     ___aldiv@counter	equ	??___aldiv+0
   178                           	global	___aldiv@counter
   179  000000                     ___aldiv@sign	equ	??___aldiv+1
   180                           	global	___aldiv@sign
   181  000000                     ___aldiv@quotient	equ	??___aldiv+2
   182                           	global	___aldiv@quotient
   183  000000                     ___aldiv@dividend	equ	?___aldiv+0
   184                           	global	___aldiv@dividend
   185  000000                     ___aldiv@divisor	equ	?___aldiv+4
   186                           	global	___aldiv@divisor
   187                           ;Data sizes: Strings 0, constant 512, data 1, bs
                                 s 0, persistent 0 stack 55
   188                           	global	_main
   189                           	global	??_main
   190                           	global	?_main
   191                           
   192                           ; *************** function _main ***************
                                 **
   193                           ; Defined at:
   194                           ;		line 100 in file "../main.c"
   195                           ; Parameters:
   196                           ;		None
   197                           ; Auto variables:
   198                           ;		None
   199                           ; Return value:
   200                           ;		type: void 
   201                           ;		size: 0
   202                           ; Registers used:
   203                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   204                           ; Tracked objects:
   205                           ;		On entry : 0/0
   206                           ;		On exit  : 0/0
   207                           ;		Unchanged: 0/0
   208                           ; Data sizes:
   209                           ;		Autos:    0
   210                           ;		Params:   0
   211                           ;		Temp:     1
   212                           ;		Total:    1
   213                           ; This function calls:
   214                           ;		_init_timer3
   215                           ;		_init_pv1
   216                           ;		_init_timer0
   217                           ;		_init_pg_in
   218                           ;		_init_timer5
   219                           ;		_modbus_receive
   220                           ; This function is called by:
   221                           ;		Startup code after reset
   222                           ; This function uses a non-reentrant model
   223                           ; 
   224                                   psect   text0,class=CODE,space=0,reloc=2
   225                           
   226                           	opt lm
   227                           	file	"../main.c"
   228                           	line	100
   229  000000                     	__size_of_main	equ	__end_of_main-_main
   230                                   psect   text0
   231                           ;main.c: 99: void main(void)
   232                           ;main.c: 100: {
   233                           	
   234  0007DC                     _main:		; BSR set to: ?
   235                           
   236                           	opt stack 27
   237                           	line	102
   238                           ;main.c: 102: ANSELC = 0;
   239  0007DC  0E00               	movlw	low(0)
   240  0007DE  010F               	movlb	15	; () banked
   241  0007E0  010F               	movlb	15	; () banked
   242  0007E2  6F3A               	movwf	((3898))&0ffh	;volatile
   243                           	line	103
   244                           ;main.c: 103: TRISC = 0x80;
   245  0007E4  0E80               	movlw	low(080h)
   246  0007E6  6E94               	movwf	((c:3988)),c	;volatile
   247                           	line	104
   248                           ;main.c: 104: PORTC = 0xc0;
   249  0007E8  0EC0               	movlw	low(0C0h)
   250  0007EA  6E82               	movwf	((c:3970)),c	;volatile
   251                           	line	107
   252                           ;main.c: 107: ANSELA = 0;
   253  0007EC  0E00               	movlw	low(0)
   254  0007EE  010F               	movlb	15	; () banked
   255  0007F0  010F               	movlb	15	; () banked
   256  0007F2  6F38               	movwf	((3896))&0ffh	;volatile
   257                           	line	108
   258                           ;main.c: 108: TRISA5 =0;
   259  0007F4  9A92               	bcf	c:(31893/8),(31893)&7	;volatile
   260                           	line	110
   261                           ;main.c: 110: TMR1ON = 0; TMR1CS0 = 0; TMR1CS1 =
                                  0; T1CKPS0 = 0; T1CKPS1 = 0; TMR1 = 65535-40320
                                 ; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
   262  0007F6  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
   263  0007F8  9CCD               	bcf	c:(32366/8),(32366)&7	;volatile
   264  0007FA  9ECD               	bcf	c:(32367/8),(32367)&7	;volatile
   265  0007FC  98CD               	bcf	c:(32364/8),(32364)&7	;volatile
   266  0007FE  9ACD               	bcf	c:(32365/8),(32365)&7	;volatile
   267  000800  0E7F               	movlw	low(0627Fh)
   268  000802  6ECE               	movwf	((c:4046)),c	;volatile
   269  000804  0E62               	movlw	high(0627Fh)
   270  000806  6ECF               	movwf	((c:4046+1)),c	;volatile
   271  000808  909E               	bcf	c:(31984/8),(31984)&7	;volatile
   272  00080A  809D               	bsf	c:(31976/8),(31976)&7	;volatile
   273  00080C  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
   274                           	line	111
   275                           ;main.c: 111: SPEN1 = 1; SYNC1 = 0; SPBRG1 = 110
                                 592/(96*16)-1; BRGH1 = 0; CREN1 = 1; TXEN1 = 1; 
                                 RC1IE = 1;
   276  00080E  8EAB               	bsf	c:(32095/8),(32095)&7	;volatile
   277  000810  98AC               	bcf	c:(32100/8),(32100)&7	;volatile
   278  000812  0E47               	movlw	low(047h)
   279  000814  6EAF               	movwf	((c:4015)),c	;volatile
   280  000816  94AC               	bcf	c:(32098/8),(32098)&7	;volatile
   281  000818  88AB               	bsf	c:(32092/8),(32092)&7	;volatile
   282  00081A  8AAC               	bsf	c:(32101/8),(32101)&7	;volatile
   283  00081C  8A9D               	bsf	c:(31981/8),(31981)&7	;volatile
   284                           	line	113
   285                           ;main.c: 113: init_timer3();
   286  00081E  ECA5  F006         	call	_init_timer3	;wreg free
   287                           	line	114
   288                           ;main.c: 114: init_pv1();
   289  000822  ECB2  F006         	call	_init_pv1	;wreg free
   290                           	line	116
   291                           ;main.c: 116: init_timer0();
   292  000826  EC96  F006         	call	_init_timer0	;wreg free
   293                           	line	118
   294                           ;main.c: 118: init_pg_in();
   295  00082A  ECBD  F006         	call	_init_pg_in	;wreg free
   296                           	line	119
   297                           ;main.c: 119: init_timer5();
   298  00082E  EC57  F006         	call	_init_timer5	;wreg free
   299                           	line	121
   300                           ;main.c: 121: PEIE = 1;
   301  000832  8CF2               	bsf	c:(32662/8),(32662)&7	;volatile
   302                           	line	122
   303                           ;main.c: 122: GIE = 1;
   304  000834  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
   305                           	line	124
   306                           ;main.c: 124: while(1)
   307                           	
   308  000836                     l757:		; BSR set to: ?
   309                           
   310                           	line	127
   311                           ;main.c: 125: {
   312                           ;main.c: 127: if(modbus_reg[3]==1)
   313  000836  0100               	movlb	0	; () banked
   314  000838  0100               	movlb	0	; () banked
   315  00083A  053B               	decf	(0+(53+06h))&0ffh,w
   316  00083C  113C               	iorwf (1+(53+06h))&0ffh,w
   317                           
   318  00083E  A4D8               	btfss	status,2
   319  000840  EF24  F004         	goto	u1581
   320  000844  EF26  F004         	goto	u1580
   321  000848                     u1581:
   322  000848  EF29  F004         	goto	l759
   323  00084C                     u1580:
   324                           	line	129
   325                           ;main.c: 128: {
   326                           ;main.c: 129: (PORTAbits.RA5) = 1;
   327  00084C  8A80               	bsf	((c:3968)),c,5	;volatile
   328                           	line	130
   329                           ;main.c: 130: }
   330  00084E  EF2A  F004         	goto	l760
   331                           	line	131
   332                           	
   333  000852                     l759:		; BSR set to: ?
   334                           
   335                           	line	133
   336                           ;main.c: 131: else
   337                           ;main.c: 132: {
   338                           ;main.c: 133: (PORTAbits.RA5) = 0;
   339  000852  9A80               	bcf	((c:3968)),c,5	;volatile
   340                           	line	134
   341                           	
   342  000854                     l760:		; BSR set to: ?
   343                           
   344                           	line	135
   345                           ;main.c: 134: }
   346                           ;main.c: 135: modbus_receive();
   347  000854  ECE4  F002         	call	_modbus_receive	;wreg free
   348                           	line	137
   349                           ;main.c: 137: if(count_2s_flg)
   350  000858  0101               	movlb	1	; () banked
   351  00085A  0101               	movlb	1	; () banked
   352  00085C  5138               	movf	((312))&0ffh,w
   353  00085E  B4D8               	btfsc	status,2
   354  000860  EF34  F004         	goto	u1591
   355  000864  EF36  F004         	goto	u1590
   356  000868                     u1591:
   357  000868  EF56  F004         	goto	l756
   358  00086C                     u1590:
   359                           	line	139
   360                           ;main.c: 138: {
   361                           ;main.c: 139: count_2s_flg = 0;
   362  00086C  0102               	movlb	2	; () banked
   363  00086E  6F00               	movwf	(??_main+0+0)&0ffh
   364  000870  0E00               	movlw	low(0)
   365  000872  0101               	movlb	1	; () banked
   366  000874  0101               	movlb	1	; () banked
   367  000876  6F38               	movwf	((312))&0ffh
   368  000878  0102               	movlb	2	; () banked
   369  00087A  5100               	movf	(??_main+0+0)&0ffh,w
   370                           	line	141
   371                           ;main.c: 141: if(have_speed)
   372  00087C  0101               	movlb	1	; () banked
   373  00087E  0101               	movlb	1	; () banked
   374  000880  5136               	movf	((310))&0ffh,w
   375  000882  B4D8               	btfsc	status,2
   376  000884  EF46  F004         	goto	u1601
   377  000888  EF48  F004         	goto	u1600
   378  00088C                     u1601:
   379  00088C  EF52  F004         	goto	l762
   380  000890                     u1600:
   381                           	line	143
   382                           ;main.c: 142: {
   383                           ;main.c: 143: have_speed = 0;
   384  000890  0102               	movlb	2	; () banked
   385  000892  6F00               	movwf	(??_main+0+0)&0ffh
   386  000894  0E00               	movlw	low(0)
   387  000896  0101               	movlb	1	; () banked
   388  000898  0101               	movlb	1	; () banked
   389  00089A  6F36               	movwf	((310))&0ffh
   390+ 00089C  0102               	movlb	2	; () banked
   391  00089E  5100               	movf	(??_main+0+0)&0ffh,w
   392                           	line	144
   393                           ;main.c: 144: }
   394  0008A0  EF56  F004         	goto	l756
   395                           	line	145
   396                           	
   397  0008A4                     l762:		; BSR set to: ?
   398                           
   399                           	line	147
   400                           ;main.c: 145: else
   401                           ;main.c: 146: {
   402                           ;main.c: 147: modbus_reg[0] = 0;
   403  0008A4  0E00               	movlw	low(0)
   404  0008A6  6E35               	movwf	((c:53)),c
   405  0008A8  0E00               	movlw	high(0)
   406  0008AA  6E36               	movwf	((c:53+1)),c
   407                           	line	148
   408                           	
   409  0008AC                     l763:		; BSR set to: ?
   410                           
   411                           	line	149
   412                           	
   413  0008AC                     l761:		; BSR set to: ?
   414                           
   415                           	line	150
   416                           	
   417  0008AC                     l756:		; BSR set to: ?
   418                           
   419                           	line	124
   420  0008AC  EF1B  F004         	goto	l757
   421                           	global	start
   422  0008B0  EF0C  F000         	goto	start
   423                           	opt stack 0
   424                           GLOBAL __end_of_main
   425  0008B4                     	__end_of_main:
   426                           	FNSIZE	_main,1,0
   427                           ; =============== function _main ends ==========
                                 ==
   428                           
   429                                   psect   text1,class=CODE,space=0,reloc=2
   430                           	line	151
   431                           
   432                           	opt lm
   433                           	signat	_main,88
   434                           	global	_init_pg_in
   435                           	global	??_init_pg_in
   436                           	global	?_init_pg_in
   437                           
   438                           ; *************** function _init_pg_in *********
                                 ********
   439                           ; Defined at:
   440                           ;		line 265 in file "../main.c"
   441                           ; Parameters:
   442                           ;		None
   443                           ; Auto variables:
   444                           ;		None
   445                           ; Return value:
   446                           ;		type: void 
   447                           ;		size: 0
   448                           ; Registers used:
   449                           ;		None
   450                           ; Tracked objects:
   451                           ;		On entry : 0/0
   452                           ;		On exit  : 0/0
   453                           ;		Unchanged: 0/0
   454                           ; Data sizes:
   455                           ;		Autos:    0
   456                           ;		Params:   0
   457                           ;		Temp:     0
   458                           ;		Total:    0
   459                           ; This function calls:
   460                           ;		Nothing
   461                           ; This function is called by:
   462                           ;		_main
   463                           ; This function uses a non-reentrant model
   464                           ; 
   465                           	file	"../main.c"
   466                           	line	265
   467  000000                     	__size_of_init_pg_in	equ	__end_of_init_pg_in-_i
                                 nit_pg_in
   468                           ;main.c: 264: void init_pg_in(void)
   469                           ;main.c: 265: {
   470                           	
   471  000D7A                     _init_pg_in:		; BSR set to: ?
   472                           
   473                           	opt stack 26
   474                           	line	267
   475                           ;main.c: 267: TRISB1=0;
   476  000D7A  9293               	bcf	c:(31897/8),(31897)&7	;volatile
   477                           	line	268
   478                           ;main.c: 268: RB1=0;
   479  000D7C  9281               	bcf	c:(31753/8),(31753)&7	;volatile
   480                           	line	269
   481                           ;main.c: 269: TRISB1=1;
   482  000D7E  8293               	bsf	c:(31897/8),(31897)&7	;volatile
   483                           	line	270
   484                           ;main.c: 270: INTEDG1 = 1;
   485  000D80  8AF1               	bsf	c:(32653/8),(32653)&7	;volatile
   486                           	line	271
   487                           ;main.c: 271: INT1IE = 1;
   488  000D82  86F0               	bsf	c:(32643/8),(32643)&7	;volatile
   489                           	line	272
   490                           ;main.c: 272: INT1IF = 0;
   491  000D84  90F0               	bcf	c:(32640/8),(32640)&7	;volatile
   492                           	line	273
   493                           ;main.c: 273: }
   494  000D86                     l782:
   495                           			; BSR set to: ?
   496                           
   497  000D86  0012               	return
   498                           	opt stack 0
   499                           GLOBAL __end_of_init_pg_in
   500  000D88                     	__end_of_init_pg_in:
   501                           	FNSIZE	_init_pg_in,0,0
   502                           ; =============== function _init_pg_in ends ====
                                 ========
   503                           
   504                           	signat	_init_pg_in,88
   505                           	global	_init_timer5
   506                           	global	??_init_timer5
   507                           	global	?_init_timer5
   508                           
   509                           ; *************** function _init_timer5 ********
                                 *********
   510                           ; Defined at:
   511                           ;		line 287 in file "../main.c"
   512                           ; Parameters:
   513                           ;		None
   514                           ; Auto variables:
   515                           ;		None
   516                           ; Return value:
   517                           ;		type: void 
   518                           ;		size: 0
   519                           ; Registers used:
   520                           ;		wreg, status,2
   521                           ; Tracked objects:
   522                           ;		On entry : 0/0
   523                           ;		On exit  : 0/0
   524                           ;		Unchanged: 0/0
   525                           ; Data sizes:
   526                           ;		Autos:    0
   527                           ;		Params:   0
   528                           ;		Temp:     0
   529                           ;		Total:    0
   530                           ; This function calls:
   531                           ;		Nothing
   532                           ; This function is called by:
   533                           ;		_main
   534                           ; This function uses a non-reentrant model
   535                           ; 
   536                                   psect   text2,class=CODE,space=0,reloc=2
   537                           
   538                           	opt lm
   539                           	file	"../main.c"
   540                           	line	287
   541  000000                     	__size_of_init_timer5	equ	__end_of_init_timer5-
                                 _init_timer5
   542                           ;main.c: 286: void init_timer5(void)
   543                           ;main.c: 287: {
   544                           	
   545  000CAE                     _init_timer5:		; BSR set to: ?
   546                           
   547                           	opt stack 26
   548                           	line	289
   549  000CAE  010F               	movlb	(31344/8) >> 8
   550  000CB0  010F               	movlb	15	; () banked
   551  000CB2  914E               	bcf	(31344/8)&0ffh,(31344)&7	;volatile
   552                           	line	291
   553                           ;main.c: 291: TMR5CS0 = 0;
   554  000CB4  010F               	movlb	(31350/8) >> 8
   555  000CB6  010F               	movlb	15	; () banked
   556  000CB8  9D4E               	bcf	(31350/8)&0ffh,(31350)&7	;volatile
   557                           	line	292
   558                           ;main.c: 292: TMR5CS1 = 0;
   559  000CBA  010F               	movlb	(31351/8) >> 8
   560  000CBC  010F               	movlb	15	; () banked
   561  000CBE  9F4E               	bcf	(31351/8)&0ffh,(31351)&7	;volatile
   562                           	line	294
   563                           ;main.c: 294: T5CKPS0 = 0;
   564  000CC0  010F               	movlb	(31348/8) >> 8
   565  000CC2  010F               	movlb	15	; () banked
   566  000CC4  994E               	bcf	(31348/8)&0ffh,(31348)&7	;volatile
   567                           	line	295
   568                           ;main.c: 295: T5CKPS1 = 0;
   569  000CC6  010F               	movlb	(31349/8) >> 8
   570  000CC8  010F               	movlb	15	; () banked
   571  000CCA  9B4E               	bcf	(31349/8)&0ffh,(31349)&7	;volatile
   572                           	line	297
   573                           ;main.c: 297: TMR5 = 65535-55296;
   574  000CCC  0EFF               	movlw	low(027FFh)
   575  000CCE  010F               	movlb	15	; () banked
   576  000CD0  010F               	movlb	15	; () banked
   577  000CD2  6F4F               	movwf	((3919))&0ffh	;volatile
   578  000CD4  0E27               	movlw	high(027FFh)
   579  000CD6  010F               	movlb	15	; () banked
   580  000CD8  6F50               	movwf	((3919+1))&0ffh	;volatile
   581                           	line	299
   582                           ;main.c: 299: TMR5IF=0;
   583  000CDA  927E               	bcf	c:(31729/8),(31729)&7	;volatile
   584                           	line	300
   585                           ;main.c: 300: TMR5IE=1;
   586  000CDC  827D               	bsf	c:(31721/8),(31721)&7	;volatile
   587                           	line	302
   588                           ;main.c: 302: }
   589  000CDE                     l785:
   590                           			; BSR set to: ?
   591                           
   592  000CDE  0012               	return
   593                           	opt stack 0
   594                           GLOBAL __end_of_init_timer5
   595  000CE0                     	__end_of_init_timer5:
   596                           	FNSIZE	_init_timer5,0,0
   597                           ; =============== function _init_timer5 ends ===
                                 =========
   598                           
   599                           	signat	_init_timer5,88
   600                           	global	_modbus_receive
   601                           	global	??_modbus_receive
   602                           	global	?_modbus_receive
   603                           
   604                           ; *************** function _modbus_receive *****
                                 ************
   605                           ; Defined at:
   606                           ;		line 113 in file "../modbus_rtu.c"
   607                           ; Parameters:
   608                           ;		None
   609                           ; Auto variables:
   610                           ;		None
   611                           ; Return value:
   612                           ;		type: void 
   613                           ;		size: 0
   614                           ; Registers used:
   615                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   616                           ; Tracked objects:
   617                           ;		On entry : 0/0
   618                           ;		On exit  : 0/0
   619                           ;		Unchanged: 0/0
   620                           ; Data sizes:
   621                           ;		Autos:    0
   622                           ;		Params:   0
   623                           ;		Temp:     1
   624                           ;		Total:    1
   625                           ; This function calls:
   626                           ;		_modbus_crc16
   627                           ;		_read_holding_regs
   628                           ;		_write_single_holding_reg
   629                           ; This function is called by:
   630                           ;		_main
   631                           ; This function uses a non-reentrant model
   632                           ; 
   633                                   psect   text3,class=CODE,space=0,reloc=2
   634                           
   635                           	opt lm
   636                           	file	"../modbus_rtu.c"
   637                           	line	113
   638  000000                     	__size_of_modbus_receive	equ	__end_of_modbus_re
                                 ceive-_modbus_receive
   639                           ;modbus_rtu.c: 112: void modbus_receive(void)
   640                           ;modbus_rtu.c: 113: {
   641                           	
   642  0005C8                     _modbus_receive:		; BSR set to: ?
   643                           
   644                           	opt stack 26
   645                           	line	114
   646  0005C8  0400               	decf	((c:0)),c,w
   647                           
   648  0005CA  A4D8               	btfss	status,2
   649  0005CC  EFEA  F002         	goto	u1531
   650  0005D0  EFEC  F002         	goto	u1530
   651  0005D4                     u1531:
   652  0005D4  EF31  F003         	goto	l378
   653  0005D8                     u1530:
   654                           	line	116
   655                           ;modbus_rtu.c: 115: {
   656                           ;modbus_rtu.c: 116: rx_buf.frame_ok = 0;
   657  0005D8  0102               	movlb	2	; () banked
   658  0005DA  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   659  0005DC  0E00               	movlw	low(0)
   660  0005DE  6E00               	movwf	((c:0)),c
   661  0005E0  0102               	movlb	2	; () banked
   662  0005E2  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   663                           	line	118
   664                           ;modbus_rtu.c: 118: if(modbus_crc16(rx_buf.data_
                                 buf,rx_buf.rec_count)==0)
   665  0005E4  0102               	movlb	2	; () banked
   666  0005E6  C002 F212          	movff	0+((c:0)+02h),0+(?_modbus_crc16+02h)
   667  0005EA  0102               	movlb	2	; () banked
   668  0005EC  0102               	movlb	2	; () banked
   669  0005EE  6B13               	clrf	(1+(?_modbus_crc16+02h))&0ffh
   670  0005F0  0E03               	movlw	low((c:0)+03h)
   671  0005F2  0102               	movlb	2	; () banked
   672  0005F4  0102               	movlb	2	; () banked
   673  0005F6  6F10               	movwf	((?_modbus_crc16))&0ffh
   674  0005F8  0E00               	movlw	high((c:0)+03h)
   675  0005FA  0102               	movlb	2	; () banked
   676  0005FC  6F11               	movwf	((?_modbus_crc16+1))&0ffh
   677  0005FE  ECB8  F004         	call	_modbus_crc16	;wreg free
   678  000602  0102               	movlb	2	; () banked
   679  000604  5111               	movf	(1+?_modbus_crc16)&0ffh,w
   680  000606  1110               	iorwf (0+?_modbus_crc16)&0ffh,w
   681                           
   682  000608  A4D8               	btfss	status,2
   683  00060A  EF09  F003         	goto	u1541
   684  00060E  EF0B  F003         	goto	u1540
   685  000612                     u1541:
   686  000612  EF2B  F003         	goto	l379
   687  000616                     u1540:
   688                           	line	120
   689                           ;modbus_rtu.c: 119: {
   690                           ;modbus_rtu.c: 120: if((1 ==rx_buf.data_buf[0])|
                                 |(255==rx_buf.data_buf[0]))
   691  000616  0403               	decf	(0+((c:0)+03h)),c,w
   692                           
   693  000618  B4D8               	btfsc	status,2
   694  00061A  EF11  F003         	goto	u1551
   695  00061E  EF13  F003         	goto	u1550
   696  000622                     u1551:
   697  000622  EF1B  F003         	goto	l600000273
   698  000626                     u1550:
   699  000626  2803               	incf	(0+((c:0)+03h)),c,w
   700                           
   701  000628  A4D8               	btfss	status,2
   702  00062A  EF19  F003         	goto	u1561
   703  00062E  EF1B  F003         	goto	u1560
   704  000632                     u1561:
   705  000632  EF23  F003         	goto	l380
   706  000636                     u1560:
   707                           	
   708  000636                     l600000273:		; BSR set to: ?
   709                           
   710                           	line	122
   711                           ;modbus_rtu.c: 121: {
   712                           ;modbus_rtu.c: 122: rx_buf.data_valid = 1;
   713  000636  0102               	movlb	2	; () banked
   714  000638  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   715  00063A  0E01               	movlw	low(01h)
   716  00063C  6E01               	movwf	(0+((c:0)+01h)),c
   717  00063E  0102               	movlb	2	; () banked
   718  000640  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   719                           	line	123
   720                           ;modbus_rtu.c: 123: }
   721  000642  EF29  F003         	goto	l381
   722                           	line	124
   723                           	
   724  000646                     l380:		; BSR set to: ?
   725                           
   726                           	line	126
   727                           ;modbus_rtu.c: 124: else
   728                           ;modbus_rtu.c: 125: {
   729                           ;modbus_rtu.c: 126: rx_buf.rec_count = 0;
   730  000646  0102               	movlb	2	; () banked
   731  000648  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   732  00064A  0E00               	movlw	low(0)
   733  00064C  6E02               	movwf	(0+((c:0)+02h)),c
   734  00064E  0102               	movlb	2	; () banked
   735  000650  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   736                           	line	127
   737                           	
   738  000652                     l381:		; BSR set to: ?
   739                           
   740                           	line	128
   741                           ;modbus_rtu.c: 127: }
   742                           ;modbus_rtu.c: 128: }
   743  000652  EF31  F003         	goto	l378
   744                           	line	129
   745                           	
   746  000656                     l379:		; BSR set to: ?
   747                           
   748                           	line	131
   749                           ;modbus_rtu.c: 129: else
   750                           ;modbus_rtu.c: 130: {
   751                           ;modbus_rtu.c: 131: rx_buf.rec_count = 0;
   752  000656  0102               	movlb	2	; () banked
   753  000658  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   754  00065A  0E00               	movlw	low(0)
   755  00065C  6E02               	movwf	(0+((c:0)+02h)),c
   756  00065E  0102               	movlb	2	; () banked
   757  000660  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   758                           	line	132
   759                           	
   760  000662                     l382:		; BSR set to: ?
   761                           
   762                           	line	133
   763                           	
   764  000662                     l378:		; BSR set to: ?
   765                           
   766                           	line	135
   767                           ;modbus_rtu.c: 132: }
   768                           ;modbus_rtu.c: 133: }
   769                           ;modbus_rtu.c: 135: if(rx_buf.data_valid)
   770  000662  5001               	movf	(0+((c:0)+01h)),c,w
   771  000664  B4D8               	btfsc	status,2
   772  000666  EF37  F003         	goto	u1571
   773  00066A  EF39  F003         	goto	u1570
   774  00066E                     u1571:
   775  00066E  EF68  F003         	goto	l383
   776  000672                     u1570:
   777                           	line	137
   778                           ;modbus_rtu.c: 136: {
   779                           ;modbus_rtu.c: 137: rx_buf.data_valid = 0;
   780  000672  0102               	movlb	2	; () banked
   781  000674  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   782  000676  0E00               	movlw	low(0)
   783  000678  6E01               	movwf	(0+((c:0)+01h)),c
   784  00067A  0102               	movlb	2	; () banked
   785  00067C  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   786                           	line	139
   787                           ;modbus_rtu.c: 139: switch(rx_buf.data_buf[1])
   788  00067E  EF5F  F003         	goto	l385
   789                           	line	141
   790                           ;modbus_rtu.c: 140: {
   791                           ;modbus_rtu.c: 141: case 0x03:
   792                           	
   793  000682                     l386:		; BSR set to: ?
   794                           
   795                           	line	142
   796                           ;modbus_rtu.c: 142: read_holding_regs();
   797  000682  EC30  F000         	call	_read_holding_regs	;wreg free
   798                           	line	143
   799                           ;modbus_rtu.c: 143: break;
   800  000686  EF68  F003         	goto	l383
   801                           	line	144
   802                           ;modbus_rtu.c: 144: case 0x06:
   803                           	
   804  00068A                     l387:		; BSR set to: ?
   805                           
   806                           	line	145
   807                           ;modbus_rtu.c: 145: write_single_holding_reg();
   808  00068A  EC5A  F004         	call	_write_single_holding_reg	;wreg free
   809                           	line	146
   810                           ;modbus_rtu.c: 146: break;
   811  00068E  EF68  F003         	goto	l383
   812                           	line	147
   813                           ;modbus_rtu.c: 147: case 0x16:
   814                           	
   815  000692                     l388:		; BSR set to: ?
   816                           
   817                           	line	149
   818                           ;modbus_rtu.c: 149: break;
   819  000692  EF68  F003         	goto	l383
   820                           	line	150
   821                           ;modbus_rtu.c: 150: default:
   822                           	
   823  000696                     l389:		; BSR set to: ?
   824                           
   825                           	line	151
   826                           ;modbus_rtu.c: 151: rx_buf.data_valid = 0;
   827  000696  0102               	movlb	2	; () banked
   828  000698  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   829  00069A  0E00               	movlw	low(0)
   830  00069C  6E01               	movwf	(0+((c:0)+01h)),c
   831  00069E  0102               	movlb	2	; () banked
   832  0006A0  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   833                           	line	152
   834                           ;modbus_rtu.c: 152: rx_buf.rec_count = 0;
   835  0006A2  0102               	movlb	2	; () banked
   836  0006A4  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   837  0006A6  0E00               	movlw	low(0)
   838  0006A8  6E02               	movwf	(0+((c:0)+02h)),c
   839  0006AA  0102               	movlb	2	; () banked
   840  0006AC  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   841                           	line	153
   842                           ;modbus_rtu.c: 153: rx_buf.frame_ok = 0;
   843  0006AE  0102               	movlb	2	; () banked
   844  0006B0  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   845  0006B2  0E00               	movlw	low(0)
   846  0006B4  6E00               	movwf	((c:0)),c
   847  0006B6  0102               	movlb	2	; () banked
   848  0006B8  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   849                           	line	154
   850                           ;modbus_rtu.c: 154: break;
   851  0006BA  EF68  F003         	goto	l383
   852                           	line	139
   853                           	
   854  0006BE                     l385:		; BSR set to: ?
   855                           
   856  0006BE  5004               	movf	(0+((c:0)+04h)),c,w
   857  0006C0  0A03               	xorlw	3 ^ 0
   858  0006C2  E0DF               	bz	l386
   859  0006C4  0A05               	xorlw	6 ^ 3
   860  0006C6  E0E1               	bz	l387
   861  0006C8  0A10               	xorlw	22 ^ 6
   862  0006CA  E0E3               	bz	l388
   863  0006CC  EF4B  F003         	goto	l389
   864                           
   865                           	line	156
   866                           	
   867  0006D0                     l383:		; BSR set to: ?
   868                           
   869                           	line	157
   870                           ;modbus_rtu.c: 156: }
   871                           ;modbus_rtu.c: 157: }
   872  0006D0                     l377:
   873                           			; BSR set to: ?
   874                           
   875  0006D0  0012               	return
   876                           	opt stack 0
   877                           GLOBAL __end_of_modbus_receive
   878  0006D2                     	__end_of_modbus_receive:
   879                           	FNSIZE	_modbus_receive,1,0
   880                           ; =============== function _modbus_receive ends 
                                 ============
   881                           
   882                           	signat	_modbus_receive,88
   883                           	global	_init_timer3
   884                           	global	??_init_timer3
   885                           	global	?_init_timer3
   886                           
   887                           ; *************** function _init_timer3 ********
                                 *********
   888                           ; Defined at:
   889                           ;		line 65 in file "../main.c"
   890                           ; Parameters:
   891                           ;		None
   892                           ; Auto variables:
   893                           ;		None
   894                           ; Return value:
   895                           ;		type: void 
   896                           ;		size: 0
   897                           ; Registers used:
   898                           ;		wreg, status,2
   899                           ; Tracked objects:
   900                           ;		On entry : 0/0
   901                           ;		On exit  : 0/0
   902                           ;		Unchanged: 0/0
   903                           ; Data sizes:
   904                           ;		Autos:    0
   905                           ;		Params:   0
   906                           ;		Temp:     0
   907                           ;		Total:    0
   908                           ; This function calls:
   909                           ;		Nothing
   910                           ; This function is called by:
   911                           ;		_main
   912                           ; This function uses a non-reentrant model
   913                           ; 
   914                                   psect   text4,class=CODE,space=0,reloc=2
   915                           
   916                           	opt lm
   917                           	file	"../main.c"
   918                           	line	65
   919  000000                     	__size_of_init_timer3	equ	__end_of_init_timer3-
                                 _init_timer3
   920                           ;main.c: 15: asm("\tglobal __config" "1"); asm("
                                 \t__config" "1" " equ " "0xF9FF & 0xEFFF & 0xFFF
                                 F & 0xFFFF & 0xFFFF");
   921                           ;main.c: 17: asm("\tglobal __config" "2"); asm("
                                 \t__config" "2" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F");
   922                           ;main.c: 19: asm("\tglobal __config" "3"); asm("
                                 \t__config" "3" " equ " "0xFFFF & 0xFFFF");
   923                           ;main.c: 21: asm("\tglobal __config" "4"); asm("
                                 \t__config" "4" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF");
   924                           ;main.c: 23: asm("\tglobal __config" "5"); asm("
                                 \t__config" "5" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F");
   925                           	
   926  000D4A                     _init_timer3:		; BSR set to: ?
   927                           
   928                           	opt stack 26
   929                           	line	67
   930                           ;main.c: 67: TMR3ON = 0;
   931  000D4A  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
   932                           	line	69
   933                           ;main.c: 69: TMR3CS0 = 0;
   934  000D4C  9CB1               	bcf	c:(32142/8),(32142)&7	;volatile
   935                           	line	70
   936                           ;main.c: 70: TMR3CS1 = 0;
   937  000D4E  9EB1               	bcf	c:(32143/8),(32143)&7	;volatile
   938                           	line	72
   939                           ;main.c: 72: T3CKPS0 = 0;
   940  000D50  98B1               	bcf	c:(32140/8),(32140)&7	;volatile
   941                           	line	73
   942                           ;main.c: 73: T3CKPS1 = 0;
   943  000D52  9AB1               	bcf	c:(32141/8),(32141)&7	;volatile
   944                           	line	75
   945                           ;main.c: 75: TMR3 = 65535-11059;
   946  000D54  0ECC               	movlw	low(0D4CCh)
   947  000D56  6EB2               	movwf	((c:4018)),c	;volatile
   948  000D58  0ED4               	movlw	high(0D4CCh)
   949  000D5A  6EB3               	movwf	((c:4018+1)),c	;volatile
   950                           	line	76
   951                           ;main.c: 76: TMR3IF=0;
   952  000D5C  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
   953                           	line	77
   954                           ;main.c: 77: TMR3IE=1;
   955  000D5E  82A0               	bsf	c:(32001/8),(32001)&7	;volatile
   956                           	line	78
   957                           ;main.c: 78: TMR3ON = 1;
   958  000D60  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
   959                           	line	79
   960                           ;main.c: 79: }
   961  000D62                     l751:
   962                           			; BSR set to: ?
   963                           
   964  000D62  0012               	return
   965                           	opt stack 0
   966                           GLOBAL __end_of_init_timer3
   967  000D64                     	__end_of_init_timer3:
   968                           	FNSIZE	_init_timer3,0,0
   969                           ; =============== function _init_timer3 ends ===
                                 =========
   970                           
   971                           	signat	_init_timer3,88
   972                           	global	_init_pv1
   973                           	global	??_init_pv1
   974                           	global	?_init_pv1
   975                           
   976                           ; *************** function _init_pv1 ***********
                                 ******
   977                           ; Defined at:
   978                           ;		line 210 in file "../main.c"
   979                           ; Parameters:
   980                           ;		None
   981                           ; Auto variables:
   982                           ;		None
   983                           ; Return value:
   984                           ;		type: void 
   985                           ;		size: 0
   986                           ; Registers used:
   987                           ;		wreg, status,2
   988                           ; Tracked objects:
   989                           ;		On entry : 0/0
   990                           ;		On exit  : 0/0
   991                           ;		Unchanged: 0/0
   992                           ; Data sizes:
   993                           ;		Autos:    0
   994                           ;		Params:   0
   995                           ;		Temp:     0
   996                           ;		Total:    0
   997                           ; This function calls:
   998                           ;		Nothing
   999                           ; This function is called by:
  1000                           ;		_main
  1001                           ; This function uses a non-reentrant model
  1002                           ; 
  1003                                   psect   text5,class=CODE,space=0,reloc=2
  1004                           
  1005                           	opt lm
  1006                           	file	"../main.c"
  1007                           	line	210
  1008  000000                     	__size_of_init_pv1	equ	__end_of_init_pv1-_init_
                                 pv1
  1009                           ;main.c: 209: void init_pv1(void)
  1010                           ;main.c: 210: {
  1011                           	
  1012  000D64                     _init_pv1:		; BSR set to: ?
  1013                           
  1014                           	opt stack 26
  1015                           	line	211
  1016  000D64  0E00               	movlw	low(0)
  1017  000D66  010F               	movlb	15	; () banked
  1018  000D68  010F               	movlb	15	; () banked
  1019  000D6A  6F39               	movwf	((3897))&0ffh	;volatile
  1020                           	line	212
  1021                           ;main.c: 212: TRISB0=0;
  1022  000D6C  9093               	bcf	c:(31896/8),(31896)&7	;volatile
  1023                           	line	213
  1024                           ;main.c: 213: RB0=1;
  1025  000D6E  8081               	bsf	c:(31752/8),(31752)&7	;volatile
  1026                           	line	214
  1027                           ;main.c: 214: TRISB0=1;
  1028  000D70  8093               	bsf	c:(31896/8),(31896)&7	;volatile
  1029                           	line	215
  1030                           ;main.c: 215: INTEDG0 = 0;
  1031  000D72  9CF1               	bcf	c:(32654/8),(32654)&7	;volatile
  1032                           	line	216
  1033                           ;main.c: 216: INT0IE = 1;
  1034  000D74  88F2               	bsf	c:(32660/8),(32660)&7	;volatile
  1035                           	line	217
  1036                           ;main.c: 217: INT0IF = 0;
  1037  000D76  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
  1038                           	line	218
  1039                           ;main.c: 218: }
  1040  000D78                     l775:
  1041                           			; BSR set to: ?
  1042                           
  1043  000D78  0012               	return
  1044                           	opt stack 0
  1045                           GLOBAL __end_of_init_pv1
  1046  000D7A                     	__end_of_init_pv1:
  1047                           	FNSIZE	_init_pv1,0,0
  1048                           ; =============== function _init_pv1 ends ======
                                 ======
  1049                           
  1050                           	signat	_init_pv1,88
  1051                           	global	_init_timer0
  1052                           	global	??_init_timer0
  1053                           	global	?_init_timer0
  1054                           
  1055                           ; *************** function _init_timer0 ********
                                 *********
  1056                           ; Defined at:
  1057                           ;		line 229 in file "../main.c"
  1058                           ; Parameters:
  1059                           ;		None
  1060                           ; Auto variables:
  1061                           ;		None
  1062                           ; Return value:
  1063                           ;		type: void 
  1064                           ;		size: 0
  1065                           ; Registers used:
  1066                           ;		wreg, status,2
  1067                           ; Tracked objects:
  1068                           ;		On entry : 0/0
  1069                           ;		On exit  : 0/0
  1070                           ;		Unchanged: 0/0
  1071                           ; Data sizes:
  1072                           ;		Autos:    0
  1073                           ;		Params:   0
  1074                           ;		Temp:     0
  1075                           ;		Total:    0
  1076                           ; This function calls:
  1077                           ;		Nothing
  1078                           ; This function is called by:
  1079                           ;		_main
  1080                           ; This function uses a non-reentrant model
  1081                           ; 
  1082                                   psect   text6,class=CODE,space=0,reloc=2
  1083                           
  1084                           	opt lm
  1085                           	file	"../main.c"
  1086                           	line	229
  1087  000000                     	__size_of_init_timer0	equ	__end_of_init_timer0-
                                 _init_timer0
  1088                           ;main.c: 228: void init_timer0(void)
  1089                           ;main.c: 229: {
  1090                           	
  1091  000D2C                     _init_timer0:		; BSR set to: ?
  1092                           
  1093                           	opt stack 26
  1094                           	line	230
  1095                           ;main.c: 230: TMR0ON = 0;
  1096  000D2C  9ED5               	bcf	c:(32431/8),(32431)&7	;volatile
  1097                           	line	231
  1098                           ;main.c: 231: T08BIT = 0;
  1099  000D2E  9CD5               	bcf	c:(32430/8),(32430)&7	;volatile
  1100                           	line	232
  1101                           ;main.c: 232: T0CS = 0;
  1102  000D30  9AD5               	bcf	c:(32429/8),(32429)&7	;volatile
  1103                           	line	234
  1104                           ;main.c: 234: T0PS0 = 1;
  1105  000D32  80D5               	bsf	c:(32424/8),(32424)&7	;volatile
  1106                           	line	235
  1107                           ;main.c: 235: T0PS1 = 0;
  1108  000D34  92D5               	bcf	c:(32425/8),(32425)&7	;volatile
  1109                           	line	236
  1110                           ;main.c: 236: T0PS2 = 0;
  1111  000D36  94D5               	bcf	c:(32426/8),(32426)&7	;volatile
  1112                           	line	238
  1113                           ;main.c: 238: PSA = 0;
  1114  000D38  96D5               	bcf	c:(32427/8),(32427)&7	;volatile
  1115                           	line	239
  1116                           ;main.c: 239: TMR0 = 65535-27648;
  1117  000D3A  0EFF               	movlw	low(093FFh)
  1118  000D3C  6ED6               	movwf	((c:4054)),c	;volatile
  1119  000D3E  0E93               	movlw	high(093FFh)
  1120  000D40  6ED7               	movwf	((c:4054+1)),c	;volatile
  1121                           	line	240
  1122                           ;main.c: 240: TMR0IF = 0;
  1123  000D42  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  1124                           	line	241
  1125                           ;main.c: 241: TMR0IE = 1;
  1126  000D44  8AF2               	bsf	c:(32661/8),(32661)&7	;volatile
  1127                           	line	242
  1128                           ;main.c: 242: TMR0ON = 1;
  1129  000D46  8ED5               	bsf	c:(32431/8),(32431)&7	;volatile
  1130                           	line	244
  1131                           ;main.c: 244: }
  1132  000D48                     l778:
  1133                           			; BSR set to: ?
  1134                           
  1135  000D48  0012               	return
  1136                           	opt stack 0
  1137                           GLOBAL __end_of_init_timer0
  1138  000D4A                     	__end_of_init_timer0:
  1139                           	FNSIZE	_init_timer0,0,0
  1140                           ; =============== function _init_timer0 ends ===
                                 =========
  1141                           
  1142                           	signat	_init_timer0,88
  1143                           	global	_read_holding_regs
  1144                           	global	??_read_holding_regs
  1145                           	global	?_read_holding_regs
  1146                           
  1147                           ; *************** function _read_holding_regs **
                                 ***************
  1148                           ; Defined at:
  1149                           ;		line 160 in file "../modbus_rtu.c"
  1150                           ; Parameters:
  1151                           ;		None
  1152                           ; Auto variables:
  1153                           ;		i           	       	type: unsigned char 
  1154                           ;		start_addr  	       	type: unsigned int 
  1155                           ;		data_crc    	       	type: unsigned int 
  1156                           ;		num         	       	type: unsigned int 
  1157                           ; Return value:
  1158                           ;		type: void 
  1159                           ;		size: 0
  1160                           ; Registers used:
  1161                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
  1162                           ; Tracked objects:
  1163                           ;		On entry : 0/0
  1164                           ;		On exit  : 0/0
  1165                           ;		Unchanged: 0/0
  1166                           ; Data sizes:
  1167                           ;		Autos:    7
  1168                           ;		Params:   0
  1169                           ;		Temp:     7
  1170                           ;		Total:   14
  1171                           ; This function calls:
  1172                           ;		_modbus_crc16
  1173                           ; This function is called by:
  1174                           ;		_modbus_receive
  1175                           ; This function uses a non-reentrant model
  1176                           ; 
  1177                                   psect   text7,class=CODE,space=0,reloc=2
  1178                           
  1179                           	opt lm
  1180                           	file	"../modbus_rtu.c"
  1181                           	line	160
  1182  000000                     	__size_of_read_holding_regs	equ	__end_of_read_h
                                 olding_regs-_read_holding_regs
  1183                           ;modbus_rtu.c: 159: void read_holding_regs(void)
  1184                           ;modbus_rtu.c: 160: {
  1185                           	
  1186  000060                     _read_holding_regs:		; BSR set to: ?
  1187                           
  1188                           	opt stack 25
  1189                           	line	161
  1190                           ;modbus_rtu.c: 161: unsigned int num = 0;
  1191  000060  0E00               	movlw	low(0)
  1192  000062  0102               	movlb	2	; () banked
  1193  000064  0102               	movlb	2	; () banked
  1194  000066  6F07               	movwf	((read_holding_regs@num))&0ffh
  1195  000068  0E00               	movlw	high(0)
  1196  00006A  0102               	movlb	2	; () banked
  1197  00006C  6F08               	movwf	((read_holding_regs@num+1))&0ffh
  1198                           	line	163
  1199                           ;modbus_rtu.c: 162: unsigned int start_addr;
  1200                           ;modbus_rtu.c: 163: unsigned int data_crc=0;
  1201  00006E  0E00               	movlw	low(0)
  1202  000070  0102               	movlb	2	; () banked
  1203  000072  0102               	movlb	2	; () banked
  1204  000074  6F05               	movwf	((read_holding_regs@data_crc))&0ffh
  1205  000076  0E00               	movlw	high(0)
  1206  000078  0102               	movlb	2	; () banked
  1207  00007A  6F06               	movwf	((read_holding_regs@data_crc+1))&0ffh
  1208                           	line	164
  1209                           ;modbus_rtu.c: 164: unsigned char i = 0 ;
  1210  00007C  0102               	movlb	2	; () banked
  1211  00007E  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1212  000080  0E00               	movlw	low(0)
  1213  000082  0102               	movlb	2	; () banked
  1214  000084  0102               	movlb	2	; () banked
  1215  000086  6F02               	movwf	((read_holding_regs@i))&0ffh
  1216  000088  0102               	movlb	2	; () banked
  1217  00008A  5109               	movf	(??_read_holding_regs+7+0)&0ffh,w
  1218                           	line	166
  1219                           ;modbus_rtu.c: 166: start_addr = ((rx_buf.data_b
                                 uf[2])<<8)|(rx_buf.data_buf[3]);
  1220  00008C  5005               	movf	(0+((c:0)+05h)),c,w
  1221  00008E  0102               	movlb	2	; () banked
  1222  000090  0102               	movlb	2	; () banked
  1223  000092  6F04               	movwf	((read_holding_regs@start_addr+1))&0ffh
  1224  000094  5006               	movf	(0+((c:0)+06h)),c,w
  1225  000096  0102               	movlb	2	; () banked
  1226  000098  6F03               	movwf	((read_holding_regs@start_addr))&0ffh
  1227                           	line	168
  1228                           ;modbus_rtu.c: 168: num = ((rx_buf.data_buf[4])<
                                 <8)|(rx_buf.data_buf[5]);
  1229  00009A  5007               	movf	(0+((c:0)+07h)),c,w
  1230  00009C  0102               	movlb	2	; () banked
  1231  00009E  0102               	movlb	2	; () banked
  1232  0000A0  6F08               	movwf	((read_holding_regs@num+1))&0ffh
  1233  0000A2  5008               	movf	(0+((c:0)+08h)),c,w
  1234  0000A4  0102               	movlb	2	; () banked
  1235  0000A6  6F07               	movwf	((read_holding_regs@num))&0ffh
  1236                           	line	170
  1237                           ;modbus_rtu.c: 170: tx_buf.data_buf[0] = 1;
  1238  0000A8  0102               	movlb	2	; () banked
  1239  0000AA  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1240  0000AC  0E01               	movlw	low(01h)
  1241  0000AE  0101               	movlb	1	; () banked
  1242  0000B0  0101               	movlb	1	; () banked
  1243  0000B2  6F01               	movwf	(0+(256+01h))&0ffh
  1244  0000B4  0102               	movlb	2	; () banked
  1245  0000B6  5109               	movf	(??_read_holding_regs+7+0)&0ffh,w
  1246                           	line	171
  1247                           ;modbus_rtu.c: 171: tx_buf.data_buf[1] = 0x03;
  1248  0000B8  0102               	movlb	2	; () banked
  1249  0000BA  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1250  0000BC  0E03               	movlw	low(03h)
  1251  0000BE  0101               	movlb	1	; () banked
  1252  0000C0  0101               	movlb	1	; () banked
  1253  0000C2  6F02               	movwf	(0+(256+02h))&0ffh
  1254  0000C4  0102               	movlb	2	; () banked
  1255  0000C6  5109               	movf	(??_read_holding_regs+7+0)&0ffh,w
  1256                           	line	172
  1257                           ;modbus_rtu.c: 172: tx_buf.data_buf[2] = 2*num;
  1258  0000C8  0102               	movlb	2	; () banked
  1259  0000CA  0102               	movlb	2	; () banked
  1260  0000CC  5107               	movf	((read_holding_regs@num))&0ffh,w
  1261  0000CE  0102               	movlb	2	; () banked
  1262  0000D0  2507               	addwf	((read_holding_regs@num))&0ffh,w
  1263  0000D2  0101               	movlb	1	; () banked
  1264  0000D4  0101               	movlb	1	; () banked
  1265  0000D6  6F03               	movwf	(0+(256+03h))&0ffh
  1266                           	line	174
  1267                           ;modbus_rtu.c: 174: for(i=0;i<num;i++)
  1268  0000D8  0102               	movlb	2	; () banked
  1269  0000DA  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1270  0000DC  0E00               	movlw	low(0)
  1271  0000DE  0102               	movlb	2	; () banked
  1272  0000E0  0102               	movlb	2	; () banked
  1273  0000E2  6F02               	movwf	((read_holding_regs@i))&0ffh
  1274  0000E4  0102               	movlb	2	; () banked
  1275  0000E6  5109               	movf	(??_read_holding_regs+7+0)&0ffh,w
  1276  0000E8  EFEC  F000         	goto	l394
  1277                           	line	175
  1278                           	
  1279  0000EC                     l391:		; BSR set to: ?
  1280                           
  1281                           	line	176
  1282                           ;modbus_rtu.c: 175: {
  1283                           ;modbus_rtu.c: 176: tx_buf.data_buf[3+2*i] = mod
                                 bus_reg[i+start_addr]>>8;
  1284  0000EC  0102               	movlb	2	; () banked
  1285  0000EE  0102               	movlb	2	; () banked
  1286  0000F0  5102               	movf	((read_holding_regs@i))&0ffh,w
  1287  0000F2  0D02               	mullw	02h
  1288  0000F4  CFF3 F209          	movff	prodl,??_read_holding_regs+7+0
  1289  0000F8  0E04               	movlw	04h
  1290  0000FA  0102               	movlb	2	; () banked
  1291  0000FC  2709               	addwf	(??_read_holding_regs+7+0)&0ffh
  1292  0000FE  0101               	movlb	1	; () banked
  1293  000100  0E00               	movlw	low(256)
  1294  000102  0102               	movlb	2	; () banked
  1295  000104  2509               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1296  000106  6EE9               	movwf	c:fsr0l
  1297  000108  6AEA               	clrf	1+c:fsr0l
  1298  00010A  0101               	movlb	1	; () banked
  1299  00010C  0E01               	movlw	high(256)
  1300  00010E  22EA               	addwfc	1+c:fsr0l
  1301  000110  0102               	movlb	2	; () banked
  1302  000112  0102               	movlb	2	; () banked
  1303  000114  5102               	movf	((read_holding_regs@i))&0ffh,w
  1304  000116  0102               	movlb	2	; () banked
  1305  000118  0102               	movlb	2	; () banked
  1306  00011A  2503               	addwf	((read_holding_regs@start_addr))&0ffh,w
  1307  00011C  0102               	movlb	2	; () banked
  1308  00011E  6F0A               	movwf	(??_read_holding_regs+8+0)&0ffh
  1309  000120  0E00               	movlw	0
  1310  000122  0102               	movlb	2	; () banked
  1311  000124  0102               	movlb	2	; () banked
  1312  000126  2104               	addwfc	((read_holding_regs@start_addr+1))&0ffh,
                                 w
  1313  000128  0102               	movlb	2	; () banked
  1314  00012A  6F0B               	movwf	(??_read_holding_regs+8+0+1)&0ffh
  1315  00012C  90D8               	bcf	status,0
  1316  00012E  0102               	movlb	2	; () banked
  1317  000130  350A               	rlcf	(??_read_holding_regs+8+0)&0ffh,w
  1318  000132  0102               	movlb	2	; () banked
  1319  000134  6F0C               	movwf	(??_read_holding_regs+10+0)&0ffh
  1320  000136  0102               	movlb	2	; () banked
  1321  000138  350B               	rlcf	(??_read_holding_regs+8+1)&0ffh,w
  1322  00013A  0102               	movlb	2	; () banked
  1323  00013C  6F0D               	movwf	1+(??_read_holding_regs+10+0)&0ffh
  1324  00013E  0100               	movlb	0	; () banked
  1325  000140  0E35               	movlw	low(53)
  1326  000142  0102               	movlb	2	; () banked
  1327  000144  250C               	addwf	(??_read_holding_regs+10+0)&0ffh,w
  1328  000146  6EE1               	movwf	c:fsr1l
  1329  000148  0100               	movlb	0	; () banked
  1330  00014A  0E00               	movlw	high(53)
  1331  00014C  0102               	movlb	2	; () banked
  1332  00014E  210D               	addwfc	(??_read_holding_regs+10+1)&0ffh,w
  1333  000150  6EE2               	movwf	1+c:fsr1l
  1334  000152  CFE6 F20E          	movff	postinc1,??_read_holding_regs+12+0
  1335  000156  CFE5 F20F          	movff	postdec1,??_read_holding_regs+12+0+1
  1336  00015A  C20F  F20E         	movff	??_read_holding_regs+12+1,??_read_holding
                                 _regs+12+0
  1337  00015E  0102               	movlb	2	; () banked
  1338  000160  6B0F               	clrf	(??_read_holding_regs+12+1)&0ffh
  1339  000162  0102               	movlb	2	; () banked
  1340  000164  510E               	movf	(??_read_holding_regs+12+0)&0ffh,w
  1341  000166  6EEF               	movwf	indf0
  1342                           
  1343                           	line	177
  1344                           ;modbus_rtu.c: 177: tx_buf.data_buf[3+2*i+1] = m
                                 odbus_reg[i+start_addr];
  1345  000168  0102               	movlb	2	; () banked
  1346  00016A  0102               	movlb	2	; () banked
  1347  00016C  5102               	movf	((read_holding_regs@i))&0ffh,w
  1348  00016E  0102               	movlb	2	; () banked
  1349  000170  0102               	movlb	2	; () banked
  1350  000172  2503               	addwf	((read_holding_regs@start_addr))&0ffh,w
  1351  000174  0102               	movlb	2	; () banked
  1352  000176  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1353  000178  0E00               	movlw	0
  1354  00017A  0102               	movlb	2	; () banked
  1355  00017C  0102               	movlb	2	; () banked
  1356  00017E  2104               	addwfc	((read_holding_regs@start_addr+1))&0ffh,
                                 w
  1357  000180  0102               	movlb	2	; () banked
  1358  000182  6F0A               	movwf	(??_read_holding_regs+7+0+1)&0ffh
  1359  000184  90D8               	bcf	status,0
  1360  000186  0102               	movlb	2	; () banked
  1361  000188  3509               	rlcf	(??_read_holding_regs+7+0)&0ffh,w
  1362  00018A  0102               	movlb	2	; () banked
  1363  00018C  6F0B               	movwf	(??_read_holding_regs+9+0)&0ffh
  1364  00018E  0102               	movlb	2	; () banked
  1365  000190  350A               	rlcf	(??_read_holding_regs+7+1)&0ffh,w
  1366  000192  0102               	movlb	2	; () banked
  1367  000194  6F0C               	movwf	1+(??_read_holding_regs+9+0)&0ffh
  1368  000196  0100               	movlb	0	; () banked
  1369  000198  0E35               	movlw	low(53)
  1370  00019A  0102               	movlb	2	; () banked
  1371  00019C  250B               	addwf	(??_read_holding_regs+9+0)&0ffh,w
  1372  00019E  6EE9               	movwf	c:fsr0l
  1373  0001A0  0100               	movlb	0	; () banked
  1374  0001A2  0E00               	movlw	high(53)
  1375  0001A4  0102               	movlb	2	; () banked
  1376  0001A6  210C               	addwfc	(??_read_holding_regs+9+1)&0ffh,w
  1377  0001A8  6EEA               	movwf	1+c:fsr0l
  1378  0001AA  0102               	movlb	2	; () banked
  1379  0001AC  0102               	movlb	2	; () banked
  1380  0001AE  5102               	movf	((read_holding_regs@i))&0ffh,w
  1381  0001B0  0D02               	mullw	02h
  1382  0001B2  CFF3 F20D          	movff	prodl,??_read_holding_regs+11+0
  1383  0001B6  0E05               	movlw	05h
  1384  0001B8  0102               	movlb	2	; () banked
  1385  0001BA  270D               	addwf	(??_read_holding_regs+11+0)&0ffh
  1386  0001BC  0101               	movlb	1	; () banked
  1387  0001BE  0E00               	movlw	low(256)
  1388  0001C0  0102               	movlb	2	; () banked
  1389  0001C2  250D               	addwf	(??_read_holding_regs+11+0)&0ffh,w
  1390  0001C4  6EE1               	movwf	c:fsr1l
  1391  0001C6  6AE2               	clrf	1+c:fsr1l
  1392  0001C8  0101               	movlb	1	; () banked
  1393  0001CA  0E01               	movlw	high(256)
  1394  0001CC  22E2               	addwfc	1+c:fsr1l
  1395  0001CE  CFEF FFE7          	movff	indf0,indf1
  1396                           	line	174
  1397  0001D2  0102               	movlb	2	; () banked
  1398  0001D4  0102               	movlb	2	; () banked
  1399  0001D6  2B02               	incf	((read_holding_regs@i))&0ffh
  1400                           	
  1401  0001D8                     l394:		; BSR set to: ?
  1402                           
  1403  0001D8  0102               	movlb	2	; () banked
  1404  0001DA  C202  F209         	movff	(read_holding_regs@i),??_read_holding_reg
                                 s+7+0
  1405  0001DE  0102               	movlb	2	; () banked
  1406  0001E0  6B0A               	clrf	(??_read_holding_regs+7+0+1)&0ffh
  1407  0001E2  0102               	movlb	2	; () banked
  1408  0001E4  0102               	movlb	2	; () banked
  1409  0001E6  5107               	movf	((read_holding_regs@num))&0ffh,w
  1410  0001E8  0102               	movlb	2	; () banked
  1411  0001EA  5D09               	subwf	(??_read_holding_regs+7+0)&0ffh,w
  1412  0001EC  0102               	movlb	2	; () banked
  1413  0001EE  0102               	movlb	2	; () banked
  1414  0001F0  5108               	movf	((read_holding_regs@num+1))&0ffh,w
  1415  0001F2  0102               	movlb	2	; () banked
  1416  0001F4  590A               	subwfb	(??_read_holding_regs+7+1)&0ffh,w
  1417  0001F6  A0D8               	btfss	status,0
  1418  0001F8  EF00  F001         	goto	u1611
  1419  0001FC  EF02  F001         	goto	u1610
  1420  000200                     u1611:
  1421  000200  EF76  F000         	goto	l391
  1422  000204                     u1610:
  1423                           	
  1424  000204                     l392:		; BSR set to: ?
  1425                           
  1426                           	line	179
  1427                           ;modbus_rtu.c: 178: }
  1428                           ;modbus_rtu.c: 179: data_crc = modbus_crc16(tx_b
                                 uf.data_buf,(2*num+3));
  1429  000204  90D8               	bcf	status,0
  1430  000206  0102               	movlb	2	; () banked
  1431  000208  0102               	movlb	2	; () banked
  1432  00020A  3507               	rlcf	((read_holding_regs@num))&0ffh,w
  1433  00020C  0102               	movlb	2	; () banked
  1434  00020E  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1435  000210  0102               	movlb	2	; () banked
  1436  000212  0102               	movlb	2	; () banked
  1437  000214  3508               	rlcf	((read_holding_regs@num+1))&0ffh,w
  1438  000216  0102               	movlb	2	; () banked
  1439  000218  6F0A               	movwf	1+(??_read_holding_regs+7+0)&0ffh
  1440  00021A  0E03               	movlw	low(03h)
  1441  00021C  0102               	movlb	2	; () banked
  1442  00021E  2509               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1443  000220  0102               	movlb	2	; () banked
  1444                           	
  1445  000222  0102               	movlb	2	; () banked
  1446  000224  6F12               	movwf	(0+(?_modbus_crc16+02h))&0ffh
  1447  000226  0E00               	movlw	high(03h)
  1448  000228  0102               	movlb	2	; () banked
  1449  00022A  210A               	addwfc	(??_read_holding_regs+7+1)&0ffh,w
  1450  00022C  0102               	movlb	2	; () banked
  1451  00022E  6F13               	movwf	1+(0+(?_modbus_crc16+02h))&0ffh
  1452  000230  0101               	movlb	1	; () banked
  1453  000232  0E01               	movlw	low(256+01h)
  1454  000234  0102               	movlb	2	; () banked
  1455  000236  0102               	movlb	2	; () banked
  1456  000238  6F10               	movwf	((?_modbus_crc16))&0ffh
  1457  00023A  0101               	movlb	1	; () banked
  1458  00023C  0E01               	movlw	high(256+01h)
  1459  00023E  0102               	movlb	2	; () banked
  1460  000240  6F11               	movwf	((?_modbus_crc16+1))&0ffh
  1461  000242  ECB8  F004         	call	_modbus_crc16	;wreg free
  1462  000246  C210  F205         	movff	0+?_modbus_crc16,(read_holding_regs@data_
                                 crc)
  1463  00024A  C211  F206         	movff	1+?_modbus_crc16,(read_holding_regs@data_
                                 crc+1)
  1464                           	line	181
  1465                           ;modbus_rtu.c: 181: tx_buf.data_buf[3+2*num] = d
                                 ata_crc;
  1466  00024E  0102               	movlb	2	; () banked
  1467  000250  90D8               	bcf	status,0
  1468  000252  0102               	movlb	2	; () banked
  1469  000254  3507               	rlcf	((read_holding_regs@num))&0ffh,w
  1470  000256  0102               	movlb	2	; () banked
  1471  000258  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1472  00025A  0E04               	movlw	04h
  1473  00025C  0102               	movlb	2	; () banked
  1474  00025E  2709               	addwf	(??_read_holding_regs+7+0)&0ffh
  1475  000260  0101               	movlb	1	; () banked
  1476  000262  0E00               	movlw	low(256)
  1477  000264  0102               	movlb	2	; () banked
  1478  000266  2509               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1479  000268  6EE9               	movwf	c:fsr0l
  1480  00026A  6AEA               	clrf	1+c:fsr0l
  1481  00026C  0101               	movlb	1	; () banked
  1482  00026E  0E01               	movlw	high(256)
  1483  000270  22EA               	addwfc	1+c:fsr0l
  1484  000272  0102               	movlb	2	; () banked
  1485  000274  C205  FFEF         	movff	(read_holding_regs@data_crc),indf0
  1486                           
  1487                           	line	182
  1488                           ;modbus_rtu.c: 182: tx_buf.data_buf[4+2*num] = d
                                 ata_crc>>8;
  1489  000278  0102               	movlb	2	; () banked
  1490  00027A  90D8               	bcf	status,0
  1491  00027C  0102               	movlb	2	; () banked
  1492  00027E  3507               	rlcf	((read_holding_regs@num))&0ffh,w
  1493  000280  0102               	movlb	2	; () banked
  1494  000282  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1495  000284  0E05               	movlw	05h
  1496  000286  0102               	movlb	2	; () banked
  1497  000288  2709               	addwf	(??_read_holding_regs+7+0)&0ffh
  1498  00028A  0101               	movlb	1	; () banked
  1499  00028C  0E00               	movlw	low(256)
  1500  00028E  0102               	movlb	2	; () banked
  1501  000290  2509               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1502  000292  6EE9               	movwf	c:fsr0l
  1503  000294  6AEA               	clrf	1+c:fsr0l
  1504  000296  0101               	movlb	1	; () banked
  1505  000298  0E01               	movlw	high(256)
  1506  00029A  22EA               	addwfc	1+c:fsr0l
  1507  00029C  0102               	movlb	2	; () banked
  1508  00029E  0102               	movlb	2	; () banked
  1509  0002A0  5106               	movf	((read_holding_regs@data_crc+1))&0ffh,w
  1510  0002A2  6EEF               	movwf	indf0
  1511                           
  1512                           	line	183
  1513                           ;modbus_rtu.c: 183: tx_buf.tx_count = 5+2*num;
  1514  0002A4  0102               	movlb	2	; () banked
  1515  0002A6  0102               	movlb	2	; () banked
  1516  0002A8  5107               	movf	((read_holding_regs@num))&0ffh,w
  1517  0002AA  0102               	movlb	2	; () banked
  1518  0002AC  2507               	addwf	((read_holding_regs@num))&0ffh,w
  1519  0002AE  0F05               	addlw	low(05h)
  1520  0002B0  0101               	movlb	1	; () banked
  1521  0002B2  0101               	movlb	1	; () banked
  1522  0002B4  6F00               	movwf	((256))&0ffh
  1523                           	line	185
  1524                           ;modbus_rtu.c: 185: (TX1IE) = 1;
  1525  0002B6  889D               	bsf	c:(31980/8),(31980)&7	;volatile
  1526                           	line	186
  1527                           ;modbus_rtu.c: 186: }
  1528  0002B8                     l390:
  1529                           			; BSR set to: ?
  1530                           
  1531  0002B8  0012               	return
  1532                           	opt stack 0
  1533                           GLOBAL __end_of_read_holding_regs
  1534  0002BA                     	__end_of_read_holding_regs:
  1535                           	FNSIZE	_read_holding_regs,14,0
  1536                           ; =============== function _read_holding_regs en
                                 ds ============
  1537                           
  1538                           	signat	_read_holding_regs,88
  1539                           	global	_write_single_holding_reg
  1540                           	global	??_write_single_holding_reg
  1541                           	global	?_write_single_holding_reg
  1542                           
  1543                           ; *************** function _write_single_holding
                                 _reg *****************
  1544                           ; Defined at:
  1545                           ;		line 189 in file "../modbus_rtu.c"
  1546                           ; Parameters:
  1547                           ;		None
  1548                           ; Auto variables:
  1549                           ;		i           	       	type: unsigned char 
  1550                           ;		start_addr  	       	type: unsigned int 
  1551                           ; Return value:
  1552                           ;		type: void 
  1553                           ;		size: 0
  1554                           ; Registers used:
  1555                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0
  1556                           ; Tracked objects:
  1557                           ;		On entry : 0/0
  1558                           ;		On exit  : 0/0
  1559                           ;		Unchanged: 0/0
  1560                           ; Data sizes:
  1561                           ;		Autos:    3
  1562                           ;		Params:   0
  1563                           ;		Temp:     4
  1564                           ;		Total:    7
  1565                           ; This function calls:
  1566                           ;		Nothing
  1567                           ; This function is called by:
  1568                           ;		_modbus_receive
  1569                           ; This function uses a non-reentrant model
  1570                           ; 
  1571                                   psect   text8,class=CODE,space=0,reloc=2
  1572                           
  1573                           	opt lm
  1574                           	file	"../modbus_rtu.c"
  1575                           	line	189
  1576  000000                     	__size_of_write_single_holding_reg	equ	__end_of
                                 _write_single_holding_reg-_write_single_holding_
                                 reg
  1577                           ;modbus_rtu.c: 188: void write_single_holding_re
                                 g(void)
  1578                           ;modbus_rtu.c: 189: {
  1579                           	
  1580  0008B4                     _write_single_holding_reg:		; BSR set to: ?
  1581                           
  1582                           	opt stack 25
  1583                           	line	193
  1584  0008B4  5005               	movf	(0+((c:0)+05h)),c,w
  1585  0008B6  0102               	movlb	2	; () banked
  1586  0008B8  0102               	movlb	2	; () banked
  1587  0008BA  6F04               	movwf	((write_single_holding_reg@start_addr+1))
                                 &0ffh
  1588  0008BC  5006               	movf	(0+((c:0)+06h)),c,w
  1589  0008BE  0102               	movlb	2	; () banked
  1590  0008C0  6F03               	movwf	((write_single_holding_reg@start_addr))&0
                                 ffh
  1591                           	line	195
  1592                           ;modbus_rtu.c: 195: modbus_reg[start_addr] = (rx
                                 _buf.data_buf[5])|((rx_buf.data_buf[4])<<8);
  1593  0008C2  5007               	movf	(0+((c:0)+07h)),c,w
  1594  0008C4  0102               	movlb	2	; () banked
  1595  0008C6  6F06               	movwf	(??_write_single_holding_reg+3+0+1)&0ffh
  1596  0008C8  5008               	movf	(0+((c:0)+08h)),c,w
  1597  0008CA  0102               	movlb	2	; () banked
  1598  0008CC  6F05               	movwf	(??_write_single_holding_reg+3+0)&0ffh
  1599  0008CE  90D8               	bcf	status,0
  1600  0008D0  0102               	movlb	2	; () banked
  1601  0008D2  0102               	movlb	2	; () banked
  1602  0008D4  3503               	rlcf	((write_single_holding_reg@start_addr))&0f
                                 fh,w
  1603  0008D6  0102               	movlb	2	; () banked
  1604  0008D8  6F07               	movwf	(??_write_single_holding_reg+5+0)&0ffh
  1605  0008DA  0102               	movlb	2	; () banked
  1606  0008DC  0102               	movlb	2	; () banked
  1607  0008DE  3504               	rlcf	((write_single_holding_reg@start_addr+1))&
                                 0ffh,w
  1608  0008E0  0102               	movlb	2	; () banked
  1609  0008E2  6F08               	movwf	1+(??_write_single_holding_reg+5+0)&0ffh
  1610  0008E4  0100               	movlb	0	; () banked
  1611  0008E6  0E35               	movlw	low(53)
  1612  0008E8  0102               	movlb	2	; () banked
  1613  0008EA  2507               	addwf	(??_write_single_holding_reg+5+0)&0ffh,w
  1614  0008EC  6EE9               	movwf	c:fsr0l
  1615  0008EE  0100               	movlb	0	; () banked
  1616  0008F0  0E00               	movlw	high(53)
  1617  0008F2  0102               	movlb	2	; () banked
  1618  0008F4  2108               	addwfc	(??_write_single_holding_reg+5+1)&0ffh,w
  1619  0008F6  6EEA               	movwf	1+c:fsr0l
  1620  0008F8  C205  FFEE         	movff	??_write_single_holding_reg+3+0,postinc0
  1621  0008FC  C206  FFED         	movff	??_write_single_holding_reg+3+1,postdec0
  1622                           
  1623                           	line	197
  1624                           ;modbus_rtu.c: 197: for(i=0;i<rx_buf.rec_count;i
                                 ++)
  1625  000900  0102               	movlb	2	; () banked
  1626  000902  6F05               	movwf	(??_write_single_holding_reg+3+0)&0ffh
  1627  000904  0E00               	movlw	low(0)
  1628  000906  0102               	movlb	2	; () banked
  1629  000908  0102               	movlb	2	; () banked
  1630  00090A  6F02               	movwf	((write_single_holding_reg@i))&0ffh
  1631  00090C  0102               	movlb	2	; () banked
  1632  00090E  5105               	movf	(??_write_single_holding_reg+3+0)&0ffh,w
  1633  000910  EFA9  F004         	goto	l399
  1634                           	line	198
  1635                           	
  1636  000914                     l396:		; BSR set to: ?
  1637                           
  1638                           	line	199
  1639                           ;modbus_rtu.c: 198: {
  1640                           ;modbus_rtu.c: 199: tx_buf.data_buf[i] = rx_buf.
                                 data_buf[i];
  1641  000914  C202  F205         	movff	(write_single_holding_reg@i),??_write_sin
                                 gle_holding_reg+3+0
  1642  000918  0E03               	movlw	03h
  1643  00091A  0102               	movlb	2	; () banked
  1644  00091C  2705               	addwf	(??_write_single_holding_reg+3+0)&0ffh
  1645  00091E  0E00               	movlw	low((c:0))
  1646  000920  0102               	movlb	2	; () banked
  1647  000922  2505               	addwf	(??_write_single_holding_reg+3+0)&0ffh,w
  1648  000924  6EE9               	movwf	c:fsr0l
  1649  000926  6AEA               	clrf	1+c:fsr0l
  1650  000928  0E00               	movlw	high((c:0))
  1651  00092A  22EA               	addwfc	1+c:fsr0l
  1652  00092C  C202  F206         	movff	(write_single_holding_reg@i),??_write_sin
                                 gle_holding_reg+4+0
  1653  000930  0E01               	movlw	01h
  1654  000932  0102               	movlb	2	; () banked
  1655  000934  2706               	addwf	(??_write_single_holding_reg+4+0)&0ffh
  1656  000936  0101               	movlb	1	; () banked
  1657  000938  0E00               	movlw	low(256)
  1658  00093A  0102               	movlb	2	; () banked
  1659  00093C  2506               	addwf	(??_write_single_holding_reg+4+0)&0ffh,w
  1660  00093E  6EE1               	movwf	c:fsr1l
  1661  000940  6AE2               	clrf	1+c:fsr1l
  1662  000942  0101               	movlb	1	; () banked
  1663  000944  0E01               	movlw	high(256)
  1664  000946  22E2               	addwfc	1+c:fsr1l
  1665  000948  CFEF FFE7          	movff	indf0,indf1
  1666                           	line	197
  1667  00094C  0102               	movlb	2	; () banked
  1668  00094E  0102               	movlb	2	; () banked
  1669  000950  2B02               	incf	((write_single_holding_reg@i))&0ffh
  1670                           	
  1671  000952                     l399:		; BSR set to: ?
  1672                           
  1673  000952  5002               	movf	(0+((c:0)+02h)),c,w
  1674  000954  0102               	movlb	2	; () banked
  1675  000956  0102               	movlb	2	; () banked
  1676  000958  5D02               	subwf	((write_single_holding_reg@i))&0ffh,w
  1677  00095A  A0D8               	btfss	status,0
  1678  00095C  EFB2  F004         	goto	u1621
  1679  000960  EFB4  F004         	goto	u1620
  1680  000964                     u1621:
  1681  000964  EF8A  F004         	goto	l396
  1682  000968                     u1620:
  1683                           	
  1684  000968                     l397:		; BSR set to: ?
  1685                           
  1686                           	line	202
  1687                           ;modbus_rtu.c: 200: }
  1688                           ;modbus_rtu.c: 202: tx_buf.tx_count = rx_buf.rec
                                 _count;
  1689  000968  C002 F100          	movff	0+((c:0)+02h),(256)
  1690                           	line	205
  1691                           ;modbus_rtu.c: 205: (TX1IE) = 1;
  1692  00096C  889D               	bsf	c:(31980/8),(31980)&7	;volatile
  1693                           	line	206
  1694                           ;modbus_rtu.c: 206: }
  1695  00096E                     l395:
  1696                           			; BSR set to: ?
  1697                           
  1698  00096E  0012               	return
  1699                           	opt stack 0
  1700                           GLOBAL __end_of_write_single_holding_reg
  1701  000970                     	__end_of_write_single_holding_reg:
  1702                           	FNSIZE	_write_single_holding_reg,7,0
  1703                           ; =============== function _write_single_holding
                                 _reg ends ============
  1704                           
  1705                           	signat	_write_single_holding_reg,88
  1706                           	global	_modbus_crc16
  1707                           	global	??_modbus_crc16
  1708                           	global	?_modbus_crc16
  1709                           
  1710                           ; *************** function _modbus_crc16 *******
                                 **********
  1711                           ; Defined at:
  1712                           ;		line 53 in file "../mbcrc.c"
  1713                           ; Parameters:
  1714                           ;		pucFrame       size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 53
  1715                           ;		 -> tx_buf(51), rx_buf(53), 
  1716                           ;		usLen          size:   2offs:   2	type: unsig
                                 ned int 
  1717                           ; Auto variables:
  1718                           ;		ucCRCHi     	       	type: unsigned char 
  1719                           ;		ucCRCLo     	       	type: unsigned char 
  1720                           ;		iIndex      	       	type: int 
  1721                           ; Return value:
  1722                           ;		type: unsigned int 
  1723                           ;		size: 2
  1724                           ; Registers used:
  1725                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat
  1726                           ; Tracked objects:
  1727                           ;		On entry : 0/0
  1728                           ;		On exit  : 0/0
  1729                           ;		Unchanged: 0/0
  1730                           ; Data sizes:
  1731                           ;		Autos:    4
  1732                           ;		Params:   4
  1733                           ;		Temp:     1
  1734                           ;		Total:    9
  1735                           ; This function calls:
  1736                           ;		Nothing
  1737                           ; This function is called by:
  1738                           ;		_modbus_receive
  1739                           ;		_read_holding_regs
  1740                           ; This function uses a non-reentrant model
  1741                           ; 
  1742                                   psect   text9,class=CODE,space=0,reloc=2
  1743                           
  1744                           	opt lm
  1745                           	file	"../mbcrc.c"
  1746                           	line	53
  1747  000000                     	__size_of_modbus_crc16	equ	__end_of_modbus_crc1
                                 6-_modbus_crc16
  1748                           ;mbcrc.h: 34: unsigned int modbus_crc16( unsigne
                                 d char * pucFrame, unsigned int usLen );
  1749                           ;mbcrc.c: 2: static const unsigned char aucCRCHi
                                 [] = {
  1750                           ;mbcrc.c: 3: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1751                           ;mbcrc.c: 4: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  1752                           ;mbcrc.c: 5: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1753                           ;mbcrc.c: 6: 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1,
                                  0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  1754                           ;mbcrc.c: 7: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1755                           	
  1756  000970                     _modbus_crc16:		; BSR set to: ?
  1757                           
  1758                           	opt stack 24
  1759                           	line	54
  1760  000970  0102               	movlb	2	; () banked
  1761  000972  0102               	movlb	2	; () banked
  1762  000974  6914               	setf	((modbus_crc16@ucCRCHi))&0ffh
  1763                           	line	55
  1764                           ;mbcrc.c: 55: unsigned char ucCRCLo = 0xFF;
  1765  000976  0102               	movlb	2	; () banked
  1766  000978  0102               	movlb	2	; () banked
  1767  00097A  6915               	setf	((modbus_crc16@ucCRCLo))&0ffh
  1768                           	line	58
  1769                           ;mbcrc.c: 56: int iIndex;
  1770                           ;mbcrc.c: 58: while( usLen-- )
  1771  00097C  EFF3  F004         	goto	l2
  1772                           	
  1773  000980                     l3:		; BSR set to: ?
  1774                           
  1775                           	line	60
  1776  000980  C210  FFE9         	movff	(modbus_crc16@pucFrame),fsr0l
  1777  000984  C211  FFEA         	movff	(modbus_crc16@pucFrame+1),fsr0h
  1778  000988  50EF               	movf	indf0,w
  1779  00098A  0102               	movlb	2	; () banked
  1780  00098C  0102               	movlb	2	; () banked
  1781  00098E  1915               	xorwf	((modbus_crc16@ucCRCLo))&0ffh,w
  1782  000990  0102               	movlb	2	; () banked
  1783  000992  6F18               	movwf	(??_modbus_crc16+4+0)&0ffh
  1784  000994  0102               	movlb	2	; () banked
  1785  000996  5118               	movf	((??_modbus_crc16+4+0))&0ffh,w
  1786  000998  0102               	movlb	2	; () banked
  1787  00099A  0102               	movlb	2	; () banked
  1788  00099C  6F16               	movwf	((modbus_crc16@iIndex))&0ffh
  1789  00099E  0102               	movlb	2	; () banked
  1790  0009A0  6B17               	clrf	((modbus_crc16@iIndex+1))&0ffh
  1791                           ;mbcrc.c: 59: {
  1792                           ;mbcrc.c: 60: iIndex = ucCRCLo ^ *( pucFrame++ )
                                 ;
  1793  0009A2  0102               	movlb	2	; () banked
  1794  0009A4  0102               	movlb	2	; () banked
  1795  0009A6  4B10               	infsnz	((modbus_crc16@pucFrame))&0ffh
  1796  0009A8  2B11               	incf	((modbus_crc16@pucFrame+1))&0ffh
  1797                           	line	61
  1798                           ;mbcrc.c: 61: ucCRCLo = ( unsigned char )( ucCRC
                                 Hi ^ aucCRCHi[iIndex] );
  1799  0009AA  0EFE               	movlw	low((_aucCRCHi))
  1800  0009AC  0102               	movlb	2	; () banked
  1801  0009AE  0102               	movlb	2	; () banked
  1802  0009B0  2516               	addwf	((modbus_crc16@iIndex))&0ffh,w
  1803  0009B2  6EF6               	movwf	tblptrl
  1804  0009B4  0E7D               	movlw	high((_aucCRCHi))
  1805  0009B6  0102               	movlb	2	; () banked
  1806  0009B8  2117               	addwfc	((modbus_crc16@iIndex+1))&0ffh,w
  1807  0009BA  6EF7               	movwf	tblptrh
  1808  0009BC  0008               	tblrd	*
  1809                           	
  1810  0009BE  50F5               	movf	tablat,w
  1811                           
  1812  0009C0  0102               	movlb	2	; () banked
  1813  0009C2  0102               	movlb	2	; () banked
  1814  0009C4  1914               	xorwf	((modbus_crc16@ucCRCHi))&0ffh,w
  1815  0009C6  0102               	movlb	2	; () banked
  1816  0009C8  0102               	movlb	2	; () banked
  1817  0009CA  6F15               	movwf	((modbus_crc16@ucCRCLo))&0ffh
  1818                           	line	62
  1819                           ;mbcrc.c: 62: ucCRCHi = aucCRCLo[iIndex];
  1820  0009CC  0EFE               	movlw	low((_aucCRCLo))
  1821  0009CE  0102               	movlb	2	; () banked
  1822  0009D0  0102               	movlb	2	; () banked
  1823  0009D2  2516               	addwf	((modbus_crc16@iIndex))&0ffh,w
  1824  0009D4  6EF6               	movwf	tblptrl
  1825  0009D6  0E7E               	movlw	high((_aucCRCLo))
  1826  0009D8  0102               	movlb	2	; () banked
  1827  0009DA  2117               	addwfc	((modbus_crc16@iIndex+1))&0ffh,w
  1828  0009DC  6EF7               	movwf	tblptrh
  1829  0009DE  0008               	tblrd	*
  1830                           	
  1831  0009E0  0102               	movlb	2	; () banked
  1832  0009E2  CFF5 F214          	movff	tablat,(modbus_crc16@ucCRCHi)
  1833                           	line	63
  1834                           	
  1835  0009E6                     l2:		; BSR set to: ?
  1836                           
  1837                           	line	58
  1838  0009E6  0102               	movlb	2	; () banked
  1839  0009E8  0102               	movlb	2	; () banked
  1840  0009EA  0712               	decf	((modbus_crc16@usLen))&0ffh
  1841  0009EC  A0D8               	btfss	status,0
  1842  0009EE  0713               	decf	((modbus_crc16@usLen+1))&0ffh
  1843  0009F0  0102               	movlb	2	; () banked
  1844  0009F2  2912               	incf	((modbus_crc16@usLen))&0ffh,w
  1845  0009F4  B4D8               	btfsc	status,2
  1846  0009F6  2913               	incf ((modbus_crc16@usLen+1))&0ffh,w
  1847                           
  1848  0009F8  A4D8               	btfss	status,2
  1849  0009FA  EF01  F005         	goto	u1631
  1850  0009FE  EF03  F005         	goto	u1630
  1851  000A02                     u1631:
  1852  000A02  EFC0  F004         	goto	l3
  1853  000A06                     u1630:
  1854                           	
  1855  000A06                     l4:		; BSR set to: ?
  1856                           
  1857                           	line	64
  1858  000A06  0102               	movlb	2	; () banked
  1859  000A08  0102               	movlb	2	; () banked
  1860  000A0A  5114               	movf	((modbus_crc16@ucCRCHi))&0ffh,w
  1861  000A0C  0102               	movlb	2	; () banked
  1862  000A0E  0102               	movlb	2	; () banked
  1863  000A10  6F11               	movwf	((?_modbus_crc16+1))&0ffh
  1864  000A12  0102               	movlb	2	; () banked
  1865  000A14  0102               	movlb	2	; () banked
  1866  000A16  5115               	movf	((modbus_crc16@ucCRCLo))&0ffh,w
  1867  000A18  0102               	movlb	2	; () banked
  1868  000A1A  6F10               	movwf	((?_modbus_crc16))&0ffh
  1869  000A1C  EF10  F005         	goto	l1
  1870                           	line	65
  1871                           ;mbcrc.c: 65: }
  1872  000A20                     l1:
  1873                           			; BSR set to: ?
  1874                           
  1875  000A20  0012               	return
  1876                           	opt stack 0
  1877                           GLOBAL __end_of_modbus_crc16
  1878  000A22                     	__end_of_modbus_crc16:
  1879                           	FNSIZE	_modbus_crc16,5,4
  1880                           ; =============== function _modbus_crc16 ends ==
                                 ==========
  1881                           
  1882                           	signat	_modbus_crc16,8314
  1883                           	global	_my_isr
  1884                           	global	??_my_isr
  1885                           	global	?_my_isr
  1886                           
  1887                           ; *************** function _my_isr *************
                                 ****
  1888                           ; Defined at:
  1889                           ;		line 154 in file "../main.c"
  1890                           ; Parameters:
  1891                           ;		None
  1892                           ; Auto variables:
  1893                           ;		None
  1894                           ; Return value:
  1895                           ;		type: void 
  1896                           ;		size: 0
  1897                           ; Registers used:
  1898                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  1899                           ; Tracked objects:
  1900                           ;		On entry : 0/0
  1901                           ;		On exit  : 0/0
  1902                           ;		Unchanged: 0/0
  1903                           ; Data sizes:
  1904                           ;		Autos:    0
  1905                           ;		Params:   0
  1906                           ;		Temp:    14
  1907                           ;		Total:   14
  1908                           ; This function calls:
  1909                           ;		_rec_isr
  1910                           ;		_tx_isr
  1911                           ;		_timer35_isr
  1912                           ;		_timer3_isr
  1913                           ;		_pv1_isr
  1914                           ;		_timer0_isr
  1915                           ;		_pg_in_isr
  1916                           ;		_timer5_isr
  1917                           ; This function is called by:
  1918                           ;		Interrupt level 2
  1919                           ; This function uses a non-reentrant model
  1920                           ; 
  1921                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  1922                           
  1923                           	opt lm
  1924                           	file	"../main.c"
  1925                           	line	154
  1926  000000                     	__size_of_my_isr	equ	__end_of_my_isr-_my_isr
  1927                           ;main.c: 153: void interrupt my_isr(void)
  1928                           ;main.c: 154: {
  1929                           	
  1930  000AC0                     _my_isr:		; BSR set to: ?
  1931                           
  1932                           	opt stack 31
  1933                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  1934                           	global	int_func
  1935  000008                     int_func:
  1936                                   psect   intcode
  1937  000008  CFFA F219          	movff	pclat+0,??_my_isr+0
  1938  00000C  CFFB F21A          	movff	pclat+1,??_my_isr+1
  1939  000010  CFE9 F21B          	movff	fsr0l+0,??_my_isr+2
  1940  000014  EF60  F005         	goto	_my_isr
  1941                                   psect   text10
  1942  000AC0  CFEA F21C          	movff	fsr0h+0,??_my_isr+3
  1943  000AC4  CFE1 F21D          	movff	fsr1l+0,??_my_isr+4
  1944  000AC8  CFE2 F21E          	movff	fsr1h+0,??_my_isr+5
  1945  000ACC  CFD9 F21F          	movff	fsr2l+0,??_my_isr+6
  1946  000AD0  CFDA F220          	movff	fsr2h+0,??_my_isr+7
  1947  000AD4  CFF3 F221          	movff	prodl+0,??_my_isr+8
  1948  000AD8  CFF4 F222          	movff	prodh+0,??_my_isr+9
  1949  000ADC  CFF6 F223          	movff	tblptrl+0,??_my_isr+10
  1950  000AE0  CFF7 F224          	movff	tblptrh+0,??_my_isr+11
  1951  000AE4  CFF8 F225          	movff	tblptru+0,??_my_isr+12
  1952  000AE8  CFF5 F226          	movff	tablat+0,??_my_isr+13
  1953                           	line	155
  1954  000AEC  EC54  F002         	call	_rec_isr	;wreg free
  1955                           	line	156
  1956                           ;main.c: 156: tx_isr();
  1957  000AF0  EC11  F005         	call	_tx_isr	;wreg free
  1958                           	line	157
  1959                           ;main.c: 157: timer35_isr();
  1960  000AF4  ECA3  F005         	call	_timer35_isr	;wreg free
  1961                           	line	158
  1962                           ;main.c: 158: timer3_isr();
  1963  000AF8  EC0D  F006         	call	_timer3_isr	;wreg free
  1964                           	line	159
  1965                           ;main.c: 159: pv1_isr();
  1966  000AFC  EC84  F006         	call	_pv1_isr	;wreg free
  1967                           	line	160
  1968                           ;main.c: 160: timer0_isr();
  1969  000B00  ECDB  F005         	call	_timer0_isr	;wreg free
  1970                           	line	161
  1971                           ;main.c: 161: pg_in_isr();
  1972  000B04  EC3C  F006         	call	_pg_in_isr	;wreg free
  1973                           	line	162
  1974                           ;main.c: 162: timer5_isr();
  1975  000B08  EC70  F006         	call	_timer5_isr	;wreg free
  1976                           	line	163
  1977                           ;main.c: 163: }
  1978  000B0C                     i2l764:
  1979                           			; BSR set to: ?
  1980                           
  1981  000B0C  C226  FFF5         	movff	??_my_isr+13,tablat+0
  1982  000B10  C225  FFF8         	movff	??_my_isr+12,tblptru+0
  1983  000B14  C224  FFF7         	movff	??_my_isr+11,tblptrh+0
  1984  000B18  C223  FFF6         	movff	??_my_isr+10,tblptrl+0
  1985  000B1C  C222  FFF4         	movff	??_my_isr+9,prodh+0
  1986  000B20  C221  FFF3         	movff	??_my_isr+8,prodl+0
  1987  000B24  C220  FFDA         	movff	??_my_isr+7,fsr2h+0
  1988  000B28  C21F  FFD9         	movff	??_my_isr+6,fsr2l+0
  1989  000B2C  C21E  FFE2         	movff	??_my_isr+5,fsr1h+0
  1990  000B30  C21D  FFE1         	movff	??_my_isr+4,fsr1l+0
  1991  000B34  C21C  FFEA         	movff	??_my_isr+3,fsr0h+0
  1992  000B38  C21B  FFE9         	movff	??_my_isr+2,fsr0l+0
  1993  000B3C  C21A  FFFB         	movff	??_my_isr+1,pclat+1
  1994  000B40  C219  FFFA         	movff	??_my_isr+0,pclat+0
  1995  000B44  0011               	retfie f
  1996                           	opt stack 0
  1997                           GLOBAL __end_of_my_isr
  1998  000B46                     	__end_of_my_isr:
  1999                           	FNSIZE	_my_isr,14,0
  2000                           ; =============== function _my_isr ends ========
                                 ====
  2001                           
  2002                           	signat	_my_isr,88
  2003                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  2004                           	global	intlevel2
  2005                           
  2006                           	opt lm
  2007                           	FNBREAK _timer5_isr,intlevel2
  2008                           	global	_timer5_isr
  2009                           	global	??_timer5_isr
  2010                           	global	?_timer5_isr
  2011                           
  2012                           ; *************** function _timer5_isr *********
                                 ********
  2013                           ; Defined at:
  2014                           ;		line 304 in file "../main.c"
  2015                           ; Parameters:
  2016                           ;		None
  2017                           ; Auto variables:
  2018                           ;		None
  2019                           ; Return value:
  2020                           ;		type: void 
  2021                           ;		size: 0
  2022                           ; Registers used:
  2023                           ;		None
  2024                           ; Tracked objects:
  2025                           ;		On entry : 0/0
  2026                           ;		On exit  : 0/0
  2027                           ;		Unchanged: 0/0
  2028                           ; Data sizes:
  2029                           ;		Autos:    0
  2030                           ;		Params:   0
  2031                           ;		Temp:     0
  2032                           ;		Total:    0
  2033                           ; This function calls:
  2034                           ;		Nothing
  2035                           ; This function is called by:
  2036                           ;		_my_isr
  2037                           ; This function uses a non-reentrant model
  2038                           ; 
  2039                           	file	"../main.c"
  2040                           	line	304
  2041  000000                     	__size_of_timer5_isr	equ	__end_of_timer5_isr-_t
                                 imer5_isr
  2042                           ;main.c: 303: void timer5_isr(void)
  2043                           ;main.c: 304: {
  2044                           	
  2045  000CE0                     _timer5_isr:		; BSR set to: ?
  2046                           
  2047                           	opt stack 30
  2048                           	line	305
  2049  000CE0  A27E               	btfss	c:(31729/8),(31729)&7	;volatile
  2050  000CE2  EF75  F006         	goto	i2u731
  2051  000CE6  EF77  F006         	goto	i2u730
  2052  000CEA                     i2u731:
  2053  000CEA  EF83  F006         	goto	i2l787
  2054  000CEE                     i2u730:
  2055  000CEE  A27D               	btfss	c:(31721/8),(31721)&7	;volatile
  2056  000CF0  EF7C  F006         	goto	i2u741
  2057  000CF4  EF7E  F006         	goto	i2u740
  2058  000CF8                     i2u741:
  2059  000CF8  EF83  F006         	goto	i2l787
  2060  000CFC                     i2u740:
  2061                           	line	307
  2062                           ;main.c: 306: {
  2063                           ;main.c: 307: TMR5IF = 0;
  2064  000CFC  927E               	bcf	c:(31729/8),(31729)&7	;volatile
  2065                           	line	309
  2066                           ;main.c: 309: (PORTCbits.RC5) = 1;
  2067  000CFE  8A82               	bsf	((c:3970)),c,5	;volatile
  2068                           	line	310
  2069                           ;main.c: 310: TMR5ON = 0;
  2070  000D00  010F               	movlb	(31344/8) >> 8
  2071  000D02  010F               	movlb	15	; () banked
  2072  000D04  914E               	bcf	(31344/8)&0ffh,(31344)&7	;volatile
  2073                           	line	312
  2074                           	
  2075  000D06                     i2l787:		; BSR set to: ?
  2076                           
  2077                           	line	313
  2078                           ;main.c: 312: }
  2079                           ;main.c: 313: }
  2080  000D06                     i2l786:
  2081                           			; BSR set to: ?
  2082                           
  2083  000D06  0012               	return
  2084                           	opt stack 0
  2085                           GLOBAL __end_of_timer5_isr
  2086  000D08                     	__end_of_timer5_isr:
  2087                           	FNSIZE	_timer5_isr,0,0
  2088                           ; =============== function _timer5_isr ends ====
                                 ========
  2089                           
  2090                           	signat	_timer5_isr,88
  2091                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  2092                           	global	intlevel2
  2093                           
  2094                           	opt lm
  2095                           	FNBREAK _pv1_isr,intlevel2
  2096                           	global	_pv1_isr
  2097                           	global	??_pv1_isr
  2098                           	global	?_pv1_isr
  2099                           
  2100                           ; *************** function _pv1_isr ************
                                 *****
  2101                           ; Defined at:
  2102                           ;		line 220 in file "../main.c"
  2103                           ; Parameters:
  2104                           ;		None
  2105                           ; Auto variables:
  2106                           ;		None
  2107                           ; Return value:
  2108                           ;		type: void 
  2109                           ;		size: 0
  2110                           ; Registers used:
  2111                           ;		wreg, status,2, status,0, cstack
  2112                           ; Tracked objects:
  2113                           ;		On entry : 0/0
  2114                           ;		On exit  : 0/0
  2115                           ;		Unchanged: 0/0
  2116                           ; Data sizes:
  2117                           ;		Autos:    0
  2118                           ;		Params:   0
  2119                           ;		Temp:     0
  2120                           ;		Total:    0
  2121                           ; This function calls:
  2122                           ;		_get_speed
  2123                           ; This function is called by:
  2124                           ;		_my_isr
  2125                           ; This function uses a non-reentrant model
  2126                           ; 
  2127                           	file	"../main.c"
  2128                           	line	220
  2129  000000                     	__size_of_pv1_isr	equ	__end_of_pv1_isr-_pv1_isr
  2130                           ;main.c: 219: void pv1_isr(void)
  2131                           ;main.c: 220: {
  2132                           	
  2133  000D08                     _pv1_isr:		; BSR set to: ?
  2134                           
  2135                           	opt stack 30
  2136                           	line	221
  2137                           ;main.c: 221: if(INT0IF&&INT0IE)
  2138  000D08  A2F2               	btfss	c:(32657/8),(32657)&7	;volatile
  2139  000D0A  EF89  F006         	goto	i2u1691
  2140  000D0E  EF8B  F006         	goto	i2u1690
  2141  000D12                     i2u1691:
  2142  000D12  EF95  F006         	goto	i2l777
  2143  000D16                     i2u1690:
  2144  000D16  A8F2               	btfss	c:(32660/8),(32660)&7	;volatile
  2145  000D18  EF90  F006         	goto	i2u1701
  2146  000D1C  EF92  F006         	goto	i2u1700
  2147  000D20                     i2u1701:
  2148  000D20  EF95  F006         	goto	i2l777
  2149  000D24                     i2u1700:
  2150                           	line	223
  2151                           ;main.c: 222: {
  2152                           ;main.c: 223: INT0IF = 0;
  2153  000D24  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
  2154                           	line	224
  2155                           ;main.c: 224: get_speed();
  2156  000D26  EC69  F003         	call	_get_speed	;wreg free
  2157                           	line	225
  2158                           	
  2159  000D2A                     i2l777:		; BSR set to: ?
  2160                           
  2161                           	line	226
  2162                           ;main.c: 225: }
  2163                           ;main.c: 226: }
  2164  000D2A                     i2l776:
  2165                           			; BSR set to: ?
  2166                           
  2167  000D2A  0012               	return
  2168                           	opt stack 0
  2169                           GLOBAL __end_of_pv1_isr
  2170  000D2C                     	__end_of_pv1_isr:
  2171                           	FNSIZE	_pv1_isr,0,0
  2172                           ; =============== function _pv1_isr ends =======
                                 =====
  2173                           
  2174                           	signat	_pv1_isr,88
  2175                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  2176                           	global	intlevel2
  2177                           
  2178                           	opt lm
  2179                           	FNBREAK _timer0_isr,intlevel2
  2180                           	global	_timer0_isr
  2181                           	global	??_timer0_isr
  2182                           	global	?_timer0_isr
  2183                           
  2184                           ; *************** function _timer0_isr *********
                                 ********
  2185                           ; Defined at:
  2186                           ;		line 246 in file "../main.c"
  2187                           ; Parameters:
  2188                           ;		None
  2189                           ; Auto variables:
  2190                           ;		None
  2191                           ; Return value:
  2192                           ;		type: void 
  2193                           ;		size: 0
  2194                           ; Registers used:
  2195                           ;		wreg, status,2, status,0
  2196                           ; Tracked objects:
  2197                           ;		On entry : 0/0
  2198                           ;		On exit  : 0/0
  2199                           ;		Unchanged: 0/0
  2200                           ; Data sizes:
  2201                           ;		Autos:    0
  2202                           ;		Params:   0
  2203                           ;		Temp:     1
  2204                           ;		Total:    1
  2205                           ; This function calls:
  2206                           ;		Nothing
  2207                           ; This function is called by:
  2208                           ;		_my_isr
  2209                           ; This function uses a non-reentrant model
  2210                           ; 
  2211                           	file	"../main.c"
  2212                           	line	246
  2213  000000                     	__size_of_timer0_isr	equ	__end_of_timer0_isr-_t
                                 imer0_isr
  2214                           ;main.c: 245: void timer0_isr(void)
  2215                           ;main.c: 246: {
  2216                           	
  2217  000BB6                     _timer0_isr:		; BSR set to: ?
  2218                           
  2219                           	opt stack 30
  2220                           	line	249
  2221                           ;main.c: 247: static unsigned char count0_10ms =
                                  0;
  2222                           ;main.c: 249: if(TMR0IF&&TMR0IE)
  2223  000BB6  A4F2               	btfss	c:(32658/8),(32658)&7	;volatile
  2224  000BB8  EFE0  F005         	goto	i2u1791
  2225  000BBC  EFE2  F005         	goto	i2u1790
  2226  000BC0                     i2u1791:
  2227  000BC0  EF0C  F006         	goto	i2l780
  2228  000BC4                     i2u1790:
  2229  000BC4  AAF2               	btfss	c:(32661/8),(32661)&7	;volatile
  2230  000BC6  EFE7  F005         	goto	i2u1801
  2231  000BCA  EFE9  F005         	goto	i2u1800
  2232  000BCE                     i2u1801:
  2233  000BCE  EF0C  F006         	goto	i2l780
  2234  000BD2                     i2u1800:
  2235                           	line	251
  2236                           ;main.c: 250: {
  2237                           ;main.c: 251: TMR0 = 65535-27648;
  2238  000BD2  0EFF               	movlw	low(093FFh)
  2239  000BD4  6ED6               	movwf	((c:4054)),c	;volatile
  2240  000BD6  0E93               	movlw	high(093FFh)
  2241  000BD8  6ED7               	movwf	((c:4054+1)),c	;volatile
  2242                           	line	252
  2243                           ;main.c: 252: TMR0IF = 0;
  2244  000BDA  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  2245                           	line	253
  2246                           ;main.c: 253: count0_10ms++;
  2247  000BDC  0101               	movlb	1	; () banked
  2248  000BDE  0101               	movlb	1	; () banked
  2249  000BE0  2B37               	incf	((311))&0ffh
  2250                           	line	255
  2251                           ;main.c: 255: if(count0_10ms==200)
  2252  000BE2  0101               	movlb	1	; () banked
  2253  000BE4  0101               	movlb	1	; () banked
  2254  000BE6  5137               	movf	((311))&0ffh,w
  2255  000BE8  0AC8               	xorlw	200
  2256                           
  2257  000BEA  A4D8               	btfss	status,2
  2258  000BEC  EFFA  F005         	goto	i2u1811
  2259  000BF0  EFFC  F005         	goto	i2u1810
  2260  000BF4                     i2u1811:
  2261  000BF4  EF0C  F006         	goto	i2l780
  2262  000BF8                     i2u1810:
  2263                           	line	258
  2264                           ;main.c: 256: {
  2265                           ;main.c: 258: count_2s_flg = 1;
  2266  000BF8  0102               	movlb	2	; () banked
  2267  000BFA  6F27               	movwf	(??_timer0_isr+0+0)&0ffh
  2268  000BFC  0E01               	movlw	low(01h)
  2269  000BFE  0101               	movlb	1	; () banked
  2270  000C00  0101               	movlb	1	; () banked
  2271  000C02  6F38               	movwf	((312))&0ffh
  2272  000C04  0102               	movlb	2	; () banked
  2273  000C06  5127               	movf	(??_timer0_isr+0+0)&0ffh,w
  2274                           	line	259
  2275                           ;main.c: 259: count0_10ms = 0;
  2276  000C08  0102               	movlb	2	; () banked
  2277  000C0A  6F27               	movwf	(??_timer0_isr+0+0)&0ffh
  2278  000C0C  0E00               	movlw	low(0)
  2279  000C0E  0101               	movlb	1	; () banked
  2280  000C10  0101               	movlb	1	; () banked
  2281  000C12  6F37               	movwf	((311))&0ffh
  2282  000C14  0102               	movlb	2	; () banked
  2283  000C16  5127               	movf	(??_timer0_isr+0+0)&0ffh,w
  2284                           	line	260
  2285                           	
  2286  000C18                     i2l781:		; BSR set to: ?
  2287                           
  2288                           	line	261
  2289                           	
  2290  000C18                     i2l780:		; BSR set to: ?
  2291                           
  2292                           	line	262
  2293                           ;main.c: 260: }
  2294                           ;main.c: 261: }
  2295                           ;main.c: 262: }
  2296  000C18                     i2l779:
  2297                           			; BSR set to: ?
  2298                           
  2299  000C18  0012               	return
  2300                           	opt stack 0
  2301                           GLOBAL __end_of_timer0_isr
  2302  000C1A                     	__end_of_timer0_isr:
  2303                           	FNSIZE	_timer0_isr,1,0
  2304                           ; =============== function _timer0_isr ends ====
                                 ========
  2305                           
  2306                           	signat	_timer0_isr,88
  2307                                   psect   text14,class=CODE,space=0,reloc=
                                 2
  2308                           	global	intlevel2
  2309                           
  2310                           	opt lm
  2311                           	FNBREAK _pg_in_isr,intlevel2
  2312                           	global	_pg_in_isr
  2313                           	global	??_pg_in_isr
  2314                           	global	?_pg_in_isr
  2315                           
  2316                           ; *************** function _pg_in_isr **********
                                 *******
  2317                           ; Defined at:
  2318                           ;		line 276 in file "../main.c"
  2319                           ; Parameters:
  2320                           ;		None
  2321                           ; Auto variables:
  2322                           ;		None
  2323                           ; Return value:
  2324                           ;		type: void 
  2325                           ;		size: 0
  2326                           ; Registers used:
  2327                           ;		wreg, status,2
  2328                           ; Tracked objects:
  2329                           ;		On entry : 0/0
  2330                           ;		On exit  : 0/0
  2331                           ;		Unchanged: 0/0
  2332                           ; Data sizes:
  2333                           ;		Autos:    0
  2334                           ;		Params:   0
  2335                           ;		Temp:     0
  2336                           ;		Total:    0
  2337                           ; This function calls:
  2338                           ;		Nothing
  2339                           ; This function is called by:
  2340                           ;		_my_isr
  2341                           ; This function uses a non-reentrant model
  2342                           ; 
  2343                           	file	"../main.c"
  2344                           	line	276
  2345  000000                     	__size_of_pg_in_isr	equ	__end_of_pg_in_isr-_pg_
                                 in_isr
  2346                           ;main.c: 275: void pg_in_isr(void)
  2347                           ;main.c: 276: {
  2348                           	
  2349  000C78                     _pg_in_isr:		; BSR set to: ?
  2350                           
  2351                           	opt stack 30
  2352                           	line	277
  2353                           ;main.c: 277: if(INT1IE&&INT1IF)
  2354  000C78  A6F0               	btfss	c:(32643/8),(32643)&7	;volatile
  2355  000C7A  EF41  F006         	goto	i2u711
  2356  000C7E  EF43  F006         	goto	i2u710
  2357  000C82                     i2u711:
  2358  000C82  EF56  F006         	goto	i2l784
  2359  000C86                     i2u710:
  2360  000C86  A0F0               	btfss	c:(32640/8),(32640)&7	;volatile
  2361  000C88  EF48  F006         	goto	i2u721
  2362  000C8C  EF4A  F006         	goto	i2u720
  2363  000C90                     i2u721:
  2364  000C90  EF56  F006         	goto	i2l784
  2365  000C94                     i2u720:
  2366                           	line	279
  2367                           ;main.c: 278: {
  2368                           ;main.c: 279: INT1IF = 0;
  2369  000C94  90F0               	bcf	c:(32640/8),(32640)&7	;volatile
  2370                           	line	280
  2371                           ;main.c: 280: (PORTCbits.RC5) = 0;
  2372  000C96  9A82               	bcf	((c:3970)),c,5	;volatile
  2373                           	line	282
  2374                           ;main.c: 282: TMR5 = 65535-55296;
  2375  000C98  0EFF               	movlw	low(027FFh)
  2376  000C9A  010F               	movlb	15	; () banked
  2377  000C9C  010F               	movlb	15	; () banked
  2378  000C9E  6F4F               	movwf	((3919))&0ffh	;volatile
  2379  000CA0  0E27               	movlw	high(027FFh)
  2380  000CA2  010F               	movlb	15	; () banked
  2381  000CA4  6F50               	movwf	((3919+1))&0ffh	;volatile
  2382                           	line	283
  2383                           ;main.c: 283: TMR5ON = 1;
  2384  000CA6  010F               	movlb	(31344/8) >> 8
  2385  000CA8  010F               	movlb	15	; () banked
  2386  000CAA  814E               	bsf	(31344/8)&0ffh,(31344)&7	;volatile
  2387                           	line	284
  2388                           	
  2389  000CAC                     i2l784:		; BSR set to: ?
  2390                           
  2391                           	line	285
  2392                           ;main.c: 284: }
  2393                           ;main.c: 285: }
  2394  000CAC                     i2l783:
  2395                           			; BSR set to: ?
  2396                           
  2397  000CAC  0012               	return
  2398                           	opt stack 0
  2399                           GLOBAL __end_of_pg_in_isr
  2400  000CAE                     	__end_of_pg_in_isr:
  2401                           	FNSIZE	_pg_in_isr,0,0
  2402                           ; =============== function _pg_in_isr ends =====
                                 =======
  2403                           
  2404                           	signat	_pg_in_isr,88
  2405                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  2406                           	global	intlevel2
  2407                           
  2408                           	opt lm
  2409                           	FNBREAK _tx_isr,intlevel2
  2410                           	global	_tx_isr
  2411                           	global	??_tx_isr
  2412                           	global	?_tx_isr
  2413                           
  2414                           ; *************** function _tx_isr *************
                                 ****
  2415                           ; Defined at:
  2416                           ;		line 69 in file "../modbus_rtu.c"
  2417                           ; Parameters:
  2418                           ;		None
  2419                           ; Auto variables:
  2420                           ;		None
  2421                           ; Return value:
  2422                           ;		type: void 
  2423                           ;		size: 0
  2424                           ; Registers used:
  2425                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2426                           ; Tracked objects:
  2427                           ;		On entry : 0/0
  2428                           ;		On exit  : 0/0
  2429                           ;		Unchanged: 0/0
  2430                           ; Data sizes:
  2431                           ;		Autos:    0
  2432                           ;		Params:   0
  2433                           ;		Temp:     1
  2434                           ;		Total:    1
  2435                           ; This function calls:
  2436                           ;		Nothing
  2437                           ; This function is called by:
  2438                           ;		_my_isr
  2439                           ; This function uses a non-reentrant model
  2440                           ; 
  2441                           	file	"../modbus_rtu.c"
  2442                           	line	69
  2443  000000                     	__size_of_tx_isr	equ	__end_of_tx_isr-_tx_isr
  2444                           ;modbus_rtu.c: 68: void tx_isr(void)
  2445                           ;modbus_rtu.c: 69: {
  2446                           	
  2447  000A22                     _tx_isr:		; BSR set to: ?
  2448                           
  2449                           	opt stack 30
  2450                           	line	72
  2451                           ;modbus_rtu.c: 70: static unsigned char current_
                                 need_send = 0;
  2452                           ;modbus_rtu.c: 72: if((TX1IE&&TX1IF))
  2453  000A22  A89D               	btfss	c:(31980/8),(31980)&7	;volatile
  2454  000A24  EF16  F005         	goto	i2u1491
  2455  000A28  EF18  F005         	goto	i2u1490
  2456  000A2C                     i2u1491:
  2457  000A2C  EF5F  F005         	goto	i2l367
  2458  000A30                     i2u1490:
  2459  000A30  A89E               	btfss	c:(31988/8),(31988)&7	;volatile
  2460  000A32  EF1D  F005         	goto	i2u1501
  2461  000A36  EF1F  F005         	goto	i2u1500
  2462  000A3A                     i2u1501:
  2463  000A3A  EF5F  F005         	goto	i2l367
  2464  000A3E                     i2u1500:
  2465                           	line	75
  2466                           ;modbus_rtu.c: 73: {
  2467                           ;modbus_rtu.c: 75: if(tx_buf.tx_count>0)
  2468  000A3E  0101               	movlb	1	; () banked
  2469  000A40  0101               	movlb	1	; () banked
  2470  000A42  5100               	movf	((256))&0ffh,w
  2471  000A44  B4D8               	btfsc	status,2
  2472  000A46  EF27  F005         	goto	i2u1511
  2473  000A4A  EF29  F005         	goto	i2u1510
  2474  000A4E                     i2u1511:
  2475  000A4E  EF5F  F005         	goto	i2l367
  2476  000A52                     i2u1510:
  2477                           	line	77
  2478  000A52  C133 F227          	movff	(307),??_tx_isr+0+0
  2479  000A56  0E01               	movlw	01h
  2480  000A58  0102               	movlb	2	; () banked
  2481  000A5A  2727               	addwf	(??_tx_isr+0+0)&0ffh
  2482  000A5C  0101               	movlb	1	; () banked
  2483  000A5E  0E00               	movlw	low(256)
  2484  000A60  0102               	movlb	2	; () banked
  2485  000A62  2527               	addwf	(??_tx_isr+0+0)&0ffh,w
  2486  000A64  6EE9               	movwf	c:fsr0l
  2487  000A66  6AEA               	clrf	1+c:fsr0l
  2488  000A68  0101               	movlb	1	; () banked
  2489  000A6A  0E01               	movlw	high(256)
  2490  000A6C  22EA               	addwfc	1+c:fsr0l
  2491  000A6E  50EF               	movf	indf0,w
  2492  000A70  6EAD               	movwf	((c:4013)),c	;volatile
  2493                           ;modbus_rtu.c: 76: {
  2494                           ;modbus_rtu.c: 77: (TX1REG) = tx_buf.data_buf[cu
                                 rrent_need_send++];
  2495  000A72  0101               	movlb	1	; () banked
  2496  000A74  0101               	movlb	1	; () banked
  2497  000A76  2B33               	incf	((307))&0ffh
  2498                           	line	78
  2499                           ;modbus_rtu.c: 78: if(current_need_send==tx_buf.
                                 tx_count)
  2500  000A78  0101               	movlb	1	; () banked
  2501  000A7A  0101               	movlb	1	; () banked
  2502  000A7C  5100               	movf	((256))&0ffh,w
  2503  000A7E  0101               	movlb	1	; () banked
  2504  000A80  0101               	movlb	1	; () banked
  2505  000A82  6333               	cpfseq	((307))&0ffh
  2506  000A84  EF46  F005         	goto	i2u1521
  2507  000A88  EF48  F005         	goto	i2u1520
  2508  000A8C                     i2u1521:
  2509  000A8C  EF5F  F005         	goto	i2l367
  2510  000A90                     i2u1520:
  2511                           	line	80
  2512                           ;modbus_rtu.c: 79: {
  2513                           ;modbus_rtu.c: 80: (TX1IE) = 0;
  2514  000A90  989D               	bcf	c:(31980/8),(31980)&7	;volatile
  2515                           	line	81
  2516                           ;modbus_rtu.c: 81: current_need_send = 0;
  2517  000A92  0102               	movlb	2	; () banked
  2518  000A94  6F27               	movwf	(??_tx_isr+0+0)&0ffh
  2519  000A96  0E00               	movlw	low(0)
  2520  000A98  0101               	movlb	1	; () banked
  2521  000A9A  0101               	movlb	1	; () banked
  2522  000A9C  6F33               	movwf	((307))&0ffh
  2523  000A9E  0102               	movlb	2	; () banked
  2524  000AA0  5127               	movf	(??_tx_isr+0+0)&0ffh,w
  2525                           	line	82
  2526                           ;modbus_rtu.c: 82: tx_buf.tx_count = 0;
  2527  000AA2  0102               	movlb	2	; () banked
  2528  000AA4  6F27               	movwf	(??_tx_isr+0+0)&0ffh
  2529  000AA6  0E00               	movlw	low(0)
  2530  000AA8  0101               	movlb	1	; () banked
  2531  000AAA  0101               	movlb	1	; () banked
  2532  000AAC  6F00               	movwf	((256))&0ffh
  2533  000AAE  0102               	movlb	2	; () banked
  2534  000AB0  5127               	movf	(??_tx_isr+0+0)&0ffh,w
  2535                           	line	83
  2536                           ;modbus_rtu.c: 83: rx_buf.rec_count = 0;
  2537  000AB2  0102               	movlb	2	; () banked
  2538  000AB4  6F27               	movwf	(??_tx_isr+0+0)&0ffh
  2539  000AB6  0E00               	movlw	low(0)
  2540  000AB8  6E02               	movwf	(0+((c:0)+02h)),c
  2541  000ABA  0102               	movlb	2	; () banked
  2542  000ABC  5127               	movf	(??_tx_isr+0+0)&0ffh,w
  2543                           	line	85
  2544                           	
  2545  000ABE                     i2l369:		; BSR set to: ?
  2546                           
  2547                           	line	86
  2548                           	
  2549  000ABE                     i2l368:		; BSR set to: ?
  2550                           
  2551                           	line	87
  2552                           	
  2553  000ABE                     i2l367:		; BSR set to: ?
  2554                           
  2555                           	line	88
  2556                           ;modbus_rtu.c: 85: }
  2557                           ;modbus_rtu.c: 86: }
  2558                           ;modbus_rtu.c: 87: }
  2559                           ;modbus_rtu.c: 88: }
  2560  000ABE                     i2l366:
  2561                           			; BSR set to: ?
  2562                           
  2563  000ABE  0012               	return
  2564                           	opt stack 0
  2565                           GLOBAL __end_of_tx_isr
  2566  000AC0                     	__end_of_tx_isr:
  2567                           	FNSIZE	_tx_isr,1,0
  2568                           ; =============== function _tx_isr ends ========
                                 ====
  2569                           
  2570                           	signat	_tx_isr,88
  2571                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  2572                           	global	intlevel2
  2573                           
  2574                           	opt lm
  2575                           	FNBREAK _rec_isr,intlevel2
  2576                           	global	_rec_isr
  2577                           	global	??_rec_isr
  2578                           	global	?_rec_isr
  2579                           
  2580                           ; *************** function _rec_isr ************
                                 *****
  2581                           ; Defined at:
  2582                           ;		line 30 in file "../modbus_rtu.c"
  2583                           ; Parameters:
  2584                           ;		None
  2585                           ; Auto variables:
  2586                           ;		rec_data    	       	type: unsigned char 
  2587                           ; Return value:
  2588                           ;		type: void 
  2589                           ;		size: 0
  2590                           ; Registers used:
  2591                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2592                           ; Tracked objects:
  2593                           ;		On entry : 0/0
  2594                           ;		On exit  : 0/0
  2595                           ;		Unchanged: 0/0
  2596                           ; Data sizes:
  2597                           ;		Autos:    1
  2598                           ;		Params:   0
  2599                           ;		Temp:     1
  2600                           ;		Total:    2
  2601                           ; This function calls:
  2602                           ;		Nothing
  2603                           ; This function is called by:
  2604                           ;		_my_isr
  2605                           ; This function uses a non-reentrant model
  2606                           ; 
  2607                           	file	"../modbus_rtu.c"
  2608                           	line	30
  2609  000000                     	__size_of_rec_isr	equ	__end_of_rec_isr-_rec_isr
  2610                           ;modbus_rtu.c: 22: RX_STATE rx_state = RX_STATE_
                                 INIT;
  2611                           ;modbus_rtu.c: 24: unsigned int modbus_reg[100];
  2612                           ;modbus_rtu.c: 29: void rec_isr(void)
  2613                           ;modbus_rtu.c: 30: {
  2614                           	
  2615  0004A8                     _rec_isr:		; BSR set to: ?
  2616                           
  2617                           	opt stack 30
  2618                           	line	31
  2619  0004A8  0102               	movlb	2	; () banked
  2620  0004AA  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2621  0004AC  0E00               	movlw	low(0)
  2622  0004AE  0102               	movlb	2	; () banked
  2623  0004B0  0102               	movlb	2	; () banked
  2624  0004B2  6F27               	movwf	((rec_isr@rec_data))&0ffh
  2625  0004B4  0102               	movlb	2	; () banked
  2626  0004B6  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2627                           	line	33
  2628                           ;modbus_rtu.c: 33: if(((RC1IE)&&(RC1IF)))
  2629  0004B8  AA9D               	btfss	c:(31981/8),(31981)&7	;volatile
  2630  0004BA  EF61  F002         	goto	i2u1461
  2631  0004BE  EF63  F002         	goto	i2u1460
  2632  0004C2                     i2u1461:
  2633  0004C2  EFE3  F002         	goto	i2l357
  2634  0004C6                     i2u1460:
  2635  0004C6  AA9E               	btfss	c:(31989/8),(31989)&7	;volatile
  2636  0004C8  EF68  F002         	goto	i2u1471
  2637  0004CC  EF6A  F002         	goto	i2u1470
  2638  0004D0                     i2u1471:
  2639  0004D0  EFE3  F002         	goto	i2l357
  2640  0004D4                     i2u1470:
  2641                           	line	37
  2642                           ;modbus_rtu.c: 34: {
  2643                           ;modbus_rtu.c: 37: rec_data = (RC1REG);
  2644  0004D4  CFAE F227          	movff	(c:4014),(rec_isr@rec_data)	;volatile
  2645                           	line	39
  2646                           ;modbus_rtu.c: 39: switch(rx_state)
  2647  0004D8  EFD8  F002         	goto	i2l359
  2648                           	line	41
  2649                           ;modbus_rtu.c: 40: {
  2650                           ;modbus_rtu.c: 41: case RX_STATE_INIT:
  2651                           	
  2652  0004DC                     i2l360:		; BSR set to: ?
  2653                           
  2654                           	line	42
  2655                           ;modbus_rtu.c: 42: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2656  0004DC  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2657  0004DE  0E7F               	movlw	low(0627Fh)
  2658  0004E0  6ECE               	movwf	((c:4046)),c	;volatile
  2659  0004E2  0E62               	movlw	high(0627Fh)
  2660  0004E4  6ECF               	movwf	((c:4046+1)),c	;volatile
  2661  0004E6  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2662  0004E8  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2663  0004EA  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2664                           	line	43
  2665                           ;modbus_rtu.c: 43: rx_buf.rec_count = 0;
  2666  0004EC  0102               	movlb	2	; () banked
  2667  0004EE  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2668  0004F0  0E00               	movlw	low(0)
  2669  0004F2  6E02               	movwf	(0+((c:0)+02h)),c
  2670  0004F4  0102               	movlb	2	; () banked
  2671  0004F6  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2672                           	line	44
  2673                           ;modbus_rtu.c: 44: rx_buf.frame_ok = 0;
  2674  0004F8  0102               	movlb	2	; () banked
  2675  0004FA  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2676  0004FC  0E00               	movlw	low(0)
  2677  0004FE  6E00               	movwf	((c:0)),c
  2678  000500  0102               	movlb	2	; () banked
  2679  000502  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2680                           	line	45
  2681                           ;modbus_rtu.c: 45: break;
  2682  000504  EFE3  F002         	goto	i2l357
  2683                           	line	46
  2684                           ;modbus_rtu.c: 46: case RX_STATE_IDLE:
  2685                           	
  2686  000508                     i2l361:		; BSR set to: ?
  2687                           
  2688                           	line	47
  2689                           ;modbus_rtu.c: 47: rx_buf.data_buf[rx_buf.rec_co
                                 unt++] = rec_data;
  2690  000508  EE00 F002          	lfsr	0,(c:0)+02h
  2691  00050C  CFEF F228          	movff	indf0,??_rec_isr+1+0
  2692  000510  0E01               	movlw	01h
  2693  000512  26EF               	addwf	indf0
  2694  000514  0E03               	movlw	03h
  2695  000516  0102               	movlb	2	; () banked
  2696  000518  2728               	addwf	(??_rec_isr+1+0)&0ffh
  2697  00051A  0E00               	movlw	low((c:0))
  2698  00051C  0102               	movlb	2	; () banked
  2699  00051E  2528               	addwf	(??_rec_isr+1+0)&0ffh,w
  2700  000520  6EE9               	movwf	c:fsr0l
  2701  000522  6AEA               	clrf	1+c:fsr0l
  2702  000524  0E00               	movlw	high((c:0))
  2703  000526  22EA               	addwfc	1+c:fsr0l
  2704  000528  0102               	movlb	2	; () banked
  2705  00052A  C227  FFEF         	movff	(rec_isr@rec_data),indf0
  2706                           
  2707                           	line	48
  2708                           ;modbus_rtu.c: 48: rx_state = RX_STATE_RECEIVE;
  2709  00052E  0102               	movlb	2	; () banked
  2710  000530  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2711  000532  0E02               	movlw	low(02h)
  2712  000534  0100               	movlb	0	; () banked
  2713  000536  0100               	movlb	0	; () banked
  2714  000538  6FFF               	movwf	((255))&0ffh
  2715  00053A  0102               	movlb	2	; () banked
  2716  00053C  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2717                           	line	49
  2718                           ;modbus_rtu.c: 49: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2719  00053E  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2720  000540  0E7F               	movlw	low(0627Fh)
  2721  000542  6ECE               	movwf	((c:4046)),c	;volatile
  2722  000544  0E62               	movlw	high(0627Fh)
  2723  000546  6ECF               	movwf	((c:4046+1)),c	;volatile
  2724  000548  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2725  00054A  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2726  00054C  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2727                           	line	50
  2728                           ;modbus_rtu.c: 50: break;
  2729  00054E  EFE3  F002         	goto	i2l357
  2730                           	line	51
  2731                           ;modbus_rtu.c: 51: case RX_STATE_RECEIVE:
  2732                           	
  2733  000552                     i2l362:		; BSR set to: ?
  2734                           
  2735                           	line	52
  2736                           ;modbus_rtu.c: 52: if(rx_buf.rec_count<250)
  2737  000552  0EFA               	movlw	(0FAh)&0ffh
  2738  000554  6002               	cpfslt	(0+((c:0)+02h)),c
  2739  000556  EFAF  F002         	goto	i2u1481
  2740  00055A  EFB1  F002         	goto	i2u1480
  2741  00055E                     i2u1481:
  2742  00055E  EFCE  F002         	goto	i2l363
  2743  000562                     i2u1480:
  2744                           	line	54
  2745                           ;modbus_rtu.c: 53: {
  2746                           ;modbus_rtu.c: 54: rx_buf.data_buf[rx_buf.rec_co
                                 unt++] = rec_data;
  2747  000562  EE00 F002          	lfsr	0,(c:0)+02h
  2748  000566  CFEF F228          	movff	indf0,??_rec_isr+1+0
  2749  00056A  0E01               	movlw	01h
  2750  00056C  26EF               	addwf	indf0
  2751  00056E  0E03               	movlw	03h
  2752  000570  0102               	movlb	2	; () banked
  2753  000572  2728               	addwf	(??_rec_isr+1+0)&0ffh
  2754  000574  0E00               	movlw	low((c:0))
  2755  000576  0102               	movlb	2	; () banked
  2756  000578  2528               	addwf	(??_rec_isr+1+0)&0ffh,w
  2757  00057A  6EE9               	movwf	c:fsr0l
  2758  00057C  6AEA               	clrf	1+c:fsr0l
  2759  00057E  0E00               	movlw	high((c:0))
  2760  000580  22EA               	addwfc	1+c:fsr0l
  2761  000582  0102               	movlb	2	; () banked
  2762  000584  C227  FFEF         	movff	(rec_isr@rec_data),indf0
  2763                           
  2764                           	line	55
  2765                           ;modbus_rtu.c: 55: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2766  000588  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2767  00058A  0E7F               	movlw	low(0627Fh)
  2768  00058C  6ECE               	movwf	((c:4046)),c	;volatile
  2769  00058E  0E62               	movlw	high(0627Fh)
  2770  000590  6ECF               	movwf	((c:4046+1)),c	;volatile
  2771  000592  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2772  000594  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2773  000596  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2774                           	line	56
  2775                           ;modbus_rtu.c: 56: }
  2776  000598  EFD6  F002         	goto	i2l364
  2777                           	line	57
  2778                           	
  2779  00059C                     i2l363:		; BSR set to: ?
  2780                           
  2781                           	line	59
  2782                           ;modbus_rtu.c: 57: else
  2783                           ;modbus_rtu.c: 58: {
  2784                           ;modbus_rtu.c: 59: rx_state = RX_STATE_INIT;
  2785  00059C  0102               	movlb	2	; () banked
  2786  00059E  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2787  0005A0  0E00               	movlw	low(0)
  2788  0005A2  0100               	movlb	0	; () banked
  2789  0005A4  0100               	movlb	0	; () banked
  2790  0005A6  6FFF               	movwf	((255))&0ffh
  2791  0005A8  0102               	movlb	2	; () banked
  2792  0005AA  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2793                           	line	60
  2794                           	
  2795  0005AC                     i2l364:		; BSR set to: ?
  2796                           
  2797                           	line	61
  2798                           ;modbus_rtu.c: 60: }
  2799                           ;modbus_rtu.c: 61: break;
  2800  0005AC  EFE3  F002         	goto	i2l357
  2801                           	line	39
  2802                           	
  2803  0005B0                     i2l359:		; BSR set to: ?
  2804                           
  2805  0005B0  0100               	movlb	0	; () banked
  2806  0005B2  0100               	movlb	0	; () banked
  2807  0005B4  51FF               	movf	((255))&0ffh,w
  2808  0005B6  0A00               	xorlw	0 ^ 0
  2809  0005B8  E091               	bz	i2l360
  2810  0005BA  0A01               	xorlw	1 ^ 0
  2811  0005BC  E0A5               	bz	i2l361
  2812  0005BE  0A03               	xorlw	2 ^ 1
  2813  0005C0  E0C8               	bz	i2l362
  2814  0005C2  EFD6  F002         	goto	i2l364
  2815                           
  2816                           	line	65
  2817                           	
  2818  0005C6                     i2l357:		; BSR set to: ?
  2819                           
  2820                           	line	66
  2821                           ;modbus_rtu.c: 65: }
  2822                           ;modbus_rtu.c: 66: }
  2823  0005C6                     i2l356:
  2824                           			; BSR set to: ?
  2825                           
  2826  0005C6  0012               	return
  2827                           	opt stack 0
  2828                           GLOBAL __end_of_rec_isr
  2829  0005C8                     	__end_of_rec_isr:
  2830                           	FNSIZE	_rec_isr,2,0
  2831                           ; =============== function _rec_isr ends =======
                                 =====
  2832                           
  2833                           	signat	_rec_isr,88
  2834                                   psect   text17,class=CODE,space=0,reloc=
                                 2
  2835                           	global	intlevel2
  2836                           
  2837                           	opt lm
  2838                           	FNBREAK _timer3_isr,intlevel2
  2839                           	global	_timer3_isr
  2840                           	global	??_timer3_isr
  2841                           	global	?_timer3_isr
  2842                           
  2843                           ; *************** function _timer3_isr *********
                                 ********
  2844                           ; Defined at:
  2845                           ;		line 82 in file "../main.c"
  2846                           ; Parameters:
  2847                           ;		None
  2848                           ; Auto variables:
  2849                           ;		None
  2850                           ; Return value:
  2851                           ;		type: void 
  2852                           ;		size: 0
  2853                           ; Registers used:
  2854                           ;		wreg, status,2, status,0
  2855                           ; Tracked objects:
  2856                           ;		On entry : 0/0
  2857                           ;		On exit  : 0/0
  2858                           ;		Unchanged: 0/0
  2859                           ; Data sizes:
  2860                           ;		Autos:    0
  2861                           ;		Params:   0
  2862                           ;		Temp:     0
  2863                           ;		Total:    0
  2864                           ; This function calls:
  2865                           ;		Nothing
  2866                           ; This function is called by:
  2867                           ;		_my_isr
  2868                           ; This function uses a non-reentrant model
  2869                           ; 
  2870                           	file	"../main.c"
  2871                           	line	82
  2872  000000                     	__size_of_timer3_isr	equ	__end_of_timer3_isr-_t
                                 imer3_isr
  2873                           ;main.c: 81: void timer3_isr(void)
  2874                           ;main.c: 82: {
  2875                           	
  2876  000C1A                     _timer3_isr:		; BSR set to: ?
  2877                           
  2878                           	opt stack 30
  2879                           	line	84
  2880                           ;main.c: 84: if(TMR3IE&&TMR3IF)
  2881  000C1A  A2A0               	btfss	c:(32001/8),(32001)&7	;volatile
  2882  000C1C  EF12  F006         	goto	i2u1641
  2883  000C20  EF14  F006         	goto	i2u1640
  2884  000C24                     i2u1641:
  2885  000C24  EF3B  F006         	goto	i2l753
  2886  000C28                     i2u1640:
  2887  000C28  A2A1               	btfss	c:(32009/8),(32009)&7	;volatile
  2888  000C2A  EF19  F006         	goto	i2u1651
  2889  000C2E  EF1B  F006         	goto	i2u1650
  2890  000C32                     i2u1651:
  2891  000C32  EF3B  F006         	goto	i2l753
  2892  000C36                     i2u1650:
  2893                           	line	86
  2894                           ;main.c: 85: {
  2895                           ;main.c: 86: TMR3IF = 0;
  2896  000C36  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
  2897                           	line	88
  2898                           ;main.c: 88: TMR3 = 65535-11059;
  2899  000C38  0ECC               	movlw	low(0D4CCh)
  2900  000C3A  6EB2               	movwf	((c:4018)),c	;volatile
  2901  000C3C  0ED4               	movlw	high(0D4CCh)
  2902  000C3E  6EB3               	movwf	((c:4018+1)),c	;volatile
  2903                           	line	90
  2904                           ;main.c: 90: count_1ms++;
  2905  000C40  0100               	movlb	0	; () banked
  2906  000C42  0100               	movlb	0	; () banked
  2907  000C44  4BFD               	infsnz	((253))&0ffh
  2908  000C46  2BFE               	incf	((253+1))&0ffh
  2909                           	line	92
  2910                           ;main.c: 92: if(count_1ms==6000)
  2911  000C48  0100               	movlb	0	; () banked
  2912  000C4A  0100               	movlb	0	; () banked
  2913  000C4C  51FE               	movf	((253+1))&0ffh,w
  2914  000C4E  0A17               	xorlw	23
  2915  000C50  0E70               	movlw	112
  2916  000C52  B4D8               	btfsc	status,2
  2917  000C54  19FD               	xorwf ((253))&0ffh,w
  2918                           
  2919  000C56  A4D8               	btfss	status,2
  2920  000C58  EF30  F006         	goto	i2u1661
  2921  000C5C  EF32  F006         	goto	i2u1660
  2922  000C60                     i2u1661:
  2923  000C60  EF3B  F006         	goto	i2l753
  2924  000C64                     i2u1660:
  2925                           	line	94
  2926                           ;main.c: 93: {
  2927                           ;main.c: 94: modbus_reg[0] = 0;
  2928  000C64  0E00               	movlw	low(0)
  2929  000C66  6E35               	movwf	((c:53)),c
  2930  000C68  0E00               	movlw	high(0)
  2931  000C6A  6E36               	movwf	((c:53+1)),c
  2932                           	line	95
  2933                           ;main.c: 95: count_1ms--;
  2934  000C6C  0100               	movlb	0	; () banked
  2935  000C6E  0100               	movlb	0	; () banked
  2936  000C70  07FD               	decf	((253))&0ffh
  2937  000C72  A0D8               	btfss	status,0
  2938  000C74  07FE               	decf	((253+1))&0ffh
  2939                           	line	96
  2940                           	
  2941  000C76                     i2l754:		; BSR set to: ?
  2942                           
  2943                           	line	97
  2944                           	
  2945  000C76                     i2l753:		; BSR set to: ?
  2946                           
  2947                           	line	98
  2948                           ;main.c: 96: }
  2949                           ;main.c: 97: }
  2950                           ;main.c: 98: }
  2951  000C76                     i2l752:
  2952                           			; BSR set to: ?
  2953                           
  2954  000C76  0012               	return
  2955                           	opt stack 0
  2956                           GLOBAL __end_of_timer3_isr
  2957  000C78                     	__end_of_timer3_isr:
  2958                           	FNSIZE	_timer3_isr,0,0
  2959                           ; =============== function _timer3_isr ends ====
                                 ========
  2960                           
  2961                           	signat	_timer3_isr,88
  2962                                   psect   text18,class=CODE,space=0,reloc=
                                 2
  2963                           	global	intlevel2
  2964                           
  2965                           	opt lm
  2966                           	FNBREAK _timer35_isr,intlevel2
  2967                           	global	_timer35_isr
  2968                           	global	??_timer35_isr
  2969                           	global	?_timer35_isr
  2970                           
  2971                           ; *************** function _timer35_isr ********
                                 *********
  2972                           ; Defined at:
  2973                           ;		line 90 in file "../modbus_rtu.c"
  2974                           ; Parameters:
  2975                           ;		None
  2976                           ; Auto variables:
  2977                           ;		None
  2978                           ; Return value:
  2979                           ;		type: void 
  2980                           ;		size: 0
  2981                           ; Registers used:
  2982                           ;		wreg, status,2, status,0
  2983                           ; Tracked objects:
  2984                           ;		On entry : 0/0
  2985                           ;		On exit  : 0/0
  2986                           ;		Unchanged: 0/0
  2987                           ; Data sizes:
  2988                           ;		Autos:    0
  2989                           ;		Params:   0
  2990                           ;		Temp:     1
  2991                           ;		Total:    1
  2992                           ; This function calls:
  2993                           ;		Nothing
  2994                           ; This function is called by:
  2995                           ;		_my_isr
  2996                           ; This function uses a non-reentrant model
  2997                           ; 
  2998                           	file	"../modbus_rtu.c"
  2999                           	line	90
  3000  000000                     	__size_of_timer35_isr	equ	__end_of_timer35_isr-
                                 _timer35_isr
  3001                           ;modbus_rtu.c: 89: void timer35_isr(void)
  3002                           ;modbus_rtu.c: 90: {
  3003                           	
  3004  000B46                     _timer35_isr:		; BSR set to: ?
  3005                           
  3006                           	opt stack 30
  3007                           	line	91
  3008  000B46  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
  3009  000B48  EFA8  F005         	goto	i2u1771
  3010  000B4C  EFAA  F005         	goto	i2u1770
  3011  000B50                     i2u1771:
  3012  000B50  EFDA  F005         	goto	i2l371
  3013  000B54                     i2u1770:
  3014  000B54  A09D               	btfss	c:(31976/8),(31976)&7	;volatile
  3015  000B56  EFAF  F005         	goto	i2u1781
  3016  000B5A  EFB1  F005         	goto	i2u1780
  3017  000B5E                     i2u1781:
  3018  000B5E  EFDA  F005         	goto	i2l371
  3019  000B62                     i2u1780:
  3020                           	line	94
  3021                           ;modbus_rtu.c: 92: {
  3022                           ;modbus_rtu.c: 94: switch(rx_state)
  3023  000B62  EFCF  F005         	goto	i2l373
  3024                           	line	96
  3025                           ;modbus_rtu.c: 95: {
  3026                           ;modbus_rtu.c: 96: case RX_STATE_INIT:
  3027                           	
  3028  000B66                     i2l374:		; BSR set to: ?
  3029                           
  3030                           	line	97
  3031                           ;modbus_rtu.c: 97: rx_state = RX_STATE_IDLE;
  3032  000B66  0102               	movlb	2	; () banked
  3033  000B68  6F27               	movwf	(??_timer35_isr+0+0)&0ffh
  3034  000B6A  0E01               	movlw	low(01h)
  3035  000B6C  0100               	movlb	0	; () banked
  3036  000B6E  0100               	movlb	0	; () banked
  3037  000B70  6FFF               	movwf	((255))&0ffh
  3038  000B72  0102               	movlb	2	; () banked
  3039  000B74  5127               	movf	(??_timer35_isr+0+0)&0ffh,w
  3040                           	line	98
  3041                           ;modbus_rtu.c: 98: break;
  3042  000B76  EFD8  F005         	goto	i2l372
  3043                           	line	99
  3044                           ;modbus_rtu.c: 99: case RX_STATE_RECEIVE:
  3045                           	
  3046  000B7A                     i2l375:		; BSR set to: ?
  3047                           
  3048                           	line	100
  3049                           ;modbus_rtu.c: 100: rx_state = RX_STATE_IDLE;
  3050  000B7A  0102               	movlb	2	; () banked
  3051  000B7C  6F27               	movwf	(??_timer35_isr+0+0)&0ffh
  3052  000B7E  0E01               	movlw	low(01h)
  3053  000B80  0100               	movlb	0	; () banked
  3054  000B82  0100               	movlb	0	; () banked
  3055  000B84  6FFF               	movwf	((255))&0ffh
  3056  000B86  0102               	movlb	2	; () banked
  3057  000B88  5127               	movf	(??_timer35_isr+0+0)&0ffh,w
  3058                           	line	101
  3059                           ;modbus_rtu.c: 101: rx_buf.frame_ok = 1;
  3060  000B8A  0102               	movlb	2	; () banked
  3061  000B8C  6F27               	movwf	(??_timer35_isr+0+0)&0ffh
  3062  000B8E  0E01               	movlw	low(01h)
  3063  000B90  6E00               	movwf	((c:0)),c
  3064  000B92  0102               	movlb	2	; () banked
  3065  000B94  5127               	movf	(??_timer35_isr+0+0)&0ffh,w
  3066                           	line	102
  3067                           ;modbus_rtu.c: 102: break;
  3068  000B96  EFD8  F005         	goto	i2l372
  3069                           	line	103
  3070                           ;modbus_rtu.c: 103: default:
  3071                           	
  3072  000B9A                     i2l376:		; BSR set to: ?
  3073                           
  3074                           	line	104
  3075                           ;modbus_rtu.c: 104: break;
  3076  000B9A  EFD8  F005         	goto	i2l372
  3077                           	line	94
  3078                           	
  3079  000B9E                     i2l373:		; BSR set to: ?
  3080                           
  3081  000B9E  0100               	movlb	0	; () banked
  3082  000BA0  0100               	movlb	0	; () banked
  3083  000BA2  51FF               	movf	((255))&0ffh,w
  3084  000BA4  0A00               	xorlw	0 ^ 0
  3085  000BA6  E0DF               	bz	i2l374
  3086  000BA8  0A02               	xorlw	2 ^ 0
  3087  000BAA  E0E7               	bz	i2l375
  3088  000BAC  EFCD  F005         	goto	i2l376
  3089                           
  3090                           	line	105
  3091                           	
  3092  000BB0                     i2l372:		; BSR set to: ?
  3093                           
  3094                           	line	106
  3095                           ;modbus_rtu.c: 106: TMR1ON = 0;
  3096  000BB0  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  3097                           	line	108
  3098                           ;modbus_rtu.c: 108: TMR1IF=0;
  3099  000BB2  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  3100                           	line	110
  3101                           	
  3102  000BB4                     i2l371:		; BSR set to: ?
  3103                           
  3104                           	line	111
  3105                           ;modbus_rtu.c: 110: }
  3106                           ;modbus_rtu.c: 111: }
  3107  000BB4                     i2l370:
  3108                           			; BSR set to: ?
  3109                           
  3110  000BB4  0012               	return
  3111                           	opt stack 0
  3112                           GLOBAL __end_of_timer35_isr
  3113  000BB6                     	__end_of_timer35_isr:
  3114                           	FNSIZE	_timer35_isr,1,0
  3115                           ; =============== function _timer35_isr ends ===
                                 =========
  3116                           
  3117                           	signat	_timer35_isr,88
  3118                                   psect   text19,class=CODE,space=0,reloc=
                                 2
  3119                           	global	intlevel2
  3120                           
  3121                           	opt lm
  3122                           	FNBREAK _get_speed,intlevel2
  3123                           	global	_get_speed
  3124                           	global	??_get_speed
  3125                           	global	?_get_speed
  3126                           
  3127                           ; *************** function _get_speed **********
                                 *******
  3128                           ; Defined at:
  3129                           ;		line 165 in file "../main.c"
  3130                           ; Parameters:
  3131                           ;		None
  3132                           ; Auto variables:
  3133                           ;		None
  3134                           ; Return value:
  3135                           ;		type: void 
  3136                           ;		size: 0
  3137                           ; Registers used:
  3138                           ;		wreg, status,2, status,0, cstack
  3139                           ; Tracked objects:
  3140                           ;		On entry : 0/0
  3141                           ;		On exit  : 0/0
  3142                           ;		Unchanged: 0/0
  3143                           ; Data sizes:
  3144                           ;		Autos:    0
  3145                           ;		Params:   0
  3146                           ;		Temp:     1
  3147                           ;		Total:    1
  3148                           ; This function calls:
  3149                           ;		_start_timer3
  3150                           ;		_stop_timer3
  3151                           ;		___aldiv
  3152                           ; This function is called by:
  3153                           ;		_pv1_isr
  3154                           ; This function uses a non-reentrant model
  3155                           ; 
  3156                           	file	"../main.c"
  3157                           	line	165
  3158  000000                     	__size_of_get_speed	equ	__end_of_get_speed-_get
                                 _speed
  3159                           ;main.c: 164: void get_speed(void)
  3160                           ;main.c: 165: {
  3161                           	
  3162  0006D2                     _get_speed:		; BSR set to: ?
  3163                           
  3164                           	opt stack 29
  3165                           	line	169
  3166  0006D2  0102               	movlb	2	; () banked
  3167  0006D4  6F27               	movwf	(??_get_speed+0+0)&0ffh
  3168  0006D6  0E01               	movlw	low(01h)
  3169  0006D8  0101               	movlb	1	; () banked
  3170  0006DA  0101               	movlb	1	; () banked
  3171  0006DC  6F36               	movwf	((310))&0ffh
  3172  0006DE  0102               	movlb	2	; () banked
  3173  0006E0  5127               	movf	(??_get_speed+0+0)&0ffh,w
  3174                           	line	170
  3175                           ;main.c: 170: switch(sample_step)
  3176  0006E2  EFE4  F003         	goto	i2l767
  3177                           	line	172
  3178                           ;main.c: 171: {
  3179                           ;main.c: 172: case 1:
  3180                           	
  3181  0006E6                     i2l768:		; BSR set to: ?
  3182                           
  3183                           	line	173
  3184                           ;main.c: 173: start_timer3();
  3185  0006E6  ECCA  F006         	call	_start_timer3	;wreg free
  3186                           	line	174
  3187                           ;main.c: 174: pulse_count++;
  3188  0006EA  0101               	movlb	1	; () banked
  3189  0006EC  0101               	movlb	1	; () banked
  3190  0006EE  4B34               	infsnz	((308))&0ffh
  3191  0006F0  2B35               	incf	((308+1))&0ffh
  3192                           	line	175
  3193                           ;main.c: 175: sample_step = 2;
  3194  0006F2  0102               	movlb	2	; () banked
  3195  0006F4  6F27               	movwf	(??_get_speed+0+0)&0ffh
  3196  0006F6  0E02               	movlw	low(02h)
  3197  0006F8  0101               	movlb	1	; () banked
  3198  0006FA  0101               	movlb	1	; () banked
  3199  0006FC  6F39               	movwf	((313))&0ffh
  3200  0006FE  0102               	movlb	2	; () banked
  3201  000700  5127               	movf	(??_get_speed+0+0)&0ffh,w
  3202                           	line	176
  3203                           ;main.c: 176: break;
  3204  000702  EFED  F003         	goto	i2l766
  3205                           	line	177
  3206                           ;main.c: 177: case 2:
  3207                           	
  3208  000706                     i2l769:		; BSR set to: ?
  3209                           
  3210                           	line	178
  3211                           ;main.c: 178: pulse_count++;
  3212  000706  0101               	movlb	1	; () banked
  3213  000708  0101               	movlb	1	; () banked
  3214  00070A  4B34               	infsnz	((308))&0ffh
  3215  00070C  2B35               	incf	((308+1))&0ffh
  3216                           	line	179
  3217                           ;main.c: 179: if(pulse_count==6)
  3218  00070E  0101               	movlb	1	; () banked
  3219  000710  0101               	movlb	1	; () banked
  3220  000712  5134               	movf	((308))&0ffh,w
  3221  000714  0A06               	xorlw	6
  3222  000716  1135               	iorwf ((308+1))&0ffh,w
  3223                           
  3224  000718  A4D8               	btfss	status,2
  3225  00071A  EF91  F003         	goto	i2u1671
  3226  00071E  EF93  F003         	goto	i2u1670
  3227  000722                     i2u1671:
  3228  000722  EFD8  F003         	goto	i2l770
  3229  000726                     i2u1670:
  3230                           	line	181
  3231                           ;main.c: 180: {
  3232                           ;main.c: 181: stop_timer3();
  3233  000726  ECC4  F006         	call	_stop_timer3	;wreg free
  3234                           	line	182
  3235                           ;main.c: 182: pulse_count = 0;
  3236  00072A  0E00               	movlw	low(0)
  3237  00072C  0101               	movlb	1	; () banked
  3238  00072E  0101               	movlb	1	; () banked
  3239  000730  6F34               	movwf	((308))&0ffh
  3240  000732  0E00               	movlw	high(0)
  3241  000734  0101               	movlb	1	; () banked
  3242  000736  6F35               	movwf	((308+1))&0ffh
  3243                           	line	183
  3244                           ;main.c: 183: stop_timer3();
  3245  000738  ECC4  F006         	call	_stop_timer3	;wreg free
  3246                           	line	184
  3247                           ;main.c: 184: if(count_1ms>0)
  3248  00073C  0100               	movlb	0	; () banked
  3249  00073E  0100               	movlb	0	; () banked
  3250  000740  51FE               	movf	((253+1))&0ffh,w
  3251  000742  11FD               	iorwf ((253))&0ffh,w
  3252                           
  3253  000744  B4D8               	btfsc	status,2
  3254  000746  EFA7  F003         	goto	i2u1681
  3255  00074A  EFA9  F003         	goto	i2u1680
  3256  00074E                     i2u1681:
  3257  00074E  EFC9  F003         	goto	i2l771
  3258  000752                     i2u1680:
  3259                           	line	186
  3260                           ;main.c: 185: {
  3261                           ;main.c: 186: modbus_reg[0] = (unsigned int)(100
                                 000/count_1ms);
  3262  000752  0100               	movlb	0	; () banked
  3263  000754  0102               	movlb	2	; () banked
  3264  000756  C0FD F22C          	movff	(253),0+(?___aldiv+04h)
  3265  00075A  0100               	movlb	0	; () banked
  3266  00075C  0102               	movlb	2	; () banked
  3267  00075E  C0FE F22D          	movff	(253+1),1+(?___aldiv+04h)
  3268  000762  0102               	movlb	2	; () banked
  3269  000764  0102               	movlb	2	; () banked
  3270  000766  6B2E               	clrf	(2+(?___aldiv+04h))&0ffh
  3271  000768  0102               	movlb	2	; () banked
  3272  00076A  6B2F               	clrf	(3+(?___aldiv+04h))&0ffh
  3273                           
  3274  00076C  0EA0               	movlw	low(0186A0h)
  3275  00076E  0102               	movlb	2	; () banked
  3276  000770  0102               	movlb	2	; () banked
  3277  000772  6F28               	movwf	((?___aldiv))&0ffh
  3278  000774  0E86               	movlw	high(0186A0h)
  3279  000776  0102               	movlb	2	; () banked
  3280  000778  6F29               	movwf	((?___aldiv+1))&0ffh
  3281  00077A  0E01               	movlw	low highword(0186A0h)
  3282  00077C  0102               	movlb	2	; () banked
  3283  00077E  6F2A               	movwf	((?___aldiv+2))&0ffh
  3284  000780  0E00               	movlw	high highword(0186A0h)
  3285  000782  0102               	movlb	2	; () banked
  3286  000784  6F2B               	movwf	((?___aldiv+3))&0ffh
  3287  000786  EC5D  F001         	call	___aldiv	;wreg free
  3288  00078A  C228  F035         	movff	0+?___aldiv,(c:53)
  3289  00078E  C229  F036         	movff	1+?___aldiv,(c:53+1)
  3290                           	line	187
  3291                           	
  3292  000792                     i2l771:		; BSR set to: ?
  3293                           
  3294                           	line	188
  3295                           ;main.c: 187: }
  3296                           ;main.c: 188: count_1ms = 0;
  3297  000792  0E00               	movlw	low(0)
  3298  000794  0100               	movlb	0	; () banked
  3299  000796  0100               	movlb	0	; () banked
  3300  000798  6FFD               	movwf	((253))&0ffh
  3301  00079A  0E00               	movlw	high(0)
  3302  00079C  0100               	movlb	0	; () banked
  3303  00079E  6FFE               	movwf	((253+1))&0ffh
  3304                           	line	189
  3305                           ;main.c: 189: sample_step = 1;
  3306  0007A0  0102               	movlb	2	; () banked
  3307  0007A2  6F27               	movwf	(??_get_speed+0+0)&0ffh
  3308  0007A4  0E01               	movlw	low(01h)
  3309  0007A6  0101               	movlb	1	; () banked
  3310  0007A8  0101               	movlb	1	; () banked
  3311  0007AA  6F39               	movwf	((313))&0ffh
  3312  0007AC  0102               	movlb	2	; () banked
  3313  0007AE  5127               	movf	(??_get_speed+0+0)&0ffh,w
  3314                           	line	190
  3315                           	
  3316  0007B0                     i2l770:		; BSR set to: ?
  3317                           
  3318                           	line	191
  3319                           ;main.c: 190: }
  3320                           ;main.c: 191: break;
  3321  0007B0  EFED  F003         	goto	i2l766
  3322                           	line	193
  3323                           ;main.c: 193: default:
  3324                           	
  3325  0007B4                     i2l772:		; BSR set to: ?
  3326                           
  3327                           	line	194
  3328                           ;main.c: 194: sample_step = 1;
  3329  0007B4  0102               	movlb	2	; () banked
  3330  0007B6  6F27               	movwf	(??_get_speed+0+0)&0ffh
  3331  0007B8  0E01               	movlw	low(01h)
  3332  0007BA  0101               	movlb	1	; () banked
  3333  0007BC  0101               	movlb	1	; () banked
  3334  0007BE  6F39               	movwf	((313))&0ffh
  3335  0007C0  0102               	movlb	2	; () banked
  3336  0007C2  5127               	movf	(??_get_speed+0+0)&0ffh,w
  3337                           	line	195
  3338                           ;main.c: 195: break;
  3339  0007C4  EFED  F003         	goto	i2l766
  3340                           	line	170
  3341                           	
  3342  0007C8                     i2l767:		; BSR set to: ?
  3343                           
  3344  0007C8  0101               	movlb	1	; () banked
  3345  0007CA  0101               	movlb	1	; () banked
  3346  0007CC  5139               	movf	((313))&0ffh,w
  3347  0007CE  0A01               	xorlw	1 ^ 0
  3348  0007D0  E08A               	bz	i2l768
  3349  0007D2  0A03               	xorlw	2 ^ 1
  3350  0007D4  E098               	bz	i2l769
  3351  0007D6  EFDA  F003         	goto	i2l772
  3352                           
  3353                           	line	196
  3354                           	
  3355  0007DA                     i2l766:		; BSR set to: ?
  3356                           
  3357                           	line	197
  3358                           ;main.c: 197: }
  3359  0007DA                     i2l765:
  3360                           			; BSR set to: ?
  3361                           
  3362  0007DA  0012               	return
  3363                           	opt stack 0
  3364                           GLOBAL __end_of_get_speed
  3365  0007DC                     	__end_of_get_speed:
  3366                           	FNSIZE	_get_speed,1,0
  3367                           ; =============== function _get_speed ends =====
                                 =======
  3368                           
  3369                           	signat	_get_speed,88
  3370                                   psect   text20,class=CODE,space=0,reloc=
                                 2
  3371                           	global	intlevel2
  3372                           
  3373                           	opt lm
  3374                           	FNBREAK _start_timer3,intlevel2
  3375                           	global	_start_timer3
  3376                           	global	??_start_timer3
  3377                           	global	?_start_timer3
  3378                           
  3379                           ; *************** function _start_timer3 *******
                                 **********
  3380                           ; Defined at:
  3381                           ;		line 200 in file "../main.c"
  3382                           ; Parameters:
  3383                           ;		None
  3384                           ; Auto variables:
  3385                           ;		None
  3386                           ; Return value:
  3387                           ;		type: void 
  3388                           ;		size: 0
  3389                           ; Registers used:
  3390                           ;		wreg, status,2
  3391                           ; Tracked objects:
  3392                           ;		On entry : 0/0
  3393                           ;		On exit  : 0/0
  3394                           ;		Unchanged: 0/0
  3395                           ; Data sizes:
  3396                           ;		Autos:    0
  3397                           ;		Params:   0
  3398                           ;		Temp:     0
  3399                           ;		Total:    0
  3400                           ; This function calls:
  3401                           ;		Nothing
  3402                           ; This function is called by:
  3403                           ;		_get_speed
  3404                           ; This function uses a non-reentrant model
  3405                           ; 
  3406                           	file	"../main.c"
  3407                           	line	200
  3408  000000                     	__size_of_start_timer3	equ	__end_of_start_timer
                                 3-_start_timer3
  3409                           ;main.c: 199: void start_timer3(void)
  3410                           ;main.c: 200: {
  3411                           	
  3412  000D94                     _start_timer3:		; BSR set to: ?
  3413                           
  3414                           	opt stack 28
  3415                           	line	201
  3416                           ;main.c: 201: TMR3 = 65535-11059;
  3417  000D94  0ECC               	movlw	low(0D4CCh)
  3418  000D96  6EB2               	movwf	((c:4018)),c	;volatile
  3419  000D98  0ED4               	movlw	high(0D4CCh)
  3420  000D9A  6EB3               	movwf	((c:4018+1)),c	;volatile
  3421                           	line	202
  3422                           ;main.c: 202: TMR3ON = 1;
  3423  000D9C  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
  3424                           	line	203
  3425                           ;main.c: 203: }
  3426  000D9E                     i2l773:
  3427                           			; BSR set to: ?
  3428                           
  3429  000D9E  0012               	return
  3430                           	opt stack 0
  3431                           GLOBAL __end_of_start_timer3
  3432  000DA0                     	__end_of_start_timer3:
  3433                           	FNSIZE	_start_timer3,0,0
  3434                           ; =============== function _start_timer3 ends ==
                                 ==========
  3435                           
  3436                           	signat	_start_timer3,88
  3437                                   psect   text21,class=CODE,space=0,reloc=
                                 2
  3438                           	global	intlevel2
  3439                           
  3440                           	opt lm
  3441                           	FNBREAK ___aldiv,intlevel2
  3442                           	global	___aldiv
  3443                           	global	??___aldiv
  3444                           	global	?___aldiv
  3445                           
  3446                           ; *************** function ___aldiv ************
                                 *****
  3447                           ; Defined at:
  3448                           ;		line 5 in file "D:\Program Files\HI-TECH Soft
                                 ware\PICC-18\PRO\9.66\sources\aldiv.c"
  3449                           ; Parameters:
  3450                           ;		dividend       size:   4offs:   0	type: long 
  3451                           ;		divisor        size:   4offs:   4	type: long 
  3452                           ; Auto variables:
  3453                           ;		counter     	       	type: unsigned char 
  3454                           ;		sign        	       	type: unsigned char 
  3455                           ;		quotient    	       	type: long 
  3456                           ; Return value:
  3457                           ;		type: long 
  3458                           ;		size: 4
  3459                           ; Registers used:
  3460                           ;		wreg, status,2, status,0
  3461                           ; Tracked objects:
  3462                           ;		On entry : 0/0
  3463                           ;		On exit  : 0/0
  3464                           ;		Unchanged: 0/0
  3465                           ; Data sizes:
  3466                           ;		Autos:    6
  3467                           ;		Params:   8
  3468                           ;		Temp:     1
  3469                           ;		Total:   15
  3470                           ; This function calls:
  3471                           ;		Nothing
  3472                           ; This function is called by:
  3473                           ;		_get_speed
  3474                           ; This function uses a non-reentrant model
  3475                           ; 
  3476                           	file	"D:\Program Files\HI-TECH Software\PICC-18
                                 \PRO\9.66\sources\aldiv.c"
  3477                           	line	5
  3478  000000                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3479                           	
  3480  0002BA                     ___aldiv:		; BSR set to: ?
  3481                           
  3482                           	opt stack 28
  3483                           	line	9
  3484  0002BA  0102               	movlb	2	; () banked
  3485  0002BC  6F36               	movwf	(??___aldiv+6+0)&0ffh
  3486  0002BE  0E00               	movlw	low(0)
  3487  0002C0  0102               	movlb	2	; () banked
  3488  0002C2  0102               	movlb	2	; () banked
  3489  0002C4  6F31               	movwf	((___aldiv@sign))&0ffh
  3490  0002C6  0102               	movlb	2	; () banked
  3491  0002C8  5136               	movf	(??___aldiv+6+0)&0ffh,w
  3492                           	line	10
  3493  0002CA  0102               	movlb	2	; () banked
  3494  0002CC  0102               	movlb	2	; () banked
  3495  0002CE  AF2F               	btfss	((___aldiv@divisor+3))&0ffh,7
  3496  0002D0  EF6C  F001         	goto	i2u1711
  3497  0002D4  EF6E  F001         	goto	i2u1710
  3498  0002D8                     i2u1711:
  3499  0002D8  EF86  F001         	goto	i2l813
  3500  0002DC                     i2u1710:
  3501                           	line	11
  3502  0002DC  0102               	movlb	2	; () banked
  3503  0002DE  0102               	movlb	2	; () banked
  3504  0002E0  1F2F               	comf	((___aldiv@divisor+3))&0ffh
  3505  0002E2  0102               	movlb	2	; () banked
  3506  0002E4  1F2E               	comf	((___aldiv@divisor+2))&0ffh
  3507  0002E6  0102               	movlb	2	; () banked
  3508  0002E8  1F2D               	comf	((___aldiv@divisor+1))&0ffh
  3509  0002EA  0102               	movlb	2	; () banked
  3510  0002EC  6D2C               	negf	((___aldiv@divisor))&0ffh
  3511  0002EE  0E00               	movlw	0
  3512  0002F0  0102               	movlb	2	; () banked
  3513  0002F2  232D               	addwfc	((___aldiv@divisor+1))&0ffh
  3514  0002F4  0102               	movlb	2	; () banked
  3515  0002F6  232E               	addwfc	((___aldiv@divisor+2))&0ffh
  3516  0002F8  0102               	movlb	2	; () banked
  3517  0002FA  232F               	addwfc	((___aldiv@divisor+3))&0ffh
  3518                           	line	12
  3519  0002FC  0102               	movlb	2	; () banked
  3520  0002FE  6F36               	movwf	(??___aldiv+6+0)&0ffh
  3521  000300  0E01               	movlw	low(01h)
  3522  000302  0102               	movlb	2	; () banked
  3523  000304  0102               	movlb	2	; () banked
  3524  000306  6F31               	movwf	((___aldiv@sign))&0ffh
  3525  000308  0102               	movlb	2	; () banked
  3526  00030A  5136               	movf	(??___aldiv+6+0)&0ffh,w
  3527                           	line	13
  3528                           	
  3529  00030C                     i2l813:		; BSR set to: ?
  3530                           
  3531                           	line	14
  3532  00030C  0102               	movlb	2	; () banked
  3533  00030E  0102               	movlb	2	; () banked
  3534  000310  AF2B               	btfss	((___aldiv@dividend+3))&0ffh,7
  3535  000312  EF8D  F001         	goto	i2u1721
  3536  000316  EF8F  F001         	goto	i2u1720
  3537  00031A                     i2u1721:
  3538  00031A  EFA3  F001         	goto	i2l814
  3539  00031E                     i2u1720:
  3540                           	line	15
  3541  00031E  0102               	movlb	2	; () banked
  3542  000320  0102               	movlb	2	; () banked
  3543  000322  1F2B               	comf	((___aldiv@dividend+3))&0ffh
  3544  000324  0102               	movlb	2	; () banked
  3545  000326  1F2A               	comf	((___aldiv@dividend+2))&0ffh
  3546  000328  0102               	movlb	2	; () banked
  3547  00032A  1F29               	comf	((___aldiv@dividend+1))&0ffh
  3548  00032C  0102               	movlb	2	; () banked
  3549  00032E  6D28               	negf	((___aldiv@dividend))&0ffh
  3550  000330  0E00               	movlw	0
  3551  000332  0102               	movlb	2	; () banked
  3552  000334  2329               	addwfc	((___aldiv@dividend+1))&0ffh
  3553  000336  0102               	movlb	2	; () banked
  3554  000338  232A               	addwfc	((___aldiv@dividend+2))&0ffh
  3555  00033A  0102               	movlb	2	; () banked
  3556  00033C  232B               	addwfc	((___aldiv@dividend+3))&0ffh
  3557                           	line	16
  3558  00033E  0E01               	movlw	(01h)&0ffh
  3559  000340  0102               	movlb	2	; () banked
  3560  000342  0102               	movlb	2	; () banked
  3561  000344  1B31               	xorwf	((___aldiv@sign))&0ffh
  3562                           	line	17
  3563                           	
  3564  000346                     i2l814:		; BSR set to: ?
  3565                           
  3566                           	line	18
  3567  000346  0E00               	movlw	low(0)
  3568  000348  0102               	movlb	2	; () banked
  3569  00034A  0102               	movlb	2	; () banked
  3570  00034C  6F32               	movwf	((___aldiv@quotient))&0ffh
  3571  00034E  0E00               	movlw	high(0)
  3572  000350  0102               	movlb	2	; () banked
  3573  000352  6F33               	movwf	((___aldiv@quotient+1))&0ffh
  3574  000354  0E00               	movlw	low highword(0)
  3575  000356  0102               	movlb	2	; () banked
  3576  000358  6F34               	movwf	((___aldiv@quotient+2))&0ffh
  3577  00035A  0E00               	movlw	high highword(0)
  3578  00035C  0102               	movlb	2	; () banked
  3579  00035E  6F35               	movwf	((___aldiv@quotient+3))&0ffh
  3580                           	line	19
  3581  000360  0102               	movlb	2	; () banked
  3582  000362  512F               	movf	((___aldiv@divisor+3))&0ffh,w
  3583  000364  112C               	iorwf ((___aldiv@divisor))&0ffh,w
  3584  000366  112D               	iorwf ((___aldiv@divisor+1))&0ffh,w
  3585  000368  112E               	iorwf ((___aldiv@divisor+2))&0ffh,w
  3586                           
  3587  00036A  B4D8               	btfsc	status,2
  3588  00036C  EFBA  F001         	goto	i2u1731
  3589  000370  EFBC  F001         	goto	i2u1730
  3590  000374                     i2u1731:
  3591  000374  EF2F  F002         	goto	i2l815
  3592  000378                     i2u1730:
  3593                           	line	20
  3594  000378  0102               	movlb	2	; () banked
  3595  00037A  6F36               	movwf	(??___aldiv+6+0)&0ffh
  3596  00037C  0E01               	movlw	low(01h)
  3597  00037E  0102               	movlb	2	; () banked
  3598  000380  0102               	movlb	2	; () banked
  3599  000382  6F30               	movwf	((___aldiv@counter))&0ffh
  3600  000384  0102               	movlb	2	; () banked
  3601  000386  5136               	movf	(??___aldiv+6+0)&0ffh,w
  3602                           	line	21
  3603  000388  EFD3  F001         	goto	i2l816
  3604                           	
  3605  00038C                     i2l817:		; BSR set to: ?
  3606                           
  3607                           	line	22
  3608  00038C  0102               	movlb	2	; () banked
  3609  00038E  90D8               	bcf	status,0
  3610  000390  0102               	movlb	2	; () banked
  3611  000392  372C               	rlcf	((___aldiv@divisor))&0ffh
  3612  000394  0102               	movlb	2	; () banked
  3613  000396  372D               	rlcf	((___aldiv@divisor+1))&0ffh
  3614  000398  0102               	movlb	2	; () banked
  3615  00039A  372E               	rlcf	((___aldiv@divisor+2))&0ffh
  3616  00039C  0102               	movlb	2	; () banked
  3617  00039E  372F               	rlcf	((___aldiv@divisor+3))&0ffh
  3618                           	line	23
  3619  0003A0  0102               	movlb	2	; () banked
  3620  0003A2  0102               	movlb	2	; () banked
  3621  0003A4  2B30               	incf	((___aldiv@counter))&0ffh
  3622                           	line	24
  3623                           	
  3624  0003A6                     i2l816:		; BSR set to: ?
  3625                           
  3626                           	line	21
  3627  0003A6  0102               	movlb	2	; () banked
  3628                           	
  3629  0003A8  0102               	movlb	2	; () banked
  3630  0003AA  AF2F               	btfss	((___aldiv@divisor+3))&0ffh,(31)&7
  3631  0003AC  EFDA  F001         	goto	i2u1741
  3632  0003B0  EFDC  F001         	goto	i2u1740
  3633  0003B4                     i2u1741:
  3634  0003B4  EFC6  F001         	goto	i2l817
  3635  0003B8                     i2u1740:
  3636                           	
  3637  0003B8                     i2l818:		; BSR set to: ?
  3638                           
  3639                           	line	25
  3640                           	
  3641  0003B8                     i2l821:		; BSR set to: ?
  3642                           
  3643                           	line	26
  3644  0003B8  0102               	movlb	2	; () banked
  3645  0003BA  90D8               	bcf	status,0
  3646  0003BC  0102               	movlb	2	; () banked
  3647  0003BE  3732               	rlcf	((___aldiv@quotient))&0ffh
  3648  0003C0  0102               	movlb	2	; () banked
  3649  0003C2  3733               	rlcf	((___aldiv@quotient+1))&0ffh
  3650  0003C4  0102               	movlb	2	; () banked
  3651  0003C6  3734               	rlcf	((___aldiv@quotient+2))&0ffh
  3652  0003C8  0102               	movlb	2	; () banked
  3653  0003CA  3735               	rlcf	((___aldiv@quotient+3))&0ffh
  3654                           	line	27
  3655  0003CC  0102               	movlb	2	; () banked
  3656  0003CE  0102               	movlb	2	; () banked
  3657  0003D0  512C               	movf	((___aldiv@divisor))&0ffh,w
  3658  0003D2  0102               	movlb	2	; () banked
  3659  0003D4  0102               	movlb	2	; () banked
  3660  0003D6  5D28               	subwf	((___aldiv@dividend))&0ffh,w
  3661  0003D8  0102               	movlb	2	; () banked
  3662  0003DA  0102               	movlb	2	; () banked
  3663  0003DC  512D               	movf	((___aldiv@divisor+1))&0ffh,w
  3664  0003DE  0102               	movlb	2	; () banked
  3665  0003E0  0102               	movlb	2	; () banked
  3666  0003E2  5929               	subwfb	((___aldiv@dividend+1))&0ffh,w
  3667  0003E4  0102               	movlb	2	; () banked
  3668  0003E6  0102               	movlb	2	; () banked
  3669  0003E8  512E               	movf	((___aldiv@divisor+2))&0ffh,w
  3670  0003EA  0102               	movlb	2	; () banked
  3671  0003EC  0102               	movlb	2	; () banked
  3672  0003EE  592A               	subwfb	((___aldiv@dividend+2))&0ffh,w
  3673  0003F0  0102               	movlb	2	; () banked
  3674  0003F2  0102               	movlb	2	; () banked
  3675  0003F4  512F               	movf	((___aldiv@divisor+3))&0ffh,w
  3676  0003F6  0102               	movlb	2	; () banked
  3677  0003F8  0102               	movlb	2	; () banked
  3678  0003FA  592B               	subwfb	((___aldiv@dividend+3))&0ffh,w
  3679  0003FC  A0D8               	btfss	status,0
  3680  0003FE  EF03  F002         	goto	i2u1751
  3681  000402  EF05  F002         	goto	i2u1750
  3682  000406                     i2u1751:
  3683  000406  EF20  F002         	goto	i2l822
  3684  00040A                     i2u1750:
  3685                           	line	28
  3686  00040A  0102               	movlb	2	; () banked
  3687  00040C  0102               	movlb	2	; () banked
  3688  00040E  512C               	movf	((___aldiv@divisor))&0ffh,w
  3689  000410  0102               	movlb	2	; () banked
  3690  000412  0102               	movlb	2	; () banked
  3691  000414  5F28               	subwf	((___aldiv@dividend))&0ffh
  3692  000416  0102               	movlb	2	; () banked
  3693  000418  0102               	movlb	2	; () banked
  3694  00041A  512D               	movf	((___aldiv@divisor+1))&0ffh,w
  3695  00041C  0102               	movlb	2	; () banked
  3696  00041E  0102               	movlb	2	; () banked
  3697  000420  5B29               	subwfb	((___aldiv@dividend+1))&0ffh
  3698  000422  0102               	movlb	2	; () banked
  3699  000424  0102               	movlb	2	; () banked
  3700  000426  512E               	movf	((___aldiv@divisor+2))&0ffh,w
  3701  000428  0102               	movlb	2	; () banked
  3702  00042A  0102               	movlb	2	; () banked
  3703  00042C  5B2A               	subwfb	((___aldiv@dividend+2))&0ffh
  3704  00042E  0102               	movlb	2	; () banked
  3705  000430  0102               	movlb	2	; () banked
  3706  000432  512F               	movf	((___aldiv@divisor+3))&0ffh,w
  3707  000434  0102               	movlb	2	; () banked
  3708  000436  0102               	movlb	2	; () banked
  3709  000438  5B2B               	subwfb	((___aldiv@dividend+3))&0ffh
  3710                           	line	29
  3711  00043A  0102               	movlb	2	; () banked
  3712  00043C  0102               	movlb	2	; () banked
  3713  00043E  8132               	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
  3714                           	line	30
  3715                           	
  3716  000440                     i2l822:		; BSR set to: ?
  3717                           
  3718                           	line	31
  3719  000440  0102               	movlb	2	; () banked
  3720  000442  90D8               	bcf	status,0
  3721  000444  0102               	movlb	2	; () banked
  3722  000446  332F               	rrcf	((___aldiv@divisor+3))&0ffh
  3723  000448  0102               	movlb	2	; () banked
  3724  00044A  332E               	rrcf	((___aldiv@divisor+2))&0ffh
  3725  00044C  0102               	movlb	2	; () banked
  3726  00044E  332D               	rrcf	((___aldiv@divisor+1))&0ffh
  3727  000450  0102               	movlb	2	; () banked
  3728  000452  332C               	rrcf	((___aldiv@divisor))&0ffh
  3729                           	line	32
  3730  000454  0102               	movlb	2	; () banked
  3731  000456  0102               	movlb	2	; () banked
  3732  000458  2F30               	decfsz	((___aldiv@counter))&0ffh
  3733                           	
  3734  00045A  EFDC  F001         	goto	i2l821
  3735                           	
  3736  00045E                     i2l820:		; BSR set to: ?
  3737                           
  3738                           	line	33
  3739                           	
  3740  00045E                     i2l815:		; BSR set to: ?
  3741                           
  3742                           	line	34
  3743  00045E  0102               	movlb	2	; () banked
  3744  000460  0102               	movlb	2	; () banked
  3745  000462  5131               	movf	((___aldiv@sign))&0ffh,w
  3746  000464  B4D8               	btfsc	status,2
  3747  000466  EF37  F002         	goto	i2u1761
  3748  00046A  EF39  F002         	goto	i2u1760
  3749  00046E                     i2u1761:
  3750  00046E  EF49  F002         	goto	i2l823
  3751  000472                     i2u1760:
  3752                           	line	35
  3753  000472  0102               	movlb	2	; () banked
  3754  000474  0102               	movlb	2	; () banked
  3755  000476  1F35               	comf	((___aldiv@quotient+3))&0ffh
  3756  000478  0102               	movlb	2	; () banked
  3757  00047A  1F34               	comf	((___aldiv@quotient+2))&0ffh
  3758  00047C  0102               	movlb	2	; () banked
  3759  00047E  1F33               	comf	((___aldiv@quotient+1))&0ffh
  3760  000480  0102               	movlb	2	; () banked
  3761  000482  6D32               	negf	((___aldiv@quotient))&0ffh
  3762  000484  0E00               	movlw	0
  3763  000486  0102               	movlb	2	; () banked
  3764  000488  2333               	addwfc	((___aldiv@quotient+1))&0ffh
  3765  00048A  0102               	movlb	2	; () banked
  3766  00048C  2334               	addwfc	((___aldiv@quotient+2))&0ffh
  3767  00048E  0102               	movlb	2	; () banked
  3768  000490  2335               	addwfc	((___aldiv@quotient+3))&0ffh
  3769                           	
  3770  000492                     i2l823:		; BSR set to: ?
  3771                           
  3772                           	line	36
  3773  000492  C232  F228         	movff	(___aldiv@quotient),(?___aldiv)
  3774  000496  C233  F229         	movff	(___aldiv@quotient+1),(?___aldiv+1)
  3775  00049A  C234  F22A         	movff	(___aldiv@quotient+2),(?___aldiv+2)
  3776  00049E  C235  F22B         	movff	(___aldiv@quotient+3),(?___aldiv+3)
  3777  0004A2  EF53  F002         	goto	i2l812
  3778                           	line	37
  3779  0004A6                     i2l812:
  3780                           			; BSR set to: ?
  3781                           
  3782  0004A6  0012               	return
  3783                           	opt stack 0
  3784                           GLOBAL __end_of___aldiv
  3785  0004A8                     	__end_of___aldiv:
  3786                           	FNSIZE	___aldiv,7,8
  3787                           ; =============== function ___aldiv ends =======
                                 =====
  3788                           
  3789                           	signat	___aldiv,8316
  3790                                   psect   text22,class=CODE,space=0,reloc=
                                 2
  3791                           	global	intlevel2
  3792                           
  3793                           	opt lm
  3794                           	FNBREAK _stop_timer3,intlevel2
  3795                           	global	_stop_timer3
  3796                           	global	??_stop_timer3
  3797                           	global	?_stop_timer3
  3798                           
  3799                           ; *************** function _stop_timer3 ********
                                 *********
  3800                           ; Defined at:
  3801                           ;		line 205 in file "../main.c"
  3802                           ; Parameters:
  3803                           ;		None
  3804                           ; Auto variables:
  3805                           ;		None
  3806                           ; Return value:
  3807                           ;		type: void 
  3808                           ;		size: 0
  3809                           ; Registers used:
  3810                           ;		wreg, status,2
  3811                           ; Tracked objects:
  3812                           ;		On entry : 0/0
  3813                           ;		On exit  : 0/0
  3814                           ;		Unchanged: 0/0
  3815                           ; Data sizes:
  3816                           ;		Autos:    0
  3817                           ;		Params:   0
  3818                           ;		Temp:     0
  3819                           ;		Total:    0
  3820                           ; This function calls:
  3821                           ;		Nothing
  3822                           ; This function is called by:
  3823                           ;		_get_speed
  3824                           ; This function uses a non-reentrant model
  3825                           ; 
  3826                           	file	"../main.c"
  3827                           	line	205
  3828  000000                     	__size_of_stop_timer3	equ	__end_of_stop_timer3-
                                 _stop_timer3
  3829                           ;main.c: 204: void stop_timer3(void)
  3830                           ;main.c: 205: {
  3831                           	
  3832  000D88                     _stop_timer3:		; BSR set to: ?
  3833                           
  3834                           	opt stack 28
  3835                           	line	206
  3836                           ;main.c: 206: TMR3ON = 0;
  3837  000D88  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
  3838                           	line	207
  3839                           ;main.c: 207: TMR3 = 65535-11059;
  3840  000D8A  0ECC               	movlw	low(0D4CCh)
  3841  000D8C  6EB2               	movwf	((c:4018)),c	;volatile
  3842  000D8E  0ED4               	movlw	high(0D4CCh)
  3843  000D90  6EB3               	movwf	((c:4018+1)),c	;volatile
  3844                           	line	208
  3845                           ;main.c: 208: }
  3846  000D92                     i2l774:
  3847                           			; BSR set to: ?
  3848                           
  3849  000D92  0012               	return
  3850                           	opt stack 0
  3851                           GLOBAL __end_of_stop_timer3
  3852  000D94                     	__end_of_stop_timer3:
  3853                           	FNSIZE	_stop_timer3,0,0
  3854                           ; =============== function _stop_timer3 ends ===
                                 =========
  3855                           
  3856                           	signat	_stop_timer3,88
  3857                           	FNCALL	_main,_init_timer3
  3858                           	FNCALL	_main,_init_pv1
  3859                           	FNCALL	_main,_init_timer0
  3860                           	FNCALL	_main,_init_pg_in
  3861                           	FNCALL	_main,_init_timer5
  3862                           	FNCALL	_main,_modbus_receive
  3863                           	FNCALL	_modbus_receive,_modbus_crc16
  3864                           	FNCALL	_modbus_receive,_read_holding_regs
  3865                           	FNCALL	_modbus_receive,_write_single_holding_re
                                 g
  3866                           	FNCALL	_read_holding_regs,_modbus_crc16
  3867                           	FNROOT	_main
  3868                           	FNCALL	_my_isr,_rec_isr
  3869                           	FNCALL	_my_isr,_tx_isr
  3870                           	FNCALL	_my_isr,_timer35_isr
  3871                           	FNCALL	_my_isr,_timer3_isr
  3872                           	FNCALL	_my_isr,_pv1_isr
  3873                           	FNCALL	_my_isr,_timer0_isr
  3874                           	FNCALL	_my_isr,_pg_in_isr
  3875                           	FNCALL	_my_isr,_timer5_isr
  3876                           	FNCALL	_pv1_isr,_get_speed
  3877                           	FNCALL	_get_speed,_start_timer3
  3878                           	FNCALL	_get_speed,_stop_timer3
  3879                           	FNCALL	_get_speed,___aldiv
  3880                           	FNCALL	intlevel2,_my_isr
  3881                           	global	intlevel2
  3882                           	FNROOT	intlevel2
  3883                           	global	F3893
  3884                                   psect   text23,class=CODE,space=0,reloc=
                                 2
  3885  000000                     F3893  equ     313
  3886                           
  3887                           	opt lm
  3888                           
  3889                           	DABS	1,313,1	;F3893
  3890                                   psect   idata,class=CODE,space=0
  3891                           	line	167
  3892                           
  3893                           ;initializer for F3893
  3894  00005E  01                 	db	low(01h)
  3895                                   psect   mediumconst,class=MEDIUMCONST,sp
                                 ace=0,reloc=2
  3896                           	global	_aucCRCHi
  3897                           	file	"../mbcrc.c"
  3898                           	line	2
  3899  007DFE                     _aucCRCHi:
  3900  007DFE  00                 	db	low(0)
  3901  007DFF  C1                 	db	low(0C1h)
  3902  007E00  81                 	db	low(081h)
  3903  007E01  40                 	db	low(040h)
  3904  007E02  01                 	db	low(01h)
  3905  007E03  C0                 	db	low(0C0h)
  3906  007E04  80                 	db	low(080h)
  3907  007E05  41                 	db	low(041h)
  3908  007E06  01                 	db	low(01h)
  3909  007E07  C0                 	db	low(0C0h)
  3910  007E08  80                 	db	low(080h)
  3911  007E09  41                 	db	low(041h)
  3912  007E0A  00                 	db	low(0)
  3913  007E0B  C1                 	db	low(0C1h)
  3914  007E0C  81                 	db	low(081h)
  3915  007E0D  40                 	db	low(040h)
  3916  007E0E  01                 	db	low(01h)
  3917  007E0F  C0                 	db	low(0C0h)
  3918  007E10  80                 	db	low(080h)
  3919  007E11  41                 	db	low(041h)
  3920  007E12  00                 	db	low(0)
  3921  007E13  C1                 	db	low(0C1h)
  3922  007E14  81                 	db	low(081h)
  3923  007E15  40                 	db	low(040h)
  3924  007E16  00                 	db	low(0)
  3925  007E17  C1                 	db	low(0C1h)
  3926  007E18  81                 	db	low(081h)
  3927  007E19  40                 	db	low(040h)
  3928  007E1A  01                 	db	low(01h)
  3929  007E1B  C0                 	db	low(0C0h)
  3930  007E1C  80                 	db	low(080h)
  3931  007E1D  41                 	db	low(041h)
  3932  007E1E  01                 	db	low(01h)
  3933  007E1F  C0                 	db	low(0C0h)
  3934  007E20  80                 	db	low(080h)
  3935  007E21  41                 	db	low(041h)
  3936  007E22  00                 	db	low(0)
  3937  007E23  C1                 	db	low(0C1h)
  3938  007E24  81                 	db	low(081h)
  3939  007E25  40                 	db	low(040h)
  3940  007E26  00                 	db	low(0)
  3941  007E27  C1                 	db	low(0C1h)
  3942  007E28  81                 	db	low(081h)
  3943  007E29  40                 	db	low(040h)
  3944  007E2A  01                 	db	low(01h)
  3945  007E2B  C0                 	db	low(0C0h)
  3946  007E2C  80                 	db	low(080h)
  3947  007E2D  41                 	db	low(041h)
  3948  007E2E  00                 	db	low(0)
  3949  007E2F  C1                 	db	low(0C1h)
  3950  007E30  81                 	db	low(081h)
  3951  007E31  40                 	db	low(040h)
  3952  007E32  01                 	db	low(01h)
  3953  007E33  C0                 	db	low(0C0h)
  3954  007E34  80                 	db	low(080h)
  3955  007E35  41                 	db	low(041h)
  3956  007E36  01                 	db	low(01h)
  3957  007E37  C0                 	db	low(0C0h)
  3958  007E38  80                 	db	low(080h)
  3959  007E39  41                 	db	low(041h)
  3960  007E3A  00                 	db	low(0)
  3961  007E3B  C1                 	db	low(0C1h)
  3962  007E3C  81                 	db	low(081h)
  3963  007E3D  40                 	db	low(040h)
  3964  007E3E  01                 	db	low(01h)
  3965  007E3F  C0                 	db	low(0C0h)
  3966  007E40  80                 	db	low(080h)
  3967  007E41  41                 	db	low(041h)
  3968  007E42  00                 	db	low(0)
  3969  007E43  C1                 	db	low(0C1h)
  3970  007E44  81                 	db	low(081h)
  3971  007E45  40                 	db	low(040h)
  3972  007E46  00                 	db	low(0)
  3973  007E47  C1                 	db	low(0C1h)
  3974  007E48  81                 	db	low(081h)
  3975  007E49  40                 	db	low(040h)
  3976  007E4A  01                 	db	low(01h)
  3977  007E4B  C0                 	db	low(0C0h)
  3978  007E4C  80                 	db	low(080h)
  3979  007E4D  41                 	db	low(041h)
  3980  007E4E  00                 	db	low(0)
  3981  007E4F  C1                 	db	low(0C1h)
  3982  007E50  81                 	db	low(081h)
  3983  007E51  40                 	db	low(040h)
  3984  007E52  01                 	db	low(01h)
  3985  007E53  C0                 	db	low(0C0h)
  3986  007E54  80                 	db	low(080h)
  3987  007E55  41                 	db	low(041h)
  3988  007E56  01                 	db	low(01h)
  3989  007E57  C0                 	db	low(0C0h)
  3990  007E58  80                 	db	low(080h)
  3991  007E59  41                 	db	low(041h)
  3992  007E5A  00                 	db	low(0)
  3993  007E5B  C1                 	db	low(0C1h)
  3994  007E5C  81                 	db	low(081h)
  3995  007E5D  40                 	db	low(040h)
  3996  007E5E  00                 	db	low(0)
  3997  007E5F  C1                 	db	low(0C1h)
  3998  007E60  81                 	db	low(081h)
  3999  007E61  40                 	db	low(040h)
  4000  007E62  01                 	db	low(01h)
  4001  007E63  C0                 	db	low(0C0h)
  4002  007E64  80                 	db	low(080h)
  4003  007E65  41                 	db	low(041h)
  4004  007E66  01                 	db	low(01h)
  4005  007E67  C0                 	db	low(0C0h)
  4006  007E68  80                 	db	low(080h)
  4007  007E69  41                 	db	low(041h)
  4008  007E6A  00                 	db	low(0)
  4009  007E6B  C1                 	db	low(0C1h)
  4010  007E6C  81                 	db	low(081h)
  4011  007E6D  40                 	db	low(040h)
  4012  007E6E  01                 	db	low(01h)
  4013  007E6F  C0                 	db	low(0C0h)
  4014  007E70  80                 	db	low(080h)
  4015  007E71  41                 	db	low(041h)
  4016  007E72  00                 	db	low(0)
  4017  007E73  C1                 	db	low(0C1h)
  4018  007E74  81                 	db	low(081h)
  4019  007E75  40                 	db	low(040h)
  4020  007E76  00                 	db	low(0)
  4021  007E77  C1                 	db	low(0C1h)
  4022  007E78  81                 	db	low(081h)
  4023  007E79  40                 	db	low(040h)
  4024  007E7A  01                 	db	low(01h)
  4025  007E7B  C0                 	db	low(0C0h)
  4026  007E7C  80                 	db	low(080h)
  4027  007E7D  41                 	db	low(041h)
  4028  007E7E  01                 	db	low(01h)
  4029  007E7F  C0                 	db	low(0C0h)
  4030  007E80  80                 	db	low(080h)
  4031  007E81  41                 	db	low(041h)
  4032  007E82  00                 	db	low(0)
  4033  007E83  C1                 	db	low(0C1h)
  4034  007E84  81                 	db	low(081h)
  4035  007E85  40                 	db	low(040h)
  4036  007E86  00                 	db	low(0)
  4037  007E87  C1                 	db	low(0C1h)
  4038  007E88  81                 	db	low(081h)
  4039  007E89  40                 	db	low(040h)
  4040  007E8A  01                 	db	low(01h)
  4041  007E8B  C0                 	db	low(0C0h)
  4042  007E8C  80                 	db	low(080h)
  4043  007E8D  41                 	db	low(041h)
  4044  007E8E  00                 	db	low(0)
  4045  007E8F  C1                 	db	low(0C1h)
  4046  007E90  81                 	db	low(081h)
  4047  007E91  40                 	db	low(040h)
  4048  007E92  01                 	db	low(01h)
  4049  007E93  C0                 	db	low(0C0h)
  4050  007E94  80                 	db	low(080h)
  4051  007E95  41                 	db	low(041h)
  4052  007E96  01                 	db	low(01h)
  4053  007E97  C0                 	db	low(0C0h)
  4054  007E98  80                 	db	low(080h)
  4055  007E99  41                 	db	low(041h)
  4056  007E9A  00                 	db	low(0)
  4057  007E9B  C1                 	db	low(0C1h)
  4058  007E9C  81                 	db	low(081h)
  4059  007E9D  40                 	db	low(040h)
  4060  007E9E  00                 	db	low(0)
  4061  007E9F  C1                 	db	low(0C1h)
  4062  007EA0  81                 	db	low(081h)
  4063  007EA1  40                 	db	low(040h)
  4064  007EA2  01                 	db	low(01h)
  4065  007EA3  C0                 	db	low(0C0h)
  4066  007EA4  80                 	db	low(080h)
  4067  007EA5  41                 	db	low(041h)
  4068  007EA6  01                 	db	low(01h)
  4069  007EA7  C0                 	db	low(0C0h)
  4070  007EA8  80                 	db	low(080h)
  4071  007EA9  41                 	db	low(041h)
  4072  007EAA  00                 	db	low(0)
  4073  007EAB  C1                 	db	low(0C1h)
  4074  007EAC  81                 	db	low(081h)
  4075  007EAD  40                 	db	low(040h)
  4076  007EAE  01                 	db	low(01h)
  4077  007EAF  C0                 	db	low(0C0h)
  4078  007EB0  80                 	db	low(080h)
  4079  007EB1  41                 	db	low(041h)
  4080  007EB2  00                 	db	low(0)
  4081  007EB3  C1                 	db	low(0C1h)
  4082  007EB4  81                 	db	low(081h)
  4083  007EB5  40                 	db	low(040h)
  4084  007EB6  00                 	db	low(0)
  4085  007EB7  C1                 	db	low(0C1h)
  4086  007EB8  81                 	db	low(081h)
  4087  007EB9  40                 	db	low(040h)
  4088  007EBA  01                 	db	low(01h)
  4089  007EBB  C0                 	db	low(0C0h)
  4090  007EBC  80                 	db	low(080h)
  4091  007EBD  41                 	db	low(041h)
  4092  007EBE  00                 	db	low(0)
  4093  007EBF  C1                 	db	low(0C1h)
  4094  007EC0  81                 	db	low(081h)
  4095  007EC1  40                 	db	low(040h)
  4096  007EC2  01                 	db	low(01h)
  4097  007EC3  C0                 	db	low(0C0h)
  4098  007EC4  80                 	db	low(080h)
  4099  007EC5  41                 	db	low(041h)
  4100  007EC6  01                 	db	low(01h)
  4101  007EC7  C0                 	db	low(0C0h)
  4102  007EC8  80                 	db	low(080h)
  4103  007EC9  41                 	db	low(041h)
  4104  007ECA  00                 	db	low(0)
  4105  007ECB  C1                 	db	low(0C1h)
  4106  007ECC  81                 	db	low(081h)
  4107  007ECD  40                 	db	low(040h)
  4108  007ECE  01                 	db	low(01h)
  4109  007ECF  C0                 	db	low(0C0h)
  4110  007ED0  80                 	db	low(080h)
  4111  007ED1  41                 	db	low(041h)
  4112  007ED2  00                 	db	low(0)
  4113  007ED3  C1                 	db	low(0C1h)
  4114  007ED4  81                 	db	low(081h)
  4115  007ED5  40                 	db	low(040h)
  4116  007ED6  00                 	db	low(0)
  4117  007ED7  C1                 	db	low(0C1h)
  4118  007ED8  81                 	db	low(081h)
  4119  007ED9  40                 	db	low(040h)
  4120  007EDA  01                 	db	low(01h)
  4121  007EDB  C0                 	db	low(0C0h)
  4122  007EDC  80                 	db	low(080h)
  4123  007EDD  41                 	db	low(041h)
  4124  007EDE  01                 	db	low(01h)
  4125  007EDF  C0                 	db	low(0C0h)
  4126  007EE0  80                 	db	low(080h)
  4127  007EE1  41                 	db	low(041h)
  4128  007EE2  00                 	db	low(0)
  4129  007EE3  C1                 	db	low(0C1h)
  4130  007EE4  81                 	db	low(081h)
  4131  007EE5  40                 	db	low(040h)
  4132  007EE6  00                 	db	low(0)
  4133  007EE7  C1                 	db	low(0C1h)
  4134  007EE8  81                 	db	low(081h)
  4135  007EE9  40                 	db	low(040h)
  4136  007EEA  01                 	db	low(01h)
  4137  007EEB  C0                 	db	low(0C0h)
  4138  007EEC  80                 	db	low(080h)
  4139  007EED  41                 	db	low(041h)
  4140  007EEE  00                 	db	low(0)
  4141  007EEF  C1                 	db	low(0C1h)
  4142  007EF0  81                 	db	low(081h)
  4143  007EF1  40                 	db	low(040h)
  4144  007EF2  01                 	db	low(01h)
  4145  007EF3  C0                 	db	low(0C0h)
  4146  007EF4  80                 	db	low(080h)
  4147  007EF5  41                 	db	low(041h)
  4148  007EF6  01                 	db	low(01h)
  4149  007EF7  C0                 	db	low(0C0h)
  4150  007EF8  80                 	db	low(080h)
  4151  007EF9  41                 	db	low(041h)
  4152  007EFA  00                 	db	low(0)
  4153  007EFB  C1                 	db	low(0C1h)
  4154  007EFC  81                 	db	low(081h)
  4155  007EFD  40                 	db	low(040h)
  4156                           	global	_aucCRCLo
  4157                           	line	27
  4158  007EFE                     _aucCRCLo:
  4159  007EFE  00                 	db	low(0)
  4160  007EFF  C0                 	db	low(0C0h)
  4161  007F00  C1                 	db	low(0C1h)
  4162  007F01  01                 	db	low(01h)
  4163  007F02  C3                 	db	low(0C3h)
  4164  007F03  03                 	db	low(03h)
  4165  007F04  02                 	db	low(02h)
  4166  007F05  C2                 	db	low(0C2h)
  4167  007F06  C6                 	db	low(0C6h)
  4168  007F07  06                 	db	low(06h)
  4169  007F08  07                 	db	low(07h)
  4170  007F09  C7                 	db	low(0C7h)
  4171  007F0A  05                 	db	low(05h)
  4172  007F0B  C5                 	db	low(0C5h)
  4173  007F0C  C4                 	db	low(0C4h)
  4174  007F0D  04                 	db	low(04h)
  4175  007F0E  CC                 	db	low(0CCh)
  4176  007F0F  0C                 	db	low(0Ch)
  4177  007F10  0D                 	db	low(0Dh)
  4178  007F11  CD                 	db	low(0CDh)
  4179  007F12  0F                 	db	low(0Fh)
  4180  007F13  CF                 	db	low(0CFh)
  4181  007F14  CE                 	db	low(0CEh)
  4182  007F15  0E                 	db	low(0Eh)
  4183  007F16  0A                 	db	low(0Ah)
  4184  007F17  CA                 	db	low(0CAh)
  4185  007F18  CB                 	db	low(0CBh)
  4186  007F19  0B                 	db	low(0Bh)
  4187  007F1A  C9                 	db	low(0C9h)
  4188  007F1B  09                 	db	low(09h)
  4189  007F1C  08                 	db	low(08h)
  4190  007F1D  C8                 	db	low(0C8h)
  4191  007F1E  D8                 	db	low(0D8h)
  4192  007F1F  18                 	db	low(018h)
  4193  007F20  19                 	db	low(019h)
  4194  007F21  D9                 	db	low(0D9h)
  4195  007F22  1B                 	db	low(01Bh)
  4196  007F23  DB                 	db	low(0DBh)
  4197  007F24  DA                 	db	low(0DAh)
  4198  007F25  1A                 	db	low(01Ah)
  4199  007F26  1E                 	db	low(01Eh)
  4200  007F27  DE                 	db	low(0DEh)
  4201  007F28  DF                 	db	low(0DFh)
  4202  007F29  1F                 	db	low(01Fh)
  4203  007F2A  DD                 	db	low(0DDh)
  4204  007F2B  1D                 	db	low(01Dh)
  4205  007F2C  1C                 	db	low(01Ch)
  4206  007F2D  DC                 	db	low(0DCh)
  4207  007F2E  14                 	db	low(014h)
  4208  007F2F  D4                 	db	low(0D4h)
  4209  007F30  D5                 	db	low(0D5h)
  4210  007F31  15                 	db	low(015h)
  4211  007F32  D7                 	db	low(0D7h)
  4212  007F33  17                 	db	low(017h)
  4213  007F34  16                 	db	low(016h)
  4214  007F35  D6                 	db	low(0D6h)
  4215  007F36  D2                 	db	low(0D2h)
  4216  007F37  12                 	db	low(012h)
  4217  007F38  13                 	db	low(013h)
  4218  007F39  D3                 	db	low(0D3h)
  4219  007F3A  11                 	db	low(011h)
  4220  007F3B  D1                 	db	low(0D1h)
  4221  007F3C  D0                 	db	low(0D0h)
  4222  007F3D  10                 	db	low(010h)
  4223  007F3E  F0                 	db	low(0F0h)
  4224  007F3F  30                 	db	low(030h)
  4225  007F40  31                 	db	low(031h)
  4226  007F41  F1                 	db	low(0F1h)
  4227  007F42  33                 	db	low(033h)
  4228  007F43  F3                 	db	low(0F3h)
  4229  007F44  F2                 	db	low(0F2h)
  4230  007F45  32                 	db	low(032h)
  4231  007F46  36                 	db	low(036h)
  4232  007F47  F6                 	db	low(0F6h)
  4233  007F48  F7                 	db	low(0F7h)
  4234  007F49  37                 	db	low(037h)
  4235  007F4A  F5                 	db	low(0F5h)
  4236  007F4B  35                 	db	low(035h)
  4237  007F4C  34                 	db	low(034h)
  4238  007F4D  F4                 	db	low(0F4h)
  4239  007F4E  3C                 	db	low(03Ch)
  4240  007F4F  FC                 	db	low(0FCh)
  4241  007F50  FD                 	db	low(0FDh)
  4242  007F51  3D                 	db	low(03Dh)
  4243  007F52  FF                 	db	low(0FFh)
  4244  007F53  3F                 	db	low(03Fh)
  4245  007F54  3E                 	db	low(03Eh)
  4246  007F55  FE                 	db	low(0FEh)
  4247  007F56  FA                 	db	low(0FAh)
  4248  007F57  3A                 	db	low(03Ah)
  4249  007F58  3B                 	db	low(03Bh)
  4250  007F59  FB                 	db	low(0FBh)
  4251  007F5A  39                 	db	low(039h)
  4252  007F5B  F9                 	db	low(0F9h)
  4253  007F5C  F8                 	db	low(0F8h)
  4254  007F5D  38                 	db	low(038h)
  4255  007F5E  28                 	db	low(028h)
  4256  007F5F  E8                 	db	low(0E8h)
  4257  007F60  E9                 	db	low(0E9h)
  4258  007F61  29                 	db	low(029h)
  4259  007F62  EB                 	db	low(0EBh)
  4260  007F63  2B                 	db	low(02Bh)
  4261  007F64  2A                 	db	low(02Ah)
  4262  007F65  EA                 	db	low(0EAh)
  4263  007F66  EE                 	db	low(0EEh)
  4264  007F67  2E                 	db	low(02Eh)
  4265  007F68  2F                 	db	low(02Fh)
  4266  007F69  EF                 	db	low(0EFh)
  4267  007F6A  2D                 	db	low(02Dh)
  4268  007F6B  ED                 	db	low(0EDh)
  4269  007F6C  EC                 	db	low(0ECh)
  4270  007F6D  2C                 	db	low(02Ch)
  4271  007F6E  E4                 	db	low(0E4h)
  4272  007F6F  24                 	db	low(024h)
  4273  007F70  25                 	db	low(025h)
  4274  007F71  E5                 	db	low(0E5h)
  4275  007F72  27                 	db	low(027h)
  4276  007F73  E7                 	db	low(0E7h)
  4277  007F74  E6                 	db	low(0E6h)
  4278  007F75  26                 	db	low(026h)
  4279  007F76  22                 	db	low(022h)
  4280  007F77  E2                 	db	low(0E2h)
  4281  007F78  E3                 	db	low(0E3h)
  4282  007F79  23                 	db	low(023h)
  4283  007F7A  E1                 	db	low(0E1h)
  4284  007F7B  21                 	db	low(021h)
  4285  007F7C  20                 	db	low(020h)
  4286  007F7D  E0                 	db	low(0E0h)
  4287  007F7E  A0                 	db	low(0A0h)
  4288  007F7F  60                 	db	low(060h)
  4289  007F80  61                 	db	low(061h)
  4290  007F81  A1                 	db	low(0A1h)
  4291  007F82  63                 	db	low(063h)
  4292  007F83  A3                 	db	low(0A3h)
  4293  007F84  A2                 	db	low(0A2h)
  4294  007F85  62                 	db	low(062h)
  4295  007F86  66                 	db	low(066h)
  4296  007F87  A6                 	db	low(0A6h)
  4297  007F88  A7                 	db	low(0A7h)
  4298  007F89  67                 	db	low(067h)
  4299  007F8A  A5                 	db	low(0A5h)
  4300  007F8B  65                 	db	low(065h)
  4301  007F8C  64                 	db	low(064h)
  4302  007F8D  A4                 	db	low(0A4h)
  4303  007F8E  6C                 	db	low(06Ch)
  4304  007F8F  AC                 	db	low(0ACh)
  4305  007F90  AD                 	db	low(0ADh)
  4306  007F91  6D                 	db	low(06Dh)
  4307  007F92  AF                 	db	low(0AFh)
  4308  007F93  6F                 	db	low(06Fh)
  4309  007F94  6E                 	db	low(06Eh)
  4310  007F95  AE                 	db	low(0AEh)
  4311  007F96  AA                 	db	low(0AAh)
  4312  007F97  6A                 	db	low(06Ah)
  4313  007F98  6B                 	db	low(06Bh)
  4314  007F99  AB                 	db	low(0ABh)
  4315  007F9A  69                 	db	low(069h)
  4316  007F9B  A9                 	db	low(0A9h)
  4317  007F9C  A8                 	db	low(0A8h)
  4318  007F9D  68                 	db	low(068h)
  4319  007F9E  78                 	db	low(078h)
  4320  007F9F  B8                 	db	low(0B8h)
  4321  007FA0  B9                 	db	low(0B9h)
  4322  007FA1  79                 	db	low(079h)
  4323  007FA2  BB                 	db	low(0BBh)
  4324  007FA3  7B                 	db	low(07Bh)
  4325  007FA4  7A                 	db	low(07Ah)
  4326  007FA5  BA                 	db	low(0BAh)
  4327  007FA6  BE                 	db	low(0BEh)
  4328  007FA7  7E                 	db	low(07Eh)
  4329  007FA8  7F                 	db	low(07Fh)
  4330  007FA9  BF                 	db	low(0BFh)
  4331  007FAA  7D                 	db	low(07Dh)
  4332  007FAB  BD                 	db	low(0BDh)
  4333  007FAC  BC                 	db	low(0BCh)
  4334  007FAD  7C                 	db	low(07Ch)
  4335  007FAE  B4                 	db	low(0B4h)
  4336  007FAF  74                 	db	low(074h)
  4337  007FB0  75                 	db	low(075h)
  4338  007FB1  B5                 	db	low(0B5h)
  4339  007FB2  77                 	db	low(077h)
  4340  007FB3  B7                 	db	low(0B7h)
  4341  007FB4  B6                 	db	low(0B6h)
  4342  007FB5  76                 	db	low(076h)
  4343  007FB6  72                 	db	low(072h)
  4344  007FB7  B2                 	db	low(0B2h)
  4345  007FB8  B3                 	db	low(0B3h)
  4346  007FB9  73                 	db	low(073h)
  4347  007FBA  B1                 	db	low(0B1h)
  4348  007FBB  71                 	db	low(071h)
  4349  007FBC  70                 	db	low(070h)
  4350  007FBD  B0                 	db	low(0B0h)
  4351  007FBE  50                 	db	low(050h)
  4352  007FBF  90                 	db	low(090h)
  4353  007FC0  91                 	db	low(091h)
  4354  007FC1  51                 	db	low(051h)
  4355  007FC2  93                 	db	low(093h)
  4356  007FC3  53                 	db	low(053h)
  4357  007FC4  52                 	db	low(052h)
  4358  007FC5  92                 	db	low(092h)
  4359  007FC6  96                 	db	low(096h)
  4360  007FC7  56                 	db	low(056h)
  4361  007FC8  57                 	db	low(057h)
  4362  007FC9  97                 	db	low(097h)
  4363  007FCA  55                 	db	low(055h)
  4364  007FCB  95                 	db	low(095h)
  4365  007FCC  94                 	db	low(094h)
  4366  007FCD  54                 	db	low(054h)
  4367  007FCE  9C                 	db	low(09Ch)
  4368  007FCF  5C                 	db	low(05Ch)
  4369  007FD0  5D                 	db	low(05Dh)
  4370  007FD1  9D                 	db	low(09Dh)
  4371  007FD2  5F                 	db	low(05Fh)
  4372  007FD3  9F                 	db	low(09Fh)
  4373  007FD4  9E                 	db	low(09Eh)
  4374  007FD5  5E                 	db	low(05Eh)
  4375  007FD6  5A                 	db	low(05Ah)
  4376  007FD7  9A                 	db	low(09Ah)
  4377  007FD8  9B                 	db	low(09Bh)
  4378  007FD9  5B                 	db	low(05Bh)
  4379  007FDA  99                 	db	low(099h)
  4380  007FDB  59                 	db	low(059h)
  4381  007FDC  58                 	db	low(058h)
  4382  007FDD  98                 	db	low(098h)
  4383  007FDE  88                 	db	low(088h)
  4384  007FDF  48                 	db	low(048h)
  4385  007FE0  49                 	db	low(049h)
  4386  007FE1  89                 	db	low(089h)
  4387  007FE2  4B                 	db	low(04Bh)
  4388  007FE3  8B                 	db	low(08Bh)
  4389  007FE4  8A                 	db	low(08Ah)
  4390  007FE5  4A                 	db	low(04Ah)
  4391  007FE6  4E                 	db	low(04Eh)
  4392  007FE7  8E                 	db	low(08Eh)
  4393  007FE8  8F                 	db	low(08Fh)
  4394  007FE9  4F                 	db	low(04Fh)
  4395  007FEA  8D                 	db	low(08Dh)
  4396  007FEB  4D                 	db	low(04Dh)
  4397  007FEC  4C                 	db	low(04Ch)
  4398  007FED  8C                 	db	low(08Ch)
  4399  007FEE  44                 	db	low(044h)
  4400  007FEF  84                 	db	low(084h)
  4401  007FF0  85                 	db	low(085h)
  4402  007FF1  45                 	db	low(045h)
  4403  007FF2  87                 	db	low(087h)
  4404  007FF3  47                 	db	low(047h)
  4405  007FF4  46                 	db	low(046h)
  4406  007FF5  86                 	db	low(086h)
  4407  007FF6  82                 	db	low(082h)
  4408  007FF7  42                 	db	low(042h)
  4409  007FF8  43                 	db	low(043h)
  4410  007FF9  83                 	db	low(083h)
  4411  007FFA  41                 	db	low(041h)
  4412  007FFB  81                 	db	low(081h)
  4413  007FFC  80                 	db	low(080h)
  4414  007FFD  40                 	db	low(040h)
  4415                           	global	_aucCRCHi
  4416                           	global	_aucCRCLo
  4417                           	global	_modbus_reg
  4418                           	global	_modbus_reg
  4419  000000                     _modbus_reg  equ     53
  4420                           
  4421                           	DABS	1,53,200	;_modbus_reg
  4422                           	global	_rx_buf
  4423                           	global	_rx_buf
  4424  000000                     _rx_buf  equ     0
  4425                           
  4426                           	DABS	1,0,53	;_rx_buf
  4427                           	global	_tx_buf
  4428                           	global	_tx_buf
  4429  000000                     _tx_buf  equ     256
  4430                           
  4431                           	DABS	1,256,51	;_tx_buf
  4432                           	global	F3892
  4433  000000                     F3892  equ     308
  4434                           
  4435                           	DABS	1,308,2	;F3892
  4436                           	global	_count_1ms
  4437                           	global	_count_1ms
  4438  000000                     _count_1ms  equ     253
  4439                           
  4440                           	DABS	1,253,2	;_count_1ms
  4441                           	global	F3867
  4442  000000                     F3867  equ     307
  4443                           
  4444                           	DABS	1,307,1	;F3867
  4445                           	global	F3901
  4446  000000                     F3901  equ     311
  4447                           
  4448                           	DABS	1,311,1	;F3901
  4449                           	global	_count_2s_flg
  4450                           	global	_count_2s_flg
  4451  000000                     _count_2s_flg  equ     312
  4452                           
  4453                           	DABS	1,312,1	;_count_2s_flg
  4454                           	global	_have_speed
  4455                           	global	_have_speed
  4456  000000                     _have_speed  equ     310
  4457                           
  4458                           	DABS	1,310,1	;_have_speed
  4459                           	global	_rx_state
  4460                           	global	_rx_state
  4461  000000                     _rx_state  equ     255
  4462                           
  4463                           	DABS	1,255,1	;_rx_state
  4464                           	global	_TMR0
  4465  000000                     _TMR0	equ	0xFD6
  4466                           	global	_TMR1
  4467  000000                     _TMR1	equ	0xFCE
  4468                           	global	_TMR3
  4469  000000                     _TMR3	equ	0xFB2
  4470                           	global	_TMR5
  4471  000000                     _TMR5	equ	0xF4F
  4472                           	global	_ANSELA
  4473  000000                     _ANSELA	equ	0xF38
  4474                           	global	_ANSELB
  4475  000000                     _ANSELB	equ	0xF39
  4476                           	global	_ANSELC
  4477  000000                     _ANSELC	equ	0xF3A
  4478                           	global	_PORTAbits
  4479  000000                     _PORTAbits	equ	0xF80
  4480                           	global	_PORTC
  4481  000000                     _PORTC	equ	0xF82
  4482                           	global	_PORTCbits
  4483  000000                     _PORTCbits	equ	0xF82
  4484                           	global	_RC1REG
  4485  000000                     _RC1REG	equ	0xFAE
  4486                           	global	_SPBRG1
  4487  000000                     _SPBRG1	equ	0xFAF
  4488                           	global	_TRISC
  4489  000000                     _TRISC	equ	0xF94
  4490                           	global	_TX1REG
  4491  000000                     _TX1REG	equ	0xFAD
  4492                           	global	_BRGH1
  4493  000000                     _BRGH1	equ	0x7D62
  4494                           	global	_CREN1
  4495  000000                     _CREN1	equ	0x7D5C
  4496                           	global	_GIE
  4497  000000                     _GIE	equ	0x7F97
  4498                           	global	_INT0IE
  4499  000000                     _INT0IE	equ	0x7F94
  4500                           	global	_INT0IF
  4501  000000                     _INT0IF	equ	0x7F91
  4502                           	global	_INT1IE
  4503  000000                     _INT1IE	equ	0x7F83
  4504                           	global	_INT1IF
  4505  000000                     _INT1IF	equ	0x7F80
  4506                           	global	_INTEDG0
  4507  000000                     _INTEDG0	equ	0x7F8E
  4508                           	global	_INTEDG1
  4509  000000                     _INTEDG1	equ	0x7F8D
  4510                           	global	_PEIE
  4511  000000                     _PEIE	equ	0x7F96
  4512                           	global	_PSA
  4513  000000                     _PSA	equ	0x7EAB
  4514                           	global	_RB0
  4515  000000                     _RB0	equ	0x7C08
  4516                           	global	_RB1
  4517  000000                     _RB1	equ	0x7C09
  4518                           	global	_RC1IE
  4519  000000                     _RC1IE	equ	0x7CED
  4520                           	global	_RC1IF
  4521  000000                     _RC1IF	equ	0x7CF5
  4522                           	global	_SPEN1
  4523  000000                     _SPEN1	equ	0x7D5F
  4524                           	global	_SYNC1
  4525  000000                     _SYNC1	equ	0x7D64
  4526                           	global	_T08BIT
  4527  000000                     _T08BIT	equ	0x7EAE
  4528                           	global	_T0CS
  4529  000000                     _T0CS	equ	0x7EAD
  4530                           	global	_T0PS0
  4531  000000                     _T0PS0	equ	0x7EA8
  4532                           	global	_T0PS1
  4533  000000                     _T0PS1	equ	0x7EA9
  4534                           	global	_T0PS2
  4535  000000                     _T0PS2	equ	0x7EAA
  4536                           	global	_T1CKPS0
  4537  000000                     _T1CKPS0	equ	0x7E6C
  4538                           	global	_T1CKPS1
  4539  000000                     _T1CKPS1	equ	0x7E6D
  4540                           	global	_T3CKPS0
  4541  000000                     _T3CKPS0	equ	0x7D8C
  4542                           	global	_T3CKPS1
  4543  000000                     _T3CKPS1	equ	0x7D8D
  4544                           	global	_T5CKPS0
  4545  000000                     _T5CKPS0	equ	0x7A74
  4546                           	global	_T5CKPS1
  4547  000000                     _T5CKPS1	equ	0x7A75
  4548                           	global	_TMR0IE
  4549  000000                     _TMR0IE	equ	0x7F95
  4550                           	global	_TMR0IF
  4551  000000                     _TMR0IF	equ	0x7F92
  4552                           	global	_TMR0ON
  4553  000000                     _TMR0ON	equ	0x7EAF
  4554                           	global	_TMR1CS0
  4555  000000                     _TMR1CS0	equ	0x7E6E
  4556                           	global	_TMR1CS1
  4557  000000                     _TMR1CS1	equ	0x7E6F
  4558                           	global	_TMR1IE
  4559  000000                     _TMR1IE	equ	0x7CE8
  4560                           	global	_TMR1IF
  4561  000000                     _TMR1IF	equ	0x7CF0
  4562                           	global	_TMR1ON
  4563  000000                     _TMR1ON	equ	0x7E68
  4564                           	global	_TMR3CS0
  4565  000000                     _TMR3CS0	equ	0x7D8E
  4566                           	global	_TMR3CS1
  4567  000000                     _TMR3CS1	equ	0x7D8F
  4568                           	global	_TMR3IE
  4569  000000                     _TMR3IE	equ	0x7D01
  4570                           	global	_TMR3IF
  4571  000000                     _TMR3IF	equ	0x7D09
  4572                           	global	_TMR3ON
  4573  000000                     _TMR3ON	equ	0x7D88
  4574                           	global	_TMR5CS0
  4575  000000                     _TMR5CS0	equ	0x7A76
  4576                           	global	_TMR5CS1
  4577  000000                     _TMR5CS1	equ	0x7A77
  4578                           	global	_TMR5IE
  4579  000000                     _TMR5IE	equ	0x7BE9
  4580                           	global	_TMR5IF
  4581  000000                     _TMR5IF	equ	0x7BF1
  4582                           	global	_TMR5ON
  4583  000000                     _TMR5ON	equ	0x7A70
  4584                           	global	_TRISA5
  4585  000000                     _TRISA5	equ	0x7C95
  4586                           	global	_TRISB0
  4587  000000                     _TRISB0	equ	0x7C98
  4588                           	global	_TRISB1
  4589  000000                     _TRISB1	equ	0x7C99
  4590                           	global	_TX1IE
  4591  000000                     _TX1IE	equ	0x7CEC
  4592                           	global	_TX1IF
  4593  000000                     _TX1IF	equ	0x7CF4
  4594                           	global	_TXEN1
  4595  000000                     _TXEN1	equ	0x7D65
  4596  007FFE  00                 	db 0	; dummy byte at the end
  4597                           	psect	intsave_regs,class=BIGRAM,space=1
  4598                           	PSECT	param2,class=BANK2,space=1
  4599                           	GLOBAL	__Lparam2
  4600                           	FNCONF	param2,??,?
  4601                           	GLOBAL	__Labsbss0
  4602  000000                     __Labsbss0	EQU	0
  4603                           	GLOBAL	__Habsbss0
  4604  000000                     __Habsbss0	EQU	313
  4605                           	GLOBAL	__Ldata0
  4606  000000                     __Ldata0	EQU	313
  4607                           	GLOBAL	__Hdata0
  4608  000000                     __Hdata0	EQU	314
  4609                           GLOBAL	__Lparam, __Hparam
  4610                           GLOBAL	__Lparam2, __Hparam2
  4611  000000                     __Lparam	EQU	__Lparam2
  4612  000000                     __Hparam	EQU	__Hparam2


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Thu May 30 19:26:17 2013

                                 l1 0A20  
                                 l2 09E6  
                                 l3 0980  
                                 l4 0A06  
            __end_of_modbus_receive 06D2  
                               l380 0646  
                               l381 0652  
                               l390 02B8  
                               l382 0662  
                               l391 00EC  
                               l383 06D0  
                               l392 0204  
                               l377 06D0  
                               l385 06BE  
                               l394 01D8  
                               l386 0682  
                               l378 0662  
                               l395 096E  
                               l387 068A  
                               l379 0656  
                               l396 0914  
                               l388 0692  
                               l397 0968  
                               l389 0696  
                               l399 0952  
                               l751 0D62  
                               l760 0854  
                               l761 08AC  
                               l762 08A4  
                               l763 08AC  
                               l756 08AC  
                               l757 0836  
                               l782 0D86  
                               l775 0D78  
                               l759 0852  
                               l785 0CDE  
                               l778 0D48  
                               _GIE 007F97  
                               _RB0 007C08  
                               _RB1 007C09  
                               _PSA 007EAB  
                              F3901 000137  
                              F3867 000133  
                              F3892 000134  
                              F3893 000139  
          _write_single_holding_reg 08B4  
         read_holding_regs@data_crc 0205  
                              _T0CS 007EAD  
                              u1600 0890  
                              u1601 088C  
                              u1610 0204  
                              u1530 05D8  
                              u1611 0200  
                              u1531 05D4  
                              u1620 0968  
                              u1540 0616  
                              u1621 0964  
                              u1541 0612  
                              u1630 0A06  
                              u1550 0626  
                              u1631 0A02  
                              u1551 0622  
                              u1560 0636  
                              u1561 0632  
                              u1570 0672  
                              u1571 066E  
                              u1580 084C  
                              u1581 0848  
                              u1590 086C  
                              u1591 0868  
                              _PEIE 007F96  
                              _TMR0 000FD6  
                              _TMR1 000FCE  
                              _TMR3 000FB2  
                              _TMR5 000F4F  
                              _main 07DC  
                              fsr0h 000FEA  
                              fsr1h 000FE2  
                              indf0 000FEF  
                              fsr0l 000FE9  
                              fsr2h 000FDA  
                              indf1 000FE7  
                              fsr1l 000FE1  
                              fsr2l 000FD9  
                      _start_timer3 0D94  
                              pclat 000FFA  
                              prodh 000FF4  
                              prodl 000FF3  
                              start 0018  
                       _stop_timer3 0D88  
                   ?_modbus_receive 0201  
                   __end_of___aldiv 04A8  
                             ?_main 0200  
                             _BRGH1 007D62  
                             _CREN1 007D5C  
                             _RC1IE 007CED  
                             _RC1IF 007CF5  
                             _T0PS0 007EA8  
                             _T0PS1 007EA9  
                             _T0PS2 007EAA  
                             i2l360 04DC  
                             i2l361 0508  
                             i2l370 0BB4  
                             i2l362 0552  
                             i2l371 0BB4  
                             i2l363 059C  
                             i2l372 0BB0  
                             i2l356 05C6  
                             i2l364 05AC  
                             i2l373 0B9E  
                             i2l357 05C6  
                             i2l374 0B66  
                             i2l366 0ABE  
                             i2l375 0B7A  
                             i2l359 05B0  
                             i2l367 0ABE  
                             i2l376 0B9A  
                             i2l368 0ABE  
                             i2l369 0ABE  
                             i2l812 04A6  
                             i2l820 045E  
                             i2l821 03B8  
                             i2l813 030C  
                             i2l822 0440  
                             i2l814 0346  
                             i2l823 0492  
                             i2l815 045E  
                             i2l816 03A6  
                             i2l752 0C76  
                             i2l817 038C  
                             i2l753 0C76  
                             i2l818 03B8  
                             i2l770 07B0  
                             i2l754 0C76  
                             i2l771 0792  
                             i2l772 07B4  
                             i2l780 0C18  
                             i2l764 0B0C  
                             i2l773 0D9E  
                             i2l765 07DA  
                             i2l781 0C18  
                             i2l774 0D92  
                             i2l766 07DA  
                             i2l767 07C8  
                             i2l783 0CAC  
                             i2l768 06E6  
                             i2l784 0CAC  
                             i2l776 0D2A  
                             i2l769 0706  
                             i2l777 0D2A  
                             i2l786 0D06  
                             i2l779 0C18  
                             i2l787 0D06  
                             i2u710 0C86  
                             i2u711 0C82  
                             i2u720 0C94  
                             i2u721 0C90  
                             i2u730 0CEE  
                             i2u731 0CEA  
                             i2u740 0CFC  
                             i2u741 0CF8  
                             _SPEN1 007D5F  
                             _TX1IE 007CEC  
                             _TX1IF 007CF4  
                             _PORTC 000F82  
                             _TRISC 000F94  
                             _TXEN1 007D65  
                             _SYNC1 007D64  
                      ?_init_timer0 0201  
                      ?_init_timer3 0201  
                      ?_init_timer5 0201  
                   __end_of_pv1_isr 0D2C  
                   __end_of_rec_isr 05C8  
                             tablat 000FF5  
                             status 000FD8  
                   rec_isr@rec_data 0227  
                      __end_of_main 08B4  
                            ??_main 0200  
                     __activetblptr 000002  
               modbus_crc16@ucCRCHi 0214  
               modbus_crc16@ucCRCLo 0215  
                            _T08BIT 007EAE  
                            _ANSELA 000F38  
                            _ANSELB 000F39  
                            _ANSELC 000F3A  
                            _RC1REG 000FAE  
                            _INT0IE 007F94  
                            _INT0IF 007F91  
                            _INT1IE 007F83  
                            _INT1IF 007F80  
                            i2u1500 0A3E  
                            i2u1501 0A3A  
                            i2u1510 0A52  
                            i2u1511 0A4E  
                            i2u1520 0A90  
                            i2u1521 0A8C  
                            i2u1460 04C6  
                            i2u1700 0D24  
                            i2u1461 04C2  
                            i2u1701 0D20  
                            i2u1710 02DC  
                            i2u1470 04D4  
                            i2u1711 02D8  
                            i2u1471 04D0  
                            i2u1720 031E  
                            i2u1640 0C28  
                            i2u1480 0562  
                            i2u1800 0BD2  
                            i2u1721 031A  
                            i2u1641 0C24  
                            i2u1481 055E  
                            i2u1801 0BCE  
                            i2u1730 0378  
                            i2u1650 0C36  
                            i2u1490 0A30  
                            i2u1810 0BF8  
                            i2u1731 0374  
                            i2u1651 0C32  
                            i2u1491 0A2C  
                            i2u1811 0BF4  
                            i2u1740 03B8  
                            i2u1660 0C64  
                            i2u1741 03B4  
                            i2u1661 0C60  
                            i2u1750 040A  
                            i2u1670 0726  
                            i2u1751 0406  
                            i2u1671 0722  
                            i2u1760 0472  
                            i2u1680 0752  
                            i2u1761 046E  
                            i2u1681 074E  
                            i2u1770 0B54  
                            i2u1690 0D16  
                            i2u1771 0B50  
                            i2u1691 0D12  
                            i2u1780 0B62  
                            i2u1781 0B5E  
                            i2u1790 0BC4  
                            i2u1791 0BC0  
                            _TMR0IE 007F95  
                            _SPBRG1 000FAF  
                            _TMR0IF 007F92  
                            _TMR1IE 007CE8  
                            _TMR1IF 007CF0  
                            _TMR3IE 007D01  
                            _TMR3IF 007D09  
                            _TMR5IE 007BE9  
                            _TMR5IF 007BF1  
                            _TMR0ON 007EAF  
                            _TMR1ON 007E68  
                            _TMR3ON 007D88  
                            _TMR5ON 007A70  
                            _TX1REG 000FAD  
                            _TRISB0 007C98  
                            _TRISB1 007C99  
                            _TRISA5 007C95  
                            __Ldata 000139  
                      ?_timer35_isr 0227  
                         ??___aldiv 0230  
                  __end_of_init_pv1 0D7A  
                            _my_isr 0AC0  
                            _rx_buf 000000  
                            _tx_buf 000100  
                            _tx_isr 0A22  
                         ??_pv1_isr 0227  
                         ??_rec_isr 0227  
                      __mediumconst 7DFE  
                            tblptrh 000FF7  
                            tblptrl 000FF6  
                            tblptru 000FF8  
                        __accesstop 0060  
                     ?_modbus_crc16 0210  
        ??_write_single_holding_reg 0202  
              read_holding_regs@num 0207  
                 modbus_crc16@usLen 0212  
                    ??_modbus_crc16 0214  
                      ?_stop_timer3 0228  
                  ??_modbus_receive 0201  
                         l600000273 0636  
                           ?_my_isr 0219  
                           ?_tx_isr 0227  
                           _T1CKPS0 007E6C  
                           _T1CKPS1 007E6D  
                           _T3CKPS0 007D8C  
                           _T3CKPS1 007D8D  
                           _T5CKPS0 007A74  
                           _T5CKPS1 007A75  
                           _INTEDG0 007F8E  
                           _INTEDG1 007F8D  
                        _have_speed 000136  
                           _TMR1CS0 007E6E  
                           _TMR1CS1 007E6F  
                           _TMR3CS0 007D8E  
                           _TMR3CS1 007D8F  
                           _TMR5CS0 007A76  
                           _TMR5CS1 007A77  
              modbus_crc16@pucFrame 0210  
                         ?_init_pv1 0201  
                           __Hdata0 00013A  
                           __Ldata0 000139  
                           __Hparam 0237  
                           __Lparam 0200  
                           ___aldiv 02BA  
                 __end_of_get_speed 07DC  
                        _init_pg_in 0D7A  
                           __ramtop 0600  
                           _pv1_isr 0D08  
                           _rec_isr 04A8  
                 __end_of_pg_in_isr 0CAE  
                  ___aldiv@dividend 0228  
                        _modbus_reg 000035  
                     __Lmediumconst 7DFE  
                        ??_init_pv1 0201  
                           int_func 0008  
                  ___aldiv@quotient 0232  
                           postdec0 000FED  
                           postdec1 000FE5  
                        _timer0_isr 0BB6  
                        _timer3_isr 0C1A  
                           postinc0 000FEE  
                           postinc1 000FE6  
                        _timer5_isr 0CE0  
  __end_of_write_single_holding_reg 0970  
                 _read_holding_regs 0060  
                         _PORTAbits 000F80  
                         _PORTCbits 000F82  
                ?_read_holding_regs 0202  
              __end_of_modbus_crc16 0A22  
               ??_read_holding_regs 0202  
       read_holding_regs@start_addr 0203  
write_single_holding_reg@start_addr 0203  
         __end_of_read_holding_regs 02BA  
                       ?_init_pg_in 0201  
                      _count_2s_flg 000138  
                    __end_of_my_isr 0B46  
                    __end_of_tx_isr 0AC0  
                         __Habsbss0 000139  
                read_holding_regs@i 0202  
                         __Labsbss0 000000  
                modbus_crc16@iIndex 0216  
                     ?_start_timer3 0228  
                       ?_timer0_isr 0227  
                       ?_timer3_isr 0227  
                       ?_timer5_isr 0227  
                          ??_my_isr 0219  
                          ??_tx_isr 0227  
                     ??_init_timer0 0201  
                     ??_init_timer3 0201  
                     ??_init_timer5 0201  
                         __config10 00FFFF  
                         __config11 00FFFF  
         ?_write_single_holding_reg 0202  
                    ??_start_timer3 0228  
                          ?___aldiv 0228  
                         _get_speed 06D2  
                          ?_pv1_isr 0227  
                       __smallconst 0600  
                         _count_1ms 0000FD  
                          ?_rec_isr 0227  
                         _pg_in_isr 0C78  
               __end_of_init_timer0 0D4A  
               __end_of_init_timer3 0D64  
               __end_of_init_timer5 0CE0  
                   ___aldiv@divisor 022C  
                   ___aldiv@counter 0230  
                     ??_timer35_isr 0227  
                      _modbus_crc16 0970  
                        ?_get_speed 0227  
                        ?_pg_in_isr 0227  
                          __Hparam2 0237  
                          __Lparam2 0200  
                      __Lsmallconst 0600  
                      ??_init_pg_in 0201  
               __end_of_timer35_isr 0BB6  
              __end_of_start_timer3 0DA0  
                          __config1 00E9FF  
                          __config2 00FFFF  
                          __config3 00FFFF  
                          __config4 00FFFF  
                          __config5 00FFFF  
                          __config6 00FFFF  
                          __config7 00FFFF  
                          __config8 00FFFF  
                          __config9 00FFFF  
                          _aucCRCHi 7DFE  
                          _aucCRCLo 7EFE  
                       _init_timer0 0D2C  
                       _init_timer3 0D4A  
                       _init_timer5 0CAE  
                          _init_pv1 0D64  
                __end_of_init_pg_in 0D88  
                     ??_stop_timer3 0228  
                      ??_timer0_isr 0227  
                      ??_timer3_isr 0227  
                      ??_timer5_isr 0227  
                          _rx_state 0000FF  
                       ??_get_speed 0227  
                       ??_pg_in_isr 0227  
                          intlevel2 0DA0  
                __end_of_timer0_isr 0C1A  
                __end_of_timer3_isr 0C78  
                __end_of_timer5_isr 0D08  
                       _timer35_isr 0B46  
               __end_of_stop_timer3 0D94  
                    _modbus_receive 05C8  
                      ___aldiv@sign 0231  
         write_single_holding_reg@i 0202  
