

HI-TECH Software LITE Macro Assembler (PIC18) V9.66 build 8870 
                                                       Thu May 30 16:55:11 2013

HI-TECH Software Omniscient Code Generator build 8870
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 8870"
     2                           
     3                           	processor	18F25K22
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           # 19 "../main.c"
   102                           	global __config1 ;#
   103                           # 19 "../main.c"
   104  000000                     	__config1 equ 0xF9FF & 0xEFFF & 0xFFFF & 0xFFFF
                                  & 0xFFFF ;#
   105                           # 21 "../main.c"
   106                           	global __config2 ;#
   107                           # 21 "../main.c"
   108  000000                     	__config2 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   109                           # 23 "../main.c"
   110                           	global __config3 ;#
   111                           # 23 "../main.c"
   112  000000                     	__config3 equ 0xFFFF & 0xFFFF ;#
   113                           # 25 "../main.c"
   114                           	global __config4 ;#
   115                           # 25 "../main.c"
   116  000000                     	__config4 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  & 0xFFFF & 0xFFFF & 0xFFFF ;#
   117                           # 27 "../main.c"
   118                           	global __config5 ;#
   119                           # 27 "../main.c"
   120  000000                     	__config5 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   121                           # 29 "../main.c"
   122                           	global __config6 ;#
   123                           # 29 "../main.c"
   124  000000                     	__config6 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  ;#
   125                           # 31 "../main.c"
   126                           	global __config7 ;#
   127                           # 31 "../main.c"
   128  000000                     	__config7 equ 0xFFFF & 0xFFFF ;#
   129                           # 33 "../main.c"
   130                           	global __config8 ;#
   131                           # 33 "../main.c"
   132  000000                     	__config8 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  ;#
   133                           # 35 "../main.c"
   134                           	global __config9 ;#
   135                           # 35 "../main.c"
   136  000000                     	__config9 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   137                           # 37 "../main.c"
   138                           	global __config10 ;#
   139                           # 37 "../main.c"
   140  000000                     	__config10 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFF
                                 F ;#
   141                           # 39 "../main.c"
   142                           	global __config11 ;#
   143                           # 39 "../main.c"
   144  000000                     	__config11 equ 0xFFFF ;#
   145                           	GLOBAL	__activetblptr
   146  000000                     __activetblptr	EQU	2
   147                           	GLOBAL	__smallconst,__Lsmallconst
   148  000000                     __smallconst	EQU	__Lsmallconst
   149                           	GLOBAL	__mediumconst,__Lmediumconst
   150  000000                     __mediumconst	EQU	__Lmediumconst
   151                           	GLOBAL	__Ldata
   152  000000                     __Ldata	EQU	113
   153  000000                     read_holding_regs@i	equ	??_read_holding_regs+0
   154                           	global	read_holding_regs@i
   155  000000                     read_holding_regs@start_addr	equ	??_read_holding
                                 _regs+1
   156                           	global	read_holding_regs@start_addr
   157  000000                     read_holding_regs@data_crc	equ	??_read_holding_r
                                 egs+3
   158                           	global	read_holding_regs@data_crc
   159  000000                     read_holding_regs@num	equ	??_read_holding_regs+5
   160                           	global	read_holding_regs@num
   161  000000                     write_single_holding_reg@i	equ	??_write_single_h
                                 olding_reg+0
   162                           	global	write_single_holding_reg@i
   163  000000                     write_single_holding_reg@start_addr	equ	??_write
                                 _single_holding_reg+1
   164                           	global	write_single_holding_reg@start_addr
   165  000000                     modbus_crc16@ucCRCHi	equ	??_modbus_crc16+0
   166                           	global	modbus_crc16@ucCRCHi
   167  000000                     modbus_crc16@ucCRCLo	equ	??_modbus_crc16+1
   168                           	global	modbus_crc16@ucCRCLo
   169  000000                     modbus_crc16@iIndex	equ	??_modbus_crc16+2
   170                           	global	modbus_crc16@iIndex
   171  000000                     modbus_crc16@pucFrame	equ	?_modbus_crc16+0
   172                           	global	modbus_crc16@pucFrame
   173  000000                     modbus_crc16@usLen	equ	?_modbus_crc16+2
   174                           	global	modbus_crc16@usLen
   175  000000                     rec_isr@rec_data	equ	??_rec_isr+0
   176                           	global	rec_isr@rec_data
   177  000000                     ___aldiv@counter	equ	??___aldiv+0
   178                           	global	___aldiv@counter
   179  000000                     ___aldiv@sign	equ	??___aldiv+1
   180                           	global	___aldiv@sign
   181  000000                     ___aldiv@quotient	equ	??___aldiv+2
   182                           	global	___aldiv@quotient
   183  000000                     ___aldiv@dividend	equ	?___aldiv+0
   184                           	global	___aldiv@dividend
   185  000000                     ___aldiv@divisor	equ	?___aldiv+4
   186                           	global	___aldiv@divisor
   187                           ;Data sizes: Strings 0, constant 512, data 1, bs
                                 s 0, persistent 0 stack 55
   188                           	global	_main
   189                           	global	??_main
   190                           	global	?_main
   191                           
   192                           ; *************** function _main ***************
                                 **
   193                           ; Defined at:
   194                           ;		line 93 in file "../main.c"
   195                           ; Parameters:
   196                           ;		None
   197                           ; Auto variables:
   198                           ;		None
   199                           ; Return value:
   200                           ;		type: void 
   201                           ;		size: 0
   202                           ; Registers used:
   203                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   204                           ; Tracked objects:
   205                           ;		On entry : 0/0
   206                           ;		On exit  : 0/0
   207                           ;		Unchanged: 0/0
   208                           ; Data sizes:
   209                           ;		Autos:    0
   210                           ;		Params:   0
   211                           ;		Temp:     1
   212                           ;		Total:    1
   213                           ; This function calls:
   214                           ;		_init_timer3
   215                           ;		_init_pv1
   216                           ;		_modbus_receive
   217                           ; This function is called by:
   218                           ;		Startup code after reset
   219                           ; This function uses a non-reentrant model
   220                           ; 
   221                                   psect   text0,class=CODE,space=0,reloc=2
   222                           
   223                           	opt lm
   224                           	file	"../main.c"
   225                           	line	93
   226  000000                     	__size_of_main	equ	__end_of_main-_main
   227                                   psect   text0
   228                           ;main.c: 92: void main(void)
   229                           ;main.c: 93: {
   230                           	
   231  0008A0                     _main:		; BSR set to: ?
   232                           
   233                           	opt stack 27
   234                           	line	95
   235                           ;main.c: 95: ANSELC = 0;
   236  0008A0  0E00               	movlw	low(0)
   237  0008A2  010F               	movlb	15	; () banked
   238  0008A4  010F               	movlb	15	; () banked
   239  0008A6  6F3A               	movwf	((3898))&0ffh	;volatile
   240                           	line	96
   241                           ;main.c: 96: TRISC = 0x80;
   242  0008A8  0E80               	movlw	low(080h)
   243  0008AA  6E94               	movwf	((c:3988)),c	;volatile
   244                           	line	97
   245                           ;main.c: 97: PORTC = 0xc0;
   246  0008AC  0EC0               	movlw	low(0C0h)
   247  0008AE  6E82               	movwf	((c:3970)),c	;volatile
   248                           	line	100
   249                           ;main.c: 100: ANSELA = 0;
   250  0008B0  0E00               	movlw	low(0)
   251  0008B2  010F               	movlb	15	; () banked
   252  0008B4  010F               	movlb	15	; () banked
   253  0008B6  6F38               	movwf	((3896))&0ffh	;volatile
   254                           	line	101
   255                           ;main.c: 101: TRISA5 =0;
   256  0008B8  9A92               	bcf	c:(31893/8),(31893)&7	;volatile
   257                           	line	103
   258                           ;main.c: 103: TMR1ON = 0; TMR1CS0 = 0; TMR1CS1 =
                                  0; T1CKPS0 = 0; T1CKPS1 = 0; TMR1 = 65535-40320
                                 ; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
   259  0008BA  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
   260  0008BC  9CCD               	bcf	c:(32366/8),(32366)&7	;volatile
   261  0008BE  9ECD               	bcf	c:(32367/8),(32367)&7	;volatile
   262  0008C0  98CD               	bcf	c:(32364/8),(32364)&7	;volatile
   263  0008C2  9ACD               	bcf	c:(32365/8),(32365)&7	;volatile
   264  0008C4  0E7F               	movlw	low(0627Fh)
   265  0008C6  6ECE               	movwf	((c:4046)),c	;volatile
   266  0008C8  0E62               	movlw	high(0627Fh)
   267  0008CA  6ECF               	movwf	((c:4046+1)),c	;volatile
   268  0008CC  909E               	bcf	c:(31984/8),(31984)&7	;volatile
   269  0008CE  809D               	bsf	c:(31976/8),(31976)&7	;volatile
   270  0008D0  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
   271                           	line	104
   272                           ;main.c: 104: SPEN1 = 1; SYNC1 = 0; SPBRG1 = 110
                                 592/(96*16)-1; BRGH1 = 0; CREN1 = 1; TXEN1 = 1; 
                                 RC1IE = 1;
   273  0008D2  8EAB               	bsf	c:(32095/8),(32095)&7	;volatile
   274  0008D4  98AC               	bcf	c:(32100/8),(32100)&7	;volatile
   275  0008D6  0E47               	movlw	low(047h)
   276  0008D8  6EAF               	movwf	((c:4015)),c	;volatile
   277  0008DA  94AC               	bcf	c:(32098/8),(32098)&7	;volatile
   278  0008DC  88AB               	bsf	c:(32092/8),(32092)&7	;volatile
   279  0008DE  8AAC               	bsf	c:(32101/8),(32101)&7	;volatile
   280  0008E0  8A9D               	bsf	c:(31981/8),(31981)&7	;volatile
   281                           	line	105
   282                           ;main.c: 105: init_timer3();
   283  0008E2  EC39  F006         	call	_init_timer3	;wreg free
   284                           	line	106
   285                           ;main.c: 106: init_pv1();
   286  0008E6  EC46  F006         	call	_init_pv1	;wreg free
   287                           	line	111
   288                           ;main.c: 111: PEIE = 1;
   289  0008EA  8CF2               	bsf	c:(32662/8),(32662)&7	;volatile
   290                           	line	112
   291                           ;main.c: 112: GIE = 1;
   292  0008EC  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
   293                           	line	114
   294                           ;main.c: 114: while(1)
   295                           	
   296  0008EE                     l757:		; BSR set to: ?
   297                           
   298                           	line	116
   299                           ;main.c: 115: {
   300                           ;main.c: 116: modbus_receive();
   301  0008EE  EC6D  F003         	call	_modbus_receive	;wreg free
   302                           	line	118
   303                           ;main.c: 118: if(count_2s_flg)
   304  0008F2  0100               	movlb	0	; () banked
   305  0008F4  0100               	movlb	0	; () banked
   306  0008F6  5170               	movf	((112))&0ffh,w
   307  0008F8  B4D8               	btfsc	status,2
   308  0008FA  EF81  F004         	goto	u1481
   309  0008FE  EF83  F004         	goto	u1480
   310  000902                     u1481:
   311  000902  EFA6  F004         	goto	l756
   312  000906                     u1480:
   313                           	line	120
   314                           ;main.c: 119: {
   315                           ;main.c: 120: count_2s_flg = 0;
   316  000906  0102               	movlb	2	; () banked
   317  000908  6F00               	movwf	(??_main+0+0)&0ffh
   318  00090A  0E00               	movlw	low(0)
   319  00090C  0100               	movlb	0	; () banked
   320  00090E  0100               	movlb	0	; () banked
   321  000910  6F70               	movwf	((112))&0ffh
   322  000912  0102               	movlb	2	; () banked
   323  000914  5100               	movf	(??_main+0+0)&0ffh,w
   324                           	line	122
   325                           ;main.c: 122: if(have_speed)
   326  000916  0100               	movlb	0	; () banked
   327  000918  0100               	movlb	0	; () banked
   328  00091A  516E               	movf	((110))&0ffh,w
   329  00091C  B4D8               	btfsc	status,2
   330  00091E  EF93  F004         	goto	u1491
   331  000922  EF95  F004         	goto	u1490
   332  000926                     u1491:
   333  000926  EF9F  F004         	goto	l760
   334  00092A                     u1490:
   335                           	line	124
   336                           ;main.c: 123: {
   337                           ;main.c: 124: have_speed = 0;
   338  00092A  0102               	movlb	2	; () banked
   339  00092C  6F00               	movwf	(??_main+0+0)&0ffh
   340  00092E  0E00               	movlw	low(0)
   341+ 000930  0100               	movlb	0	; () banked
   342  000932  0100               	movlb	0	; () banked
   343  000934  6F6E               	movwf	((110))&0ffh
   344  000936  0102               	movlb	2	; () banked
   345  000938  5100               	movf	(??_main+0+0)&0ffh,w
   346                           	line	125
   347                           ;main.c: 125: }
   348  00093A  EFA6  F004         	goto	l756
   349                           	line	126
   350                           	
   351  00093E                     l760:		; BSR set to: ?
   352                           
   353                           	line	128
   354                           ;main.c: 126: else
   355                           ;main.c: 127: {
   356                           ;main.c: 128: modbus_reg[0] = 10;
   357  00093E  0E0A               	movlw	low(0Ah)
   358  000940  0101               	movlb	1	; () banked
   359  000942  0101               	movlb	1	; () banked
   360  000944  6F00               	movwf	((256))&0ffh
   361  000946  0E00               	movlw	high(0Ah)
   362  000948  0101               	movlb	1	; () banked
   363  00094A  6F01               	movwf	((256+1))&0ffh
   364                           	line	129
   365                           	
   366  00094C                     l761:		; BSR set to: ?
   367                           
   368                           	line	130
   369                           	
   370  00094C                     l759:		; BSR set to: ?
   371                           
   372                           	line	131
   373                           	
   374  00094C                     l756:		; BSR set to: ?
   375                           
   376                           	line	114
   377  00094C  EF77  F004         	goto	l757
   378                           	global	start
   379  000950  EF0C  F000         	goto	start
   380                           	opt stack 0
   381                           GLOBAL __end_of_main
   382  000954                     	__end_of_main:
   383                           	FNSIZE	_main,1,0
   384                           ; =============== function _main ends ==========
                                 ==
   385                           
   386                                   psect   text1,class=CODE,space=0,reloc=2
   387                           	line	132
   388                           
   389                           	opt lm
   390                           	signat	_main,88
   391                           	global	_modbus_receive
   392                           	global	??_modbus_receive
   393                           	global	?_modbus_receive
   394                           
   395                           ; *************** function _modbus_receive *****
                                 ************
   396                           ; Defined at:
   397                           ;		line 113 in file "../modbus_rtu.c"
   398                           ; Parameters:
   399                           ;		None
   400                           ; Auto variables:
   401                           ;		None
   402                           ; Return value:
   403                           ;		type: void 
   404                           ;		size: 0
   405                           ; Registers used:
   406                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   407                           ; Tracked objects:
   408                           ;		On entry : 0/0
   409                           ;		On exit  : 0/0
   410                           ;		Unchanged: 0/0
   411                           ; Data sizes:
   412                           ;		Autos:    0
   413                           ;		Params:   0
   414                           ;		Temp:     1
   415                           ;		Total:    1
   416                           ; This function calls:
   417                           ;		_modbus_crc16
   418                           ;		_read_holding_regs
   419                           ;		_write_single_holding_reg
   420                           ; This function is called by:
   421                           ;		_main
   422                           ; This function uses a non-reentrant model
   423                           ; 
   424                           	file	"../modbus_rtu.c"
   425                           	line	113
   426  000000                     	__size_of_modbus_receive	equ	__end_of_modbus_re
                                 ceive-_modbus_receive
   427                           ;modbus_rtu.c: 112: void modbus_receive(void)
   428                           ;modbus_rtu.c: 113: {
   429                           	
   430  0006DA                     _modbus_receive:		; BSR set to: ?
   431                           
   432                           	opt stack 26
   433                           	line	114
   434                           ;modbus_rtu.c: 114: if(rx_buf.frame_ok==1)
   435  0006DA  0400               	decf	((c:0)),c,w
   436                           
   437  0006DC  A4D8               	btfss	status,2
   438  0006DE  EF73  F003         	goto	u1431
   439  0006E2  EF75  F003         	goto	u1430
   440  0006E6                     u1431:
   441  0006E6  EFBA  F003         	goto	l378
   442  0006EA                     u1430:
   443                           	line	116
   444                           ;modbus_rtu.c: 115: {
   445                           ;modbus_rtu.c: 116: rx_buf.frame_ok = 0;
   446  0006EA  0102               	movlb	2	; () banked
   447  0006EC  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   448  0006EE  0E00               	movlw	low(0)
   449  0006F0  6E00               	movwf	((c:0)),c
   450  0006F2  0102               	movlb	2	; () banked
   451  0006F4  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   452                           	line	118
   453                           ;modbus_rtu.c: 118: if(modbus_crc16(rx_buf.data_
                                 buf,rx_buf.rec_count)==0)
   454  0006F6  0102               	movlb	2	; () banked
   455  0006F8  C002 F212          	movff	0+((c:0)+02h),0+(?_modbus_crc16+02h)
   456  0006FC  0102               	movlb	2	; () banked
   457  0006FE  0102               	movlb	2	; () banked
   458  000700  6B13               	clrf	(1+(?_modbus_crc16+02h))&0ffh
   459  000702  0E03               	movlw	low((c:0)+03h)
   460  000704  0102               	movlb	2	; () banked
   461  000706  0102               	movlb	2	; () banked
   462  000708  6F10               	movwf	((?_modbus_crc16))&0ffh
   463  00070A  0E00               	movlw	high((c:0)+03h)
   464  00070C  0102               	movlb	2	; () banked
   465  00070E  6F11               	movwf	((?_modbus_crc16+1))&0ffh
   466  000710  ECAA  F004         	call	_modbus_crc16	;wreg free
   467  000714  0102               	movlb	2	; () banked
   468  000716  5111               	movf	(1+?_modbus_crc16)&0ffh,w
   469  000718  1110               	iorwf (0+?_modbus_crc16)&0ffh,w
   470                           
   471  00071A  A4D8               	btfss	status,2
   472  00071C  EF92  F003         	goto	u1441
   473  000720  EF94  F003         	goto	u1440
   474  000724                     u1441:
   475  000724  EFB4  F003         	goto	l379
   476  000728                     u1440:
   477                           	line	120
   478                           ;modbus_rtu.c: 119: {
   479                           ;modbus_rtu.c: 120: if((1 ==rx_buf.data_buf[0])|
                                 |(255==rx_buf.data_buf[0]))
   480  000728  0403               	decf	(0+((c:0)+03h)),c,w
   481                           
   482  00072A  B4D8               	btfsc	status,2
   483  00072C  EF9A  F003         	goto	u1451
   484  000730  EF9C  F003         	goto	u1450
   485  000734                     u1451:
   486  000734  EFA4  F003         	goto	l600000267
   487  000738                     u1450:
   488  000738  2803               	incf	(0+((c:0)+03h)),c,w
   489                           
   490  00073A  A4D8               	btfss	status,2
   491  00073C  EFA2  F003         	goto	u1461
   492  000740  EFA4  F003         	goto	u1460
   493  000744                     u1461:
   494  000744  EFAC  F003         	goto	l380
   495  000748                     u1460:
   496                           	
   497  000748                     l600000267:		; BSR set to: ?
   498                           
   499                           	line	122
   500                           ;modbus_rtu.c: 121: {
   501                           ;modbus_rtu.c: 122: rx_buf.data_valid = 1;
   502  000748  0102               	movlb	2	; () banked
   503  00074A  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   504  00074C  0E01               	movlw	low(01h)
   505  00074E  6E01               	movwf	(0+((c:0)+01h)),c
   506  000750  0102               	movlb	2	; () banked
   507  000752  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   508                           	line	123
   509                           ;modbus_rtu.c: 123: }
   510  000754  EFB2  F003         	goto	l381
   511                           	line	124
   512                           	
   513  000758                     l380:		; BSR set to: ?
   514                           
   515                           	line	126
   516                           ;modbus_rtu.c: 124: else
   517                           ;modbus_rtu.c: 125: {
   518                           ;modbus_rtu.c: 126: rx_buf.rec_count = 0;
   519  000758  0102               	movlb	2	; () banked
   520  00075A  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   521  00075C  0E00               	movlw	low(0)
   522  00075E  6E02               	movwf	(0+((c:0)+02h)),c
   523  000760  0102               	movlb	2	; () banked
   524  000762  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   525                           	line	127
   526                           	
   527  000764                     l381:		; BSR set to: ?
   528                           
   529                           	line	128
   530                           ;modbus_rtu.c: 127: }
   531                           ;modbus_rtu.c: 128: }
   532  000764  EFBA  F003         	goto	l378
   533                           	line	129
   534                           	
   535  000768                     l379:		; BSR set to: ?
   536                           
   537                           	line	131
   538                           ;modbus_rtu.c: 129: else
   539                           ;modbus_rtu.c: 130: {
   540                           ;modbus_rtu.c: 131: rx_buf.rec_count = 0;
   541  000768  0102               	movlb	2	; () banked
   542  00076A  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   543  00076C  0E00               	movlw	low(0)
   544  00076E  6E02               	movwf	(0+((c:0)+02h)),c
   545  000770  0102               	movlb	2	; () banked
   546  000772  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   547                           	line	132
   548                           	
   549  000774                     l382:		; BSR set to: ?
   550                           
   551                           	line	133
   552                           	
   553  000774                     l378:		; BSR set to: ?
   554                           
   555                           	line	135
   556                           ;modbus_rtu.c: 132: }
   557                           ;modbus_rtu.c: 133: }
   558                           ;modbus_rtu.c: 135: if(rx_buf.data_valid)
   559  000774  5001               	movf	(0+((c:0)+01h)),c,w
   560  000776  B4D8               	btfsc	status,2
   561  000778  EFC0  F003         	goto	u1471
   562  00077C  EFC2  F003         	goto	u1470
   563  000780                     u1471:
   564  000780  EFF1  F003         	goto	l383
   565  000784                     u1470:
   566                           	line	137
   567                           ;modbus_rtu.c: 136: {
   568                           ;modbus_rtu.c: 137: rx_buf.data_valid = 0;
   569  000784  0102               	movlb	2	; () banked
   570  000786  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   571  000788  0E00               	movlw	low(0)
   572  00078A  6E01               	movwf	(0+((c:0)+01h)),c
   573  00078C  0102               	movlb	2	; () banked
   574  00078E  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   575                           	line	139
   576                           ;modbus_rtu.c: 139: switch(rx_buf.data_buf[1])
   577  000790  EFE8  F003         	goto	l385
   578                           	line	141
   579                           ;modbus_rtu.c: 140: {
   580                           ;modbus_rtu.c: 141: case 0x03:
   581                           	
   582  000794                     l386:		; BSR set to: ?
   583                           
   584                           	line	142
   585                           ;modbus_rtu.c: 142: read_holding_regs();
   586  000794  EC36  F000         	call	_read_holding_regs	;wreg free
   587                           	line	143
   588                           ;modbus_rtu.c: 143: break;
   589  000798  EFF1  F003         	goto	l383
   590                           	line	144
   591                           ;modbus_rtu.c: 144: case 0x06:
   592                           	
   593  00079C                     l387:		; BSR set to: ?
   594                           
   595                           	line	145
   596                           ;modbus_rtu.c: 145: write_single_holding_reg();
   597  00079C  ECF2  F003         	call	_write_single_holding_reg	;wreg free
   598                           	line	146
   599                           ;modbus_rtu.c: 146: break;
   600  0007A0  EFF1  F003         	goto	l383
   601                           	line	147
   602                           ;modbus_rtu.c: 147: case 0x16:
   603                           	
   604  0007A4                     l388:		; BSR set to: ?
   605                           
   606                           	line	149
   607                           ;modbus_rtu.c: 149: break;
   608  0007A4  EFF1  F003         	goto	l383
   609                           	line	150
   610                           ;modbus_rtu.c: 150: default:
   611                           	
   612  0007A8                     l389:		; BSR set to: ?
   613                           
   614                           	line	151
   615                           ;modbus_rtu.c: 151: rx_buf.data_valid = 0;
   616  0007A8  0102               	movlb	2	; () banked
   617  0007AA  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   618  0007AC  0E00               	movlw	low(0)
   619  0007AE  6E01               	movwf	(0+((c:0)+01h)),c
   620  0007B0  0102               	movlb	2	; () banked
   621  0007B2  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   622                           	line	152
   623                           ;modbus_rtu.c: 152: rx_buf.rec_count = 0;
   624  0007B4  0102               	movlb	2	; () banked
   625  0007B6  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   626  0007B8  0E00               	movlw	low(0)
   627  0007BA  6E02               	movwf	(0+((c:0)+02h)),c
   628  0007BC  0102               	movlb	2	; () banked
   629  0007BE  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   630                           	line	153
   631                           ;modbus_rtu.c: 153: rx_buf.frame_ok = 0;
   632  0007C0  0102               	movlb	2	; () banked
   633  0007C2  6F01               	movwf	(??_modbus_receive+0+0)&0ffh
   634  0007C4  0E00               	movlw	low(0)
   635  0007C6  6E00               	movwf	((c:0)),c
   636  0007C8  0102               	movlb	2	; () banked
   637  0007CA  5101               	movf	(??_modbus_receive+0+0)&0ffh,w
   638                           	line	154
   639                           ;modbus_rtu.c: 154: break;
   640  0007CC  EFF1  F003         	goto	l383
   641                           	line	139
   642                           	
   643  0007D0                     l385:		; BSR set to: ?
   644                           
   645  0007D0  5004               	movf	(0+((c:0)+04h)),c,w
   646  0007D2  0A03               	xorlw	3 ^ 0
   647  0007D4  E0DF               	bz	l386
   648  0007D6  0A05               	xorlw	6 ^ 3
   649  0007D8  E0E1               	bz	l387
   650  0007DA  0A10               	xorlw	22 ^ 6
   651  0007DC  E0E3               	bz	l388
   652  0007DE  EFD4  F003         	goto	l389
   653                           
   654                           	line	156
   655                           	
   656  0007E2                     l383:		; BSR set to: ?
   657                           
   658                           	line	157
   659                           ;modbus_rtu.c: 156: }
   660                           ;modbus_rtu.c: 157: }
   661  0007E2                     l377:
   662                           			; BSR set to: ?
   663                           
   664  0007E2  0012               	return
   665                           	opt stack 0
   666                           GLOBAL __end_of_modbus_receive
   667  0007E4                     	__end_of_modbus_receive:
   668                           	FNSIZE	_modbus_receive,1,0
   669                           ; =============== function _modbus_receive ends 
                                 ============
   670                           
   671                           	signat	_modbus_receive,88
   672                           	global	_init_pv1
   673                           	global	??_init_pv1
   674                           	global	?_init_pv1
   675                           
   676                           ; *************** function _init_pv1 ***********
                                 ******
   677                           ; Defined at:
   678                           ;		line 191 in file "../main.c"
   679                           ; Parameters:
   680                           ;		None
   681                           ; Auto variables:
   682                           ;		None
   683                           ; Return value:
   684                           ;		type: void 
   685                           ;		size: 0
   686                           ; Registers used:
   687                           ;		wreg, status,2
   688                           ; Tracked objects:
   689                           ;		On entry : 0/0
   690                           ;		On exit  : 0/0
   691                           ;		Unchanged: 0/0
   692                           ; Data sizes:
   693                           ;		Autos:    0
   694                           ;		Params:   0
   695                           ;		Temp:     0
   696                           ;		Total:    0
   697                           ; This function calls:
   698                           ;		Nothing
   699                           ; This function is called by:
   700                           ;		_main
   701                           ; This function uses a non-reentrant model
   702                           ; 
   703                                   psect   text2,class=CODE,space=0,reloc=2
   704                           
   705                           	opt lm
   706                           	file	"../main.c"
   707                           	line	191
   708  000000                     	__size_of_init_pv1	equ	__end_of_init_pv1-_init_
                                 pv1
   709                           ;main.c: 190: void init_pv1(void)
   710                           ;main.c: 191: {
   711                           	
   712  000C8C                     _init_pv1:		; BSR set to: ?
   713                           
   714                           	opt stack 26
   715                           	line	192
   716                           ;main.c: 192: ANSELB = 0;
   717  000C8C  0E00               	movlw	low(0)
   718  000C8E  010F               	movlb	15	; () banked
   719  000C90  010F               	movlb	15	; () banked
   720  000C92  6F39               	movwf	((3897))&0ffh	;volatile
   721                           	line	193
   722                           ;main.c: 193: TRISB0=0;
   723  000C94  9093               	bcf	c:(31896/8),(31896)&7	;volatile
   724                           	line	194
   725                           ;main.c: 194: RB0=1;
   726  000C96  8081               	bsf	c:(31752/8),(31752)&7	;volatile
   727                           	line	195
   728                           ;main.c: 195: TRISB0=1;
   729  000C98  8093               	bsf	c:(31896/8),(31896)&7	;volatile
   730                           	line	196
   731                           ;main.c: 196: INTEDG0 = 0;
   732  000C9A  9CF1               	bcf	c:(32654/8),(32654)&7	;volatile
   733                           	line	197
   734                           ;main.c: 197: INT0IE = 1;
   735  000C9C  88F2               	bsf	c:(32660/8),(32660)&7	;volatile
   736                           	line	198
   737                           ;main.c: 198: INT0IF = 0;
   738  000C9E  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
   739                           	line	199
   740                           ;main.c: 199: }
   741  000CA0                     l773:
   742                           			; BSR set to: ?
   743                           
   744  000CA0  0012               	return
   745                           	opt stack 0
   746                           GLOBAL __end_of_init_pv1
   747  000CA2                     	__end_of_init_pv1:
   748                           	FNSIZE	_init_pv1,0,0
   749                           ; =============== function _init_pv1 ends ======
                                 ======
   750                           
   751                           	signat	_init_pv1,88
   752                           	global	_init_timer3
   753                           	global	??_init_timer3
   754                           	global	?_init_timer3
   755                           
   756                           ; *************** function _init_timer3 ********
                                 *********
   757                           ; Defined at:
   758                           ;		line 58 in file "../main.c"
   759                           ; Parameters:
   760                           ;		None
   761                           ; Auto variables:
   762                           ;		None
   763                           ; Return value:
   764                           ;		type: void 
   765                           ;		size: 0
   766                           ; Registers used:
   767                           ;		wreg, status,2
   768                           ; Tracked objects:
   769                           ;		On entry : 0/0
   770                           ;		On exit  : 0/0
   771                           ;		Unchanged: 0/0
   772                           ; Data sizes:
   773                           ;		Autos:    0
   774                           ;		Params:   0
   775                           ;		Temp:     0
   776                           ;		Total:    0
   777                           ; This function calls:
   778                           ;		Nothing
   779                           ; This function is called by:
   780                           ;		_main
   781                           ; This function uses a non-reentrant model
   782                           ; 
   783                                   psect   text3,class=CODE,space=0,reloc=2
   784                           
   785                           	opt lm
   786                           	file	"../main.c"
   787                           	line	58
   788  000000                     	__size_of_init_timer3	equ	__end_of_init_timer3-
                                 _init_timer3
   789                           ;main.c: 19: asm("\tglobal __config" "1"); asm("
                                 \t__config" "1" " equ " "0xF9FF & 0xEFFF & 0xFFF
                                 F & 0xFFFF & 0xFFFF");
   790                           ;main.c: 21: asm("\tglobal __config" "2"); asm("
                                 \t__config" "2" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F");
   791                           ;main.c: 23: asm("\tglobal __config" "3"); asm("
                                 \t__config" "3" " equ " "0xFFFF & 0xFFFF");
   792                           ;main.c: 25: asm("\tglobal __config" "4"); asm("
                                 \t__config" "4" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF");
   793                           ;main.c: 27: asm("\tglobal __config" "5"); asm("
                                 \t__config" "5" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F");
   794                           	
   795  000C72                     _init_timer3:		; BSR set to: ?
   796                           
   797                           	opt stack 26
   798                           	line	60
   799  000C72  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
   800                           	line	62
   801                           ;main.c: 62: TMR3CS0 = 0;
   802  000C74  9CB1               	bcf	c:(32142/8),(32142)&7	;volatile
   803                           	line	63
   804                           ;main.c: 63: TMR3CS1 = 0;
   805  000C76  9EB1               	bcf	c:(32143/8),(32143)&7	;volatile
   806                           	line	65
   807                           ;main.c: 65: T3CKPS0 = 0;
   808  000C78  98B1               	bcf	c:(32140/8),(32140)&7	;volatile
   809                           	line	66
   810                           ;main.c: 66: T3CKPS1 = 0;
   811  000C7A  9AB1               	bcf	c:(32141/8),(32141)&7	;volatile
   812                           	line	68
   813                           ;main.c: 68: TMR3 = 65535-11059;
   814  000C7C  0ECC               	movlw	low(0D4CCh)
   815  000C7E  6EB2               	movwf	((c:4018)),c	;volatile
   816  000C80  0ED4               	movlw	high(0D4CCh)
   817  000C82  6EB3               	movwf	((c:4018+1)),c	;volatile
   818                           	line	69
   819                           ;main.c: 69: TMR3IF=0;
   820  000C84  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
   821                           	line	70
   822                           ;main.c: 70: TMR3IE=1;
   823  000C86  82A0               	bsf	c:(32001/8),(32001)&7	;volatile
   824                           	line	71
   825                           ;main.c: 71: TMR3ON = 1;
   826  000C88  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
   827                           	line	72
   828                           ;main.c: 72: }
   829  000C8A                     l751:
   830                           			; BSR set to: ?
   831                           
   832  000C8A  0012               	return
   833                           	opt stack 0
   834                           GLOBAL __end_of_init_timer3
   835  000C8C                     	__end_of_init_timer3:
   836                           	FNSIZE	_init_timer3,0,0
   837                           ; =============== function _init_timer3 ends ===
                                 =========
   838                           
   839                           	signat	_init_timer3,88
   840                           	global	_read_holding_regs
   841                           	global	??_read_holding_regs
   842                           	global	?_read_holding_regs
   843                           
   844                           ; *************** function _read_holding_regs **
                                 ***************
   845                           ; Defined at:
   846                           ;		line 160 in file "../modbus_rtu.c"
   847                           ; Parameters:
   848                           ;		None
   849                           ; Auto variables:
   850                           ;		i           	       	type: unsigned char 
   851                           ;		start_addr  	       	type: unsigned int 
   852                           ;		data_crc    	       	type: unsigned int 
   853                           ;		num         	       	type: unsigned int 
   854                           ; Return value:
   855                           ;		type: void 
   856                           ;		size: 0
   857                           ; Registers used:
   858                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   859                           ; Tracked objects:
   860                           ;		On entry : 0/0
   861                           ;		On exit  : 0/0
   862                           ;		Unchanged: 0/0
   863                           ; Data sizes:
   864                           ;		Autos:    7
   865                           ;		Params:   0
   866                           ;		Temp:     7
   867                           ;		Total:   14
   868                           ; This function calls:
   869                           ;		_modbus_crc16
   870                           ; This function is called by:
   871                           ;		_modbus_receive
   872                           ; This function uses a non-reentrant model
   873                           ; 
   874                                   psect   text4,class=CODE,space=0,reloc=2
   875                           
   876                           	opt lm
   877                           	file	"../modbus_rtu.c"
   878                           	line	160
   879  000000                     	__size_of_read_holding_regs	equ	__end_of_read_h
                                 olding_regs-_read_holding_regs
   880                           ;modbus_rtu.c: 159: void read_holding_regs(void)
   881                           ;modbus_rtu.c: 160: {
   882                           	
   883  00006C                     _read_holding_regs:		; BSR set to: ?
   884                           
   885                           	opt stack 25
   886                           	line	161
   887  00006C  0E00               	movlw	low(0)
   888  00006E  0102               	movlb	2	; () banked
   889  000070  0102               	movlb	2	; () banked
   890  000072  6F07               	movwf	((read_holding_regs@num))&0ffh
   891  000074  0E00               	movlw	high(0)
   892  000076  0102               	movlb	2	; () banked
   893  000078  6F08               	movwf	((read_holding_regs@num+1))&0ffh
   894                           	line	163
   895                           ;modbus_rtu.c: 162: unsigned int start_addr;
   896                           ;modbus_rtu.c: 163: unsigned int data_crc=0;
   897  00007A  0E00               	movlw	low(0)
   898  00007C  0102               	movlb	2	; () banked
   899  00007E  0102               	movlb	2	; () banked
   900  000080  6F05               	movwf	((read_holding_regs@data_crc))&0ffh
   901  000082  0E00               	movlw	high(0)
   902  000084  0102               	movlb	2	; () banked
   903  000086  6F06               	movwf	((read_holding_regs@data_crc+1))&0ffh
   904                           	line	164
   905                           ;modbus_rtu.c: 164: unsigned char i = 0 ;
   906  000088  0102               	movlb	2	; () banked
   907  00008A  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
   908  00008C  0E00               	movlw	low(0)
   909  00008E  0102               	movlb	2	; () banked
   910  000090  0102               	movlb	2	; () banked
   911  000092  6F02               	movwf	((read_holding_regs@i))&0ffh
   912  000094  0102               	movlb	2	; () banked
   913  000096  5109               	movf	(??_read_holding_regs+7+0)&0ffh,w
   914                           	line	166
   915                           ;modbus_rtu.c: 166: start_addr = ((rx_buf.data_b
                                 uf[2])<<8)|(rx_buf.data_buf[3]);
   916  000098  5005               	movf	(0+((c:0)+05h)),c,w
   917  00009A  0102               	movlb	2	; () banked
   918  00009C  0102               	movlb	2	; () banked
   919  00009E  6F04               	movwf	((read_holding_regs@start_addr+1))&0ffh
   920  0000A0  5006               	movf	(0+((c:0)+06h)),c,w
   921  0000A2  0102               	movlb	2	; () banked
   922  0000A4  6F03               	movwf	((read_holding_regs@start_addr))&0ffh
   923                           	line	168
   924                           ;modbus_rtu.c: 168: num = ((rx_buf.data_buf[4])<
                                 <8)|(rx_buf.data_buf[5]);
   925  0000A6  5007               	movf	(0+((c:0)+07h)),c,w
   926  0000A8  0102               	movlb	2	; () banked
   927  0000AA  0102               	movlb	2	; () banked
   928  0000AC  6F08               	movwf	((read_holding_regs@num+1))&0ffh
   929  0000AE  5008               	movf	(0+((c:0)+08h)),c,w
   930  0000B0  0102               	movlb	2	; () banked
   931  0000B2  6F07               	movwf	((read_holding_regs@num))&0ffh
   932                           	line	170
   933                           ;modbus_rtu.c: 170: tx_buf.data_buf[0] = 1;
   934  0000B4  0102               	movlb	2	; () banked
   935  0000B6  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
   936  0000B8  0E01               	movlw	low(01h)
   937  0000BA  0100               	movlb	0	; () banked
   938  0000BC  0100               	movlb	0	; () banked
   939  0000BE  6F36               	movwf	(0+(53+01h))&0ffh
   940  0000C0  0102               	movlb	2	; () banked
   941  0000C2  5109               	movf	(??_read_holding_regs+7+0)&0ffh,w
   942                           	line	171
   943                           ;modbus_rtu.c: 171: tx_buf.data_buf[1] = 0x03;
   944  0000C4  0102               	movlb	2	; () banked
   945  0000C6  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
   946  0000C8  0E03               	movlw	low(03h)
   947  0000CA  0100               	movlb	0	; () banked
   948  0000CC  0100               	movlb	0	; () banked
   949  0000CE  6F37               	movwf	(0+(53+02h))&0ffh
   950  0000D0  0102               	movlb	2	; () banked
   951  0000D2  5109               	movf	(??_read_holding_regs+7+0)&0ffh,w
   952                           	line	172
   953                           ;modbus_rtu.c: 172: tx_buf.data_buf[2] = 2*num;
   954  0000D4  0102               	movlb	2	; () banked
   955  0000D6  0102               	movlb	2	; () banked
   956  0000D8  5107               	movf	((read_holding_regs@num))&0ffh,w
   957  0000DA  0102               	movlb	2	; () banked
   958  0000DC  2507               	addwf	((read_holding_regs@num))&0ffh,w
   959  0000DE  0100               	movlb	0	; () banked
   960  0000E0  0100               	movlb	0	; () banked
   961  0000E2  6F38               	movwf	(0+(53+03h))&0ffh
   962                           	line	174
   963                           ;modbus_rtu.c: 174: for(i=0;i<num;i++)
   964  0000E4  0102               	movlb	2	; () banked
   965  0000E6  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
   966  0000E8  0E00               	movlw	low(0)
   967  0000EA  0102               	movlb	2	; () banked
   968  0000EC  0102               	movlb	2	; () banked
   969  0000EE  6F02               	movwf	((read_holding_regs@i))&0ffh
   970  0000F0  0102               	movlb	2	; () banked
   971  0000F2  5109               	movf	(??_read_holding_regs+7+0)&0ffh,w
   972  0000F4  EFF2  F000         	goto	l394
   973                           	line	175
   974                           	
   975  0000F8                     l391:		; BSR set to: ?
   976                           
   977                           	line	176
   978                           ;modbus_rtu.c: 175: {
   979                           ;modbus_rtu.c: 176: tx_buf.data_buf[3+2*i] = mod
                                 bus_reg[i+start_addr]>>8;
   980  0000F8  0102               	movlb	2	; () banked
   981  0000FA  0102               	movlb	2	; () banked
   982  0000FC  5102               	movf	((read_holding_regs@i))&0ffh,w
   983  0000FE  0D02               	mullw	02h
   984  000100  CFF3 F209          	movff	prodl,??_read_holding_regs+7+0
   985  000104  0E04               	movlw	04h
   986  000106  0102               	movlb	2	; () banked
   987  000108  2709               	addwf	(??_read_holding_regs+7+0)&0ffh
   988  00010A  0100               	movlb	0	; () banked
   989  00010C  0E35               	movlw	low(53)
   990  00010E  0102               	movlb	2	; () banked
   991  000110  2509               	addwf	(??_read_holding_regs+7+0)&0ffh,w
   992  000112  6EE9               	movwf	c:fsr0l
   993  000114  6AEA               	clrf	1+c:fsr0l
   994  000116  0100               	movlb	0	; () banked
   995  000118  0E00               	movlw	high(53)
   996  00011A  22EA               	addwfc	1+c:fsr0l
   997  00011C  0102               	movlb	2	; () banked
   998  00011E  0102               	movlb	2	; () banked
   999  000120  5102               	movf	((read_holding_regs@i))&0ffh,w
  1000  000122  0102               	movlb	2	; () banked
  1001  000124  0102               	movlb	2	; () banked
  1002  000126  2503               	addwf	((read_holding_regs@start_addr))&0ffh,w
  1003  000128  0102               	movlb	2	; () banked
  1004  00012A  6F0A               	movwf	(??_read_holding_regs+8+0)&0ffh
  1005  00012C  0E00               	movlw	0
  1006  00012E  0102               	movlb	2	; () banked
  1007  000130  0102               	movlb	2	; () banked
  1008  000132  2104               	addwfc	((read_holding_regs@start_addr+1))&0ffh,
                                 w
  1009  000134  0102               	movlb	2	; () banked
  1010  000136  6F0B               	movwf	(??_read_holding_regs+8+0+1)&0ffh
  1011  000138  90D8               	bcf	status,0
  1012  00013A  0102               	movlb	2	; () banked
  1013  00013C  350A               	rlcf	(??_read_holding_regs+8+0)&0ffh,w
  1014  00013E  0102               	movlb	2	; () banked
  1015  000140  6F0C               	movwf	(??_read_holding_regs+10+0)&0ffh
  1016  000142  0102               	movlb	2	; () banked
  1017  000144  350B               	rlcf	(??_read_holding_regs+8+1)&0ffh,w
  1018  000146  0102               	movlb	2	; () banked
  1019  000148  6F0D               	movwf	1+(??_read_holding_regs+10+0)&0ffh
  1020  00014A  0101               	movlb	1	; () banked
  1021  00014C  0E00               	movlw	low(256)
  1022  00014E  0102               	movlb	2	; () banked
  1023  000150  250C               	addwf	(??_read_holding_regs+10+0)&0ffh,w
  1024  000152  6EE1               	movwf	c:fsr1l
  1025  000154  0101               	movlb	1	; () banked
  1026  000156  0E01               	movlw	high(256)
  1027  000158  0102               	movlb	2	; () banked
  1028  00015A  210D               	addwfc	(??_read_holding_regs+10+1)&0ffh,w
  1029  00015C  6EE2               	movwf	1+c:fsr1l
  1030  00015E  CFE6 F20E          	movff	postinc1,??_read_holding_regs+12+0
  1031  000162  CFE5 F20F          	movff	postdec1,??_read_holding_regs+12+0+1
  1032  000166  C20F  F20E         	movff	??_read_holding_regs+12+1,??_read_holding
                                 _regs+12+0
  1033  00016A  0102               	movlb	2	; () banked
  1034  00016C  6B0F               	clrf	(??_read_holding_regs+12+1)&0ffh
  1035  00016E  0102               	movlb	2	; () banked
  1036  000170  510E               	movf	(??_read_holding_regs+12+0)&0ffh,w
  1037  000172  6EEF               	movwf	indf0
  1038                           
  1039                           	line	177
  1040                           ;modbus_rtu.c: 177: tx_buf.data_buf[3+2*i+1] = m
                                 odbus_reg[i+start_addr];
  1041  000174  0102               	movlb	2	; () banked
  1042  000176  0102               	movlb	2	; () banked
  1043  000178  5102               	movf	((read_holding_regs@i))&0ffh,w
  1044  00017A  0102               	movlb	2	; () banked
  1045  00017C  0102               	movlb	2	; () banked
  1046  00017E  2503               	addwf	((read_holding_regs@start_addr))&0ffh,w
  1047  000180  0102               	movlb	2	; () banked
  1048  000182  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1049  000184  0E00               	movlw	0
  1050  000186  0102               	movlb	2	; () banked
  1051  000188  0102               	movlb	2	; () banked
  1052  00018A  2104               	addwfc	((read_holding_regs@start_addr+1))&0ffh,
                                 w
  1053  00018C  0102               	movlb	2	; () banked
  1054  00018E  6F0A               	movwf	(??_read_holding_regs+7+0+1)&0ffh
  1055  000190  90D8               	bcf	status,0
  1056  000192  0102               	movlb	2	; () banked
  1057  000194  3509               	rlcf	(??_read_holding_regs+7+0)&0ffh,w
  1058  000196  0102               	movlb	2	; () banked
  1059  000198  6F0B               	movwf	(??_read_holding_regs+9+0)&0ffh
  1060  00019A  0102               	movlb	2	; () banked
  1061  00019C  350A               	rlcf	(??_read_holding_regs+7+1)&0ffh,w
  1062  00019E  0102               	movlb	2	; () banked
  1063  0001A0  6F0C               	movwf	1+(??_read_holding_regs+9+0)&0ffh
  1064  0001A2  0101               	movlb	1	; () banked
  1065  0001A4  0E00               	movlw	low(256)
  1066  0001A6  0102               	movlb	2	; () banked
  1067  0001A8  250B               	addwf	(??_read_holding_regs+9+0)&0ffh,w
  1068  0001AA  6EE9               	movwf	c:fsr0l
  1069  0001AC  0101               	movlb	1	; () banked
  1070  0001AE  0E01               	movlw	high(256)
  1071  0001B0  0102               	movlb	2	; () banked
  1072  0001B2  210C               	addwfc	(??_read_holding_regs+9+1)&0ffh,w
  1073  0001B4  6EEA               	movwf	1+c:fsr0l
  1074  0001B6  0102               	movlb	2	; () banked
  1075  0001B8  0102               	movlb	2	; () banked
  1076  0001BA  5102               	movf	((read_holding_regs@i))&0ffh,w
  1077  0001BC  0D02               	mullw	02h
  1078  0001BE  CFF3 F20D          	movff	prodl,??_read_holding_regs+11+0
  1079  0001C2  0E05               	movlw	05h
  1080  0001C4  0102               	movlb	2	; () banked
  1081  0001C6  270D               	addwf	(??_read_holding_regs+11+0)&0ffh
  1082  0001C8  0100               	movlb	0	; () banked
  1083  0001CA  0E35               	movlw	low(53)
  1084  0001CC  0102               	movlb	2	; () banked
  1085  0001CE  250D               	addwf	(??_read_holding_regs+11+0)&0ffh,w
  1086  0001D0  6EE1               	movwf	c:fsr1l
  1087  0001D2  6AE2               	clrf	1+c:fsr1l
  1088  0001D4  0100               	movlb	0	; () banked
  1089  0001D6  0E00               	movlw	high(53)
  1090  0001D8  22E2               	addwfc	1+c:fsr1l
  1091  0001DA  CFEF FFE7          	movff	indf0,indf1
  1092                           	line	174
  1093  0001DE  0102               	movlb	2	; () banked
  1094  0001E0  0102               	movlb	2	; () banked
  1095  0001E2  2B02               	incf	((read_holding_regs@i))&0ffh
  1096                           	
  1097  0001E4                     l394:		; BSR set to: ?
  1098                           
  1099  0001E4  0102               	movlb	2	; () banked
  1100  0001E6  C202  F209         	movff	(read_holding_regs@i),??_read_holding_reg
                                 s+7+0
  1101  0001EA  0102               	movlb	2	; () banked
  1102  0001EC  6B0A               	clrf	(??_read_holding_regs+7+0+1)&0ffh
  1103  0001EE  0102               	movlb	2	; () banked
  1104  0001F0  0102               	movlb	2	; () banked
  1105  0001F2  5107               	movf	((read_holding_regs@num))&0ffh,w
  1106  0001F4  0102               	movlb	2	; () banked
  1107  0001F6  5D09               	subwf	(??_read_holding_regs+7+0)&0ffh,w
  1108  0001F8  0102               	movlb	2	; () banked
  1109  0001FA  0102               	movlb	2	; () banked
  1110  0001FC  5108               	movf	((read_holding_regs@num+1))&0ffh,w
  1111  0001FE  0102               	movlb	2	; () banked
  1112  000200  590A               	subwfb	(??_read_holding_regs+7+1)&0ffh,w
  1113  000202  A0D8               	btfss	status,0
  1114  000204  EF06  F001         	goto	u1501
  1115  000208  EF08  F001         	goto	u1500
  1116  00020C                     u1501:
  1117  00020C  EF7C  F000         	goto	l391
  1118  000210                     u1500:
  1119                           	
  1120  000210                     l392:		; BSR set to: ?
  1121                           
  1122                           	line	179
  1123                           ;modbus_rtu.c: 178: }
  1124                           ;modbus_rtu.c: 179: data_crc = modbus_crc16(tx_b
                                 uf.data_buf,(2*num+3));
  1125  000210  90D8               	bcf	status,0
  1126  000212  0102               	movlb	2	; () banked
  1127  000214  0102               	movlb	2	; () banked
  1128  000216  3507               	rlcf	((read_holding_regs@num))&0ffh,w
  1129  000218  0102               	movlb	2	; () banked
  1130  00021A  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1131  00021C  0102               	movlb	2	; () banked
  1132  00021E  0102               	movlb	2	; () banked
  1133  000220  3508               	rlcf	((read_holding_regs@num+1))&0ffh,w
  1134  000222  0102               	movlb	2	; () banked
  1135  000224  6F0A               	movwf	1+(??_read_holding_regs+7+0)&0ffh
  1136  000226  0E03               	movlw	low(03h)
  1137  000228  0102               	movlb	2	; () banked
  1138  00022A  2509               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1139  00022C  0102               	movlb	2	; () banked
  1140                           	
  1141  00022E  0102               	movlb	2	; () banked
  1142  000230  6F12               	movwf	(0+(?_modbus_crc16+02h))&0ffh
  1143  000232  0E00               	movlw	high(03h)
  1144  000234  0102               	movlb	2	; () banked
  1145  000236  210A               	addwfc	(??_read_holding_regs+7+1)&0ffh,w
  1146  000238  0102               	movlb	2	; () banked
  1147  00023A  6F13               	movwf	1+(0+(?_modbus_crc16+02h))&0ffh
  1148  00023C  0100               	movlb	0	; () banked
  1149  00023E  0E36               	movlw	low(53+01h)
  1150  000240  0102               	movlb	2	; () banked
  1151  000242  0102               	movlb	2	; () banked
  1152  000244  6F10               	movwf	((?_modbus_crc16))&0ffh
  1153  000246  0100               	movlb	0	; () banked
  1154  000248  0E00               	movlw	high(53+01h)
  1155  00024A  0102               	movlb	2	; () banked
  1156  00024C  6F11               	movwf	((?_modbus_crc16+1))&0ffh
  1157  00024E  ECAA  F004         	call	_modbus_crc16	;wreg free
  1158  000252  C210  F205         	movff	0+?_modbus_crc16,(read_holding_regs@data_
                                 crc)
  1159  000256  C211  F206         	movff	1+?_modbus_crc16,(read_holding_regs@data_
                                 crc+1)
  1160                           	line	181
  1161                           ;modbus_rtu.c: 181: tx_buf.data_buf[3+2*num] = d
                                 ata_crc;
  1162  00025A  0102               	movlb	2	; () banked
  1163  00025C  90D8               	bcf	status,0
  1164  00025E  0102               	movlb	2	; () banked
  1165  000260  3507               	rlcf	((read_holding_regs@num))&0ffh,w
  1166  000262  0102               	movlb	2	; () banked
  1167  000264  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1168  000266  0E04               	movlw	04h
  1169  000268  0102               	movlb	2	; () banked
  1170  00026A  2709               	addwf	(??_read_holding_regs+7+0)&0ffh
  1171  00026C  0100               	movlb	0	; () banked
  1172  00026E  0E35               	movlw	low(53)
  1173  000270  0102               	movlb	2	; () banked
  1174  000272  2509               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1175  000274  6EE9               	movwf	c:fsr0l
  1176  000276  6AEA               	clrf	1+c:fsr0l
  1177  000278  0100               	movlb	0	; () banked
  1178  00027A  0E00               	movlw	high(53)
  1179  00027C  22EA               	addwfc	1+c:fsr0l
  1180  00027E  0102               	movlb	2	; () banked
  1181  000280  C205  FFEF         	movff	(read_holding_regs@data_crc),indf0
  1182                           
  1183                           	line	182
  1184                           ;modbus_rtu.c: 182: tx_buf.data_buf[4+2*num] = d
                                 ata_crc>>8;
  1185  000284  0102               	movlb	2	; () banked
  1186  000286  90D8               	bcf	status,0
  1187  000288  0102               	movlb	2	; () banked
  1188  00028A  3507               	rlcf	((read_holding_regs@num))&0ffh,w
  1189  00028C  0102               	movlb	2	; () banked
  1190  00028E  6F09               	movwf	(??_read_holding_regs+7+0)&0ffh
  1191  000290  0E05               	movlw	05h
  1192  000292  0102               	movlb	2	; () banked
  1193  000294  2709               	addwf	(??_read_holding_regs+7+0)&0ffh
  1194  000296  0100               	movlb	0	; () banked
  1195  000298  0E35               	movlw	low(53)
  1196  00029A  0102               	movlb	2	; () banked
  1197  00029C  2509               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1198  00029E  6EE9               	movwf	c:fsr0l
  1199  0002A0  6AEA               	clrf	1+c:fsr0l
  1200  0002A2  0100               	movlb	0	; () banked
  1201  0002A4  0E00               	movlw	high(53)
  1202  0002A6  22EA               	addwfc	1+c:fsr0l
  1203  0002A8  0102               	movlb	2	; () banked
  1204  0002AA  0102               	movlb	2	; () banked
  1205  0002AC  5106               	movf	((read_holding_regs@data_crc+1))&0ffh,w
  1206  0002AE  6EEF               	movwf	indf0
  1207                           
  1208                           	line	183
  1209                           ;modbus_rtu.c: 183: tx_buf.tx_count = 5+2*num;
  1210  0002B0  0102               	movlb	2	; () banked
  1211  0002B2  0102               	movlb	2	; () banked
  1212  0002B4  5107               	movf	((read_holding_regs@num))&0ffh,w
  1213  0002B6  0102               	movlb	2	; () banked
  1214  0002B8  2507               	addwf	((read_holding_regs@num))&0ffh,w
  1215  0002BA  0F05               	addlw	low(05h)
  1216  0002BC  6E35               	movwf	((c:53)),c
  1217                           	line	185
  1218                           ;modbus_rtu.c: 185: (TX1IE) = 1;
  1219  0002BE  889D               	bsf	c:(31980/8),(31980)&7	;volatile
  1220                           	line	186
  1221                           ;modbus_rtu.c: 186: }
  1222  0002C0                     l390:
  1223                           			; BSR set to: ?
  1224                           
  1225  0002C0  0012               	return
  1226                           	opt stack 0
  1227                           GLOBAL __end_of_read_holding_regs
  1228  0002C2                     	__end_of_read_holding_regs:
  1229                           	FNSIZE	_read_holding_regs,14,0
  1230                           ; =============== function _read_holding_regs en
                                 ds ============
  1231                           
  1232                           	signat	_read_holding_regs,88
  1233                           	global	_write_single_holding_reg
  1234                           	global	??_write_single_holding_reg
  1235                           	global	?_write_single_holding_reg
  1236                           
  1237                           ; *************** function _write_single_holding
                                 _reg *****************
  1238                           ; Defined at:
  1239                           ;		line 189 in file "../modbus_rtu.c"
  1240                           ; Parameters:
  1241                           ;		None
  1242                           ; Auto variables:
  1243                           ;		i           	       	type: unsigned char 
  1244                           ;		start_addr  	       	type: unsigned int 
  1245                           ; Return value:
  1246                           ;		type: void 
  1247                           ;		size: 0
  1248                           ; Registers used:
  1249                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0
  1250                           ; Tracked objects:
  1251                           ;		On entry : 0/0
  1252                           ;		On exit  : 0/0
  1253                           ;		Unchanged: 0/0
  1254                           ; Data sizes:
  1255                           ;		Autos:    3
  1256                           ;		Params:   0
  1257                           ;		Temp:     4
  1258                           ;		Total:    7
  1259                           ; This function calls:
  1260                           ;		Nothing
  1261                           ; This function is called by:
  1262                           ;		_modbus_receive
  1263                           ; This function uses a non-reentrant model
  1264                           ; 
  1265                                   psect   text5,class=CODE,space=0,reloc=2
  1266                           
  1267                           	opt lm
  1268                           	file	"../modbus_rtu.c"
  1269                           	line	189
  1270  000000                     	__size_of_write_single_holding_reg	equ	__end_of
                                 _write_single_holding_reg-_write_single_holding_
                                 reg
  1271                           ;modbus_rtu.c: 188: void write_single_holding_re
                                 g(void)
  1272                           ;modbus_rtu.c: 189: {
  1273                           	
  1274  0007E4                     _write_single_holding_reg:		; BSR set to: ?
  1275                           
  1276                           	opt stack 25
  1277                           	line	193
  1278                           ;modbus_rtu.c: 190: unsigned int start_addr;
  1279                           ;modbus_rtu.c: 191: unsigned char i;
  1280                           ;modbus_rtu.c: 193: start_addr = ((rx_buf.data_b
                                 uf[2])<<8)|(rx_buf.data_buf[3]);
  1281  0007E4  5005               	movf	(0+((c:0)+05h)),c,w
  1282  0007E6  0102               	movlb	2	; () banked
  1283  0007E8  0102               	movlb	2	; () banked
  1284  0007EA  6F04               	movwf	((write_single_holding_reg@start_addr+1))
                                 &0ffh
  1285  0007EC  5006               	movf	(0+((c:0)+06h)),c,w
  1286  0007EE  0102               	movlb	2	; () banked
  1287  0007F0  6F03               	movwf	((write_single_holding_reg@start_addr))&0
                                 ffh
  1288                           	line	195
  1289                           ;modbus_rtu.c: 195: modbus_reg[start_addr] = (rx
                                 _buf.data_buf[5])|((rx_buf.data_buf[4])<<8);
  1290  0007F2  5007               	movf	(0+((c:0)+07h)),c,w
  1291  0007F4  0102               	movlb	2	; () banked
  1292  0007F6  6F06               	movwf	(??_write_single_holding_reg+3+0+1)&0ffh
  1293  0007F8  5008               	movf	(0+((c:0)+08h)),c,w
  1294  0007FA  0102               	movlb	2	; () banked
  1295  0007FC  6F05               	movwf	(??_write_single_holding_reg+3+0)&0ffh
  1296  0007FE  90D8               	bcf	status,0
  1297  000800  0102               	movlb	2	; () banked
  1298  000802  0102               	movlb	2	; () banked
  1299  000804  3503               	rlcf	((write_single_holding_reg@start_addr))&0f
                                 fh,w
  1300  000806  0102               	movlb	2	; () banked
  1301  000808  6F07               	movwf	(??_write_single_holding_reg+5+0)&0ffh
  1302  00080A  0102               	movlb	2	; () banked
  1303  00080C  0102               	movlb	2	; () banked
  1304  00080E  3504               	rlcf	((write_single_holding_reg@start_addr+1))&
                                 0ffh,w
  1305  000810  0102               	movlb	2	; () banked
  1306  000812  6F08               	movwf	1+(??_write_single_holding_reg+5+0)&0ffh
  1307  000814  0101               	movlb	1	; () banked
  1308  000816  0E00               	movlw	low(256)
  1309  000818  0102               	movlb	2	; () banked
  1310  00081A  2507               	addwf	(??_write_single_holding_reg+5+0)&0ffh,w
  1311  00081C  6EE9               	movwf	c:fsr0l
  1312  00081E  0101               	movlb	1	; () banked
  1313  000820  0E01               	movlw	high(256)
  1314  000822  0102               	movlb	2	; () banked
  1315  000824  2108               	addwfc	(??_write_single_holding_reg+5+1)&0ffh,w
  1316  000826  6EEA               	movwf	1+c:fsr0l
  1317  000828  C205  FFEE         	movff	??_write_single_holding_reg+3+0,postinc0
  1318  00082C  C206  FFED         	movff	??_write_single_holding_reg+3+1,postdec0
  1319                           
  1320                           	line	197
  1321                           ;modbus_rtu.c: 197: for(i=0;i<rx_buf.rec_count;i
                                 ++)
  1322  000830  0102               	movlb	2	; () banked
  1323  000832  6F05               	movwf	(??_write_single_holding_reg+3+0)&0ffh
  1324  000834  0E00               	movlw	low(0)
  1325  000836  0102               	movlb	2	; () banked
  1326  000838  0102               	movlb	2	; () banked
  1327  00083A  6F02               	movwf	((write_single_holding_reg@i))&0ffh
  1328  00083C  0102               	movlb	2	; () banked
  1329  00083E  5105               	movf	(??_write_single_holding_reg+3+0)&0ffh,w
  1330  000840  EF41  F004         	goto	l399
  1331                           	line	198
  1332                           	
  1333  000844                     l396:		; BSR set to: ?
  1334                           
  1335                           	line	199
  1336                           ;modbus_rtu.c: 198: {
  1337                           ;modbus_rtu.c: 199: tx_buf.data_buf[i] = rx_buf.
                                 data_buf[i];
  1338  000844  C202  F205         	movff	(write_single_holding_reg@i),??_write_sin
                                 gle_holding_reg+3+0
  1339  000848  0E03               	movlw	03h
  1340  00084A  0102               	movlb	2	; () banked
  1341  00084C  2705               	addwf	(??_write_single_holding_reg+3+0)&0ffh
  1342  00084E  0E00               	movlw	low((c:0))
  1343  000850  0102               	movlb	2	; () banked
  1344  000852  2505               	addwf	(??_write_single_holding_reg+3+0)&0ffh,w
  1345  000854  6EE9               	movwf	c:fsr0l
  1346  000856  6AEA               	clrf	1+c:fsr0l
  1347  000858  0E00               	movlw	high((c:0))
  1348  00085A  22EA               	addwfc	1+c:fsr0l
  1349  00085C  C202  F206         	movff	(write_single_holding_reg@i),??_write_sin
                                 gle_holding_reg+4+0
  1350  000860  0E01               	movlw	01h
  1351  000862  0102               	movlb	2	; () banked
  1352  000864  2706               	addwf	(??_write_single_holding_reg+4+0)&0ffh
  1353  000866  0100               	movlb	0	; () banked
  1354  000868  0E35               	movlw	low(53)
  1355  00086A  0102               	movlb	2	; () banked
  1356  00086C  2506               	addwf	(??_write_single_holding_reg+4+0)&0ffh,w
  1357  00086E  6EE1               	movwf	c:fsr1l
  1358  000870  6AE2               	clrf	1+c:fsr1l
  1359  000872  0100               	movlb	0	; () banked
  1360  000874  0E00               	movlw	high(53)
  1361  000876  22E2               	addwfc	1+c:fsr1l
  1362  000878  CFEF FFE7          	movff	indf0,indf1
  1363                           	line	197
  1364  00087C  0102               	movlb	2	; () banked
  1365  00087E  0102               	movlb	2	; () banked
  1366  000880  2B02               	incf	((write_single_holding_reg@i))&0ffh
  1367                           	
  1368  000882                     l399:		; BSR set to: ?
  1369                           
  1370  000882  5002               	movf	(0+((c:0)+02h)),c,w
  1371  000884  0102               	movlb	2	; () banked
  1372  000886  0102               	movlb	2	; () banked
  1373  000888  5D02               	subwf	((write_single_holding_reg@i))&0ffh,w
  1374  00088A  A0D8               	btfss	status,0
  1375  00088C  EF4A  F004         	goto	u1511
  1376  000890  EF4C  F004         	goto	u1510
  1377  000894                     u1511:
  1378  000894  EF22  F004         	goto	l396
  1379  000898                     u1510:
  1380                           	
  1381  000898                     l397:		; BSR set to: ?
  1382                           
  1383                           	line	202
  1384                           ;modbus_rtu.c: 200: }
  1385                           ;modbus_rtu.c: 202: tx_buf.tx_count = rx_buf.rec
                                 _count;
  1386  000898  C002 F035          	movff	0+((c:0)+02h),(c:53)
  1387                           	line	205
  1388                           ;modbus_rtu.c: 205: (TX1IE) = 1;
  1389  00089C  889D               	bsf	c:(31980/8),(31980)&7	;volatile
  1390                           	line	206
  1391                           ;modbus_rtu.c: 206: }
  1392  00089E                     l395:
  1393                           			; BSR set to: ?
  1394                           
  1395  00089E  0012               	return
  1396                           	opt stack 0
  1397                           GLOBAL __end_of_write_single_holding_reg
  1398  0008A0                     	__end_of_write_single_holding_reg:
  1399                           	FNSIZE	_write_single_holding_reg,7,0
  1400                           ; =============== function _write_single_holding
                                 _reg ends ============
  1401                           
  1402                           	signat	_write_single_holding_reg,88
  1403                           	global	_modbus_crc16
  1404                           	global	??_modbus_crc16
  1405                           	global	?_modbus_crc16
  1406                           
  1407                           ; *************** function _modbus_crc16 *******
                                 **********
  1408                           ; Defined at:
  1409                           ;		line 53 in file "../mbcrc.c"
  1410                           ; Parameters:
  1411                           ;		pucFrame       size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 53
  1412                           ;		 -> tx_buf(51), rx_buf(53), 
  1413                           ;		usLen          size:   2offs:   2	type: unsig
                                 ned int 
  1414                           ; Auto variables:
  1415                           ;		ucCRCHi     	       	type: unsigned char 
  1416                           ;		ucCRCLo     	       	type: unsigned char 
  1417                           ;		iIndex      	       	type: int 
  1418                           ; Return value:
  1419                           ;		type: unsigned int 
  1420                           ;		size: 2
  1421                           ; Registers used:
  1422                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat
  1423                           ; Tracked objects:
  1424                           ;		On entry : 0/0
  1425                           ;		On exit  : 0/0
  1426                           ;		Unchanged: 0/0
  1427                           ; Data sizes:
  1428                           ;		Autos:    4
  1429                           ;		Params:   4
  1430                           ;		Temp:     1
  1431                           ;		Total:    9
  1432                           ; This function calls:
  1433                           ;		Nothing
  1434                           ; This function is called by:
  1435                           ;		_modbus_receive
  1436                           ;		_read_holding_regs
  1437                           ; This function uses a non-reentrant model
  1438                           ; 
  1439                                   psect   text6,class=CODE,space=0,reloc=2
  1440                           
  1441                           	opt lm
  1442                           	file	"../mbcrc.c"
  1443                           	line	53
  1444  000000                     	__size_of_modbus_crc16	equ	__end_of_modbus_crc1
                                 6-_modbus_crc16
  1445                           ;mbcrc.h: 34: unsigned int modbus_crc16( unsigne
                                 d char * pucFrame, unsigned int usLen );
  1446                           ;mbcrc.c: 2: static const unsigned char aucCRCHi
                                 [] = {
  1447                           ;mbcrc.c: 3: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1448                           ;mbcrc.c: 4: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  1449                           ;mbcrc.c: 5: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1450                           ;mbcrc.c: 6: 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1,
                                  0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  1451                           ;mbcrc.c: 7: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1452                           	
  1453  000954                     _modbus_crc16:		; BSR set to: ?
  1454                           
  1455                           	opt stack 24
  1456                           	line	54
  1457  000954  0102               	movlb	2	; () banked
  1458  000956  0102               	movlb	2	; () banked
  1459  000958  6914               	setf	((modbus_crc16@ucCRCHi))&0ffh
  1460                           	line	55
  1461                           ;mbcrc.c: 55: unsigned char ucCRCLo = 0xFF;
  1462  00095A  0102               	movlb	2	; () banked
  1463  00095C  0102               	movlb	2	; () banked
  1464  00095E  6915               	setf	((modbus_crc16@ucCRCLo))&0ffh
  1465                           	line	58
  1466                           ;mbcrc.c: 56: int iIndex;
  1467                           ;mbcrc.c: 58: while( usLen-- )
  1468  000960  EFE5  F004         	goto	l2
  1469                           	
  1470  000964                     l3:		; BSR set to: ?
  1471                           
  1472                           	line	60
  1473  000964  C210  FFE9         	movff	(modbus_crc16@pucFrame),fsr0l
  1474  000968  C211  FFEA         	movff	(modbus_crc16@pucFrame+1),fsr0h
  1475  00096C  50EF               	movf	indf0,w
  1476  00096E  0102               	movlb	2	; () banked
  1477  000970  0102               	movlb	2	; () banked
  1478  000972  1915               	xorwf	((modbus_crc16@ucCRCLo))&0ffh,w
  1479  000974  0102               	movlb	2	; () banked
  1480  000976  6F18               	movwf	(??_modbus_crc16+4+0)&0ffh
  1481  000978  0102               	movlb	2	; () banked
  1482  00097A  5118               	movf	((??_modbus_crc16+4+0))&0ffh,w
  1483  00097C  0102               	movlb	2	; () banked
  1484  00097E  0102               	movlb	2	; () banked
  1485  000980  6F16               	movwf	((modbus_crc16@iIndex))&0ffh
  1486  000982  0102               	movlb	2	; () banked
  1487  000984  6B17               	clrf	((modbus_crc16@iIndex+1))&0ffh
  1488                           ;mbcrc.c: 59: {
  1489                           ;mbcrc.c: 60: iIndex = ucCRCLo ^ *( pucFrame++ )
                                 ;
  1490  000986  0102               	movlb	2	; () banked
  1491  000988  0102               	movlb	2	; () banked
  1492  00098A  4B10               	infsnz	((modbus_crc16@pucFrame))&0ffh
  1493  00098C  2B11               	incf	((modbus_crc16@pucFrame+1))&0ffh
  1494                           	line	61
  1495                           ;mbcrc.c: 61: ucCRCLo = ( unsigned char )( ucCRC
                                 Hi ^ aucCRCHi[iIndex] );
  1496  00098E  0EFE               	movlw	low((_aucCRCHi))
  1497  000990  0102               	movlb	2	; () banked
  1498  000992  0102               	movlb	2	; () banked
  1499  000994  2516               	addwf	((modbus_crc16@iIndex))&0ffh,w
  1500  000996  6EF6               	movwf	tblptrl
  1501  000998  0E7D               	movlw	high((_aucCRCHi))
  1502  00099A  0102               	movlb	2	; () banked
  1503  00099C  2117               	addwfc	((modbus_crc16@iIndex+1))&0ffh,w
  1504  00099E  6EF7               	movwf	tblptrh
  1505  0009A0  0008               	tblrd	*
  1506                           	
  1507  0009A2  50F5               	movf	tablat,w
  1508                           
  1509  0009A4  0102               	movlb	2	; () banked
  1510  0009A6  0102               	movlb	2	; () banked
  1511  0009A8  1914               	xorwf	((modbus_crc16@ucCRCHi))&0ffh,w
  1512  0009AA  0102               	movlb	2	; () banked
  1513  0009AC  0102               	movlb	2	; () banked
  1514  0009AE  6F15               	movwf	((modbus_crc16@ucCRCLo))&0ffh
  1515                           	line	62
  1516                           ;mbcrc.c: 62: ucCRCHi = aucCRCLo[iIndex];
  1517  0009B0  0EFE               	movlw	low((_aucCRCLo))
  1518  0009B2  0102               	movlb	2	; () banked
  1519  0009B4  0102               	movlb	2	; () banked
  1520  0009B6  2516               	addwf	((modbus_crc16@iIndex))&0ffh,w
  1521  0009B8  6EF6               	movwf	tblptrl
  1522  0009BA  0E7E               	movlw	high((_aucCRCLo))
  1523  0009BC  0102               	movlb	2	; () banked
  1524  0009BE  2117               	addwfc	((modbus_crc16@iIndex+1))&0ffh,w
  1525  0009C0  6EF7               	movwf	tblptrh
  1526  0009C2  0008               	tblrd	*
  1527                           	
  1528  0009C4  0102               	movlb	2	; () banked
  1529  0009C6  CFF5 F214          	movff	tablat,(modbus_crc16@ucCRCHi)
  1530                           	line	63
  1531                           	
  1532  0009CA                     l2:		; BSR set to: ?
  1533                           
  1534                           	line	58
  1535  0009CA  0102               	movlb	2	; () banked
  1536  0009CC  0102               	movlb	2	; () banked
  1537  0009CE  0712               	decf	((modbus_crc16@usLen))&0ffh
  1538  0009D0  A0D8               	btfss	status,0
  1539  0009D2  0713               	decf	((modbus_crc16@usLen+1))&0ffh
  1540  0009D4  0102               	movlb	2	; () banked
  1541  0009D6  2912               	incf	((modbus_crc16@usLen))&0ffh,w
  1542  0009D8  B4D8               	btfsc	status,2
  1543  0009DA  2913               	incf ((modbus_crc16@usLen+1))&0ffh,w
  1544                           
  1545  0009DC  A4D8               	btfss	status,2
  1546  0009DE  EFF3  F004         	goto	u1521
  1547  0009E2  EFF5  F004         	goto	u1520
  1548  0009E6                     u1521:
  1549  0009E6  EFB2  F004         	goto	l3
  1550  0009EA                     u1520:
  1551                           	
  1552  0009EA                     l4:		; BSR set to: ?
  1553                           
  1554                           	line	64
  1555  0009EA  0102               	movlb	2	; () banked
  1556  0009EC  0102               	movlb	2	; () banked
  1557  0009EE  5114               	movf	((modbus_crc16@ucCRCHi))&0ffh,w
  1558  0009F0  0102               	movlb	2	; () banked
  1559  0009F2  0102               	movlb	2	; () banked
  1560  0009F4  6F11               	movwf	((?_modbus_crc16+1))&0ffh
  1561  0009F6  0102               	movlb	2	; () banked
  1562  0009F8  0102               	movlb	2	; () banked
  1563  0009FA  5115               	movf	((modbus_crc16@ucCRCLo))&0ffh,w
  1564  0009FC  0102               	movlb	2	; () banked
  1565  0009FE  6F10               	movwf	((?_modbus_crc16))&0ffh
  1566  000A00  EF02  F005         	goto	l1
  1567                           	line	65
  1568                           ;mbcrc.c: 65: }
  1569  000A04                     l1:
  1570                           			; BSR set to: ?
  1571                           
  1572  000A04  0012               	return
  1573                           	opt stack 0
  1574                           GLOBAL __end_of_modbus_crc16
  1575  000A06                     	__end_of_modbus_crc16:
  1576                           	FNSIZE	_modbus_crc16,5,4
  1577                           ; =============== function _modbus_crc16 ends ==
                                 ==========
  1578                           
  1579                           	signat	_modbus_crc16,8314
  1580                           	global	_my_isr
  1581                           	global	??_my_isr
  1582                           	global	?_my_isr
  1583                           
  1584                           ; *************** function _my_isr *************
                                 ****
  1585                           ; Defined at:
  1586                           ;		line 135 in file "../main.c"
  1587                           ; Parameters:
  1588                           ;		None
  1589                           ; Auto variables:
  1590                           ;		None
  1591                           ; Return value:
  1592                           ;		type: void 
  1593                           ;		size: 0
  1594                           ; Registers used:
  1595                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  1596                           ; Tracked objects:
  1597                           ;		On entry : 0/0
  1598                           ;		On exit  : 0/0
  1599                           ;		Unchanged: 0/0
  1600                           ; Data sizes:
  1601                           ;		Autos:    0
  1602                           ;		Params:   0
  1603                           ;		Temp:    14
  1604                           ;		Total:   14
  1605                           ; This function calls:
  1606                           ;		_rec_isr
  1607                           ;		_tx_isr
  1608                           ;		_timer35_isr
  1609                           ;		_timer3_isr
  1610                           ;		_pv1_isr
  1611                           ;		_timer0_isr
  1612                           ; This function is called by:
  1613                           ;		Interrupt level 2
  1614                           ; This function uses a non-reentrant model
  1615                           ; 
  1616                                   psect   text7,class=CODE,space=0,reloc=2
  1617                           
  1618                           	opt lm
  1619                           	file	"../main.c"
  1620                           	line	135
  1621  000000                     	__size_of_my_isr	equ	__end_of_my_isr-_my_isr
  1622                           ;main.c: 134: void interrupt my_isr(void)
  1623                           ;main.c: 135: {
  1624                           	
  1625  000A98                     _my_isr:		; BSR set to: ?
  1626                           
  1627                           	opt stack 31
  1628                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  1629                           	global	int_func
  1630  000008                     int_func:
  1631                                   psect   intcode
  1632  000008  CFFA F219          	movff	pclat+0,??_my_isr+0
  1633  00000C  CFFB F21A          	movff	pclat+1,??_my_isr+1
  1634  000010  CFE9 F21B          	movff	fsr0l+0,??_my_isr+2
  1635  000014  EF4C  F005         	goto	_my_isr
  1636                                   psect   text7
  1637  000A98  CFEA F21C          	movff	fsr0h+0,??_my_isr+3
  1638  000A9C  CFE1 F21D          	movff	fsr1l+0,??_my_isr+4
  1639  000AA0  CFE2 F21E          	movff	fsr1h+0,??_my_isr+5
  1640  000AA4  CFD9 F21F          	movff	fsr2l+0,??_my_isr+6
  1641  000AA8  CFDA F220          	movff	fsr2h+0,??_my_isr+7
  1642  000AAC  CFF3 F221          	movff	prodl+0,??_my_isr+8
  1643  000AB0  CFF4 F222          	movff	prodh+0,??_my_isr+9
  1644  000AB4  CFF6 F223          	movff	tblptrl+0,??_my_isr+10
  1645  000AB8  CFF7 F224          	movff	tblptrh+0,??_my_isr+11
  1646  000ABC  CFF8 F225          	movff	tblptru+0,??_my_isr+12
  1647  000AC0  CFF5 F226          	movff	tablat+0,??_my_isr+13
  1648                           	line	136
  1649  000AC4  EC58  F002         	call	_rec_isr	;wreg free
  1650                           	line	137
  1651                           ;main.c: 137: tx_isr();
  1652  000AC8  EC03  F005         	call	_tx_isr	;wreg free
  1653                           	line	138
  1654                           ;main.c: 138: timer35_isr();
  1655  000ACC  EC8B  F005         	call	_timer35_isr	;wreg free
  1656                           	line	139
  1657                           ;main.c: 139: timer3_isr();
  1658  000AD0  ECC3  F005         	call	_timer3_isr	;wreg free
  1659                           	line	140
  1660                           ;main.c: 140: pv1_isr();
  1661  000AD4  EC27  F006         	call	_pv1_isr	;wreg free
  1662                           	line	141
  1663                           ;main.c: 141: timer0_isr();
  1664  000AD8  ECF5  F005         	call	_timer0_isr	;wreg free
  1665                           	line	144
  1666                           ;main.c: 144: }
  1667  000ADC                     i2l762:
  1668                           			; BSR set to: ?
  1669                           
  1670  000ADC  C226  FFF5         	movff	??_my_isr+13,tablat+0
  1671  000AE0  C225  FFF8         	movff	??_my_isr+12,tblptru+0
  1672  000AE4  C224  FFF7         	movff	??_my_isr+11,tblptrh+0
  1673  000AE8  C223  FFF6         	movff	??_my_isr+10,tblptrl+0
  1674  000AEC  C222  FFF4         	movff	??_my_isr+9,prodh+0
  1675  000AF0  C221  FFF3         	movff	??_my_isr+8,prodl+0
  1676  000AF4  C220  FFDA         	movff	??_my_isr+7,fsr2h+0
  1677  000AF8  C21F  FFD9         	movff	??_my_isr+6,fsr2l+0
  1678  000AFC  C21E  FFE2         	movff	??_my_isr+5,fsr1h+0
  1679  000B00  C21D  FFE1         	movff	??_my_isr+4,fsr1l+0
  1680  000B04  C21C  FFEA         	movff	??_my_isr+3,fsr0h+0
  1681  000B08  C21B  FFE9         	movff	??_my_isr+2,fsr0l+0
  1682  000B0C  C21A  FFFB         	movff	??_my_isr+1,pclat+1
  1683  000B10  C219  FFFA         	movff	??_my_isr+0,pclat+0
  1684  000B14  0011               	retfie f
  1685                           	opt stack 0
  1686                           GLOBAL __end_of_my_isr
  1687  000B16                     	__end_of_my_isr:
  1688                           	FNSIZE	_my_isr,14,0
  1689                           ; =============== function _my_isr ends ========
                                 ====
  1690                           
  1691                           	signat	_my_isr,88
  1692                                   psect   text8,class=CODE,space=0,reloc=2
  1693                           	global	intlevel2
  1694                           
  1695                           	opt lm
  1696                           	FNBREAK _timer3_isr,intlevel2
  1697                           	global	_timer3_isr
  1698                           	global	??_timer3_isr
  1699                           	global	?_timer3_isr
  1700                           
  1701                           ; *************** function _timer3_isr *********
                                 ********
  1702                           ; Defined at:
  1703                           ;		line 75 in file "../main.c"
  1704                           ; Parameters:
  1705                           ;		None
  1706                           ; Auto variables:
  1707                           ;		None
  1708                           ; Return value:
  1709                           ;		type: void 
  1710                           ;		size: 0
  1711                           ; Registers used:
  1712                           ;		wreg, status,2, status,0
  1713                           ; Tracked objects:
  1714                           ;		On entry : 0/0
  1715                           ;		On exit  : 0/0
  1716                           ;		Unchanged: 0/0
  1717                           ; Data sizes:
  1718                           ;		Autos:    0
  1719                           ;		Params:   0
  1720                           ;		Temp:     0
  1721                           ;		Total:    0
  1722                           ; This function calls:
  1723                           ;		Nothing
  1724                           ; This function is called by:
  1725                           ;		_my_isr
  1726                           ; This function uses a non-reentrant model
  1727                           ; 
  1728                           	file	"../main.c"
  1729                           	line	75
  1730  000000                     	__size_of_timer3_isr	equ	__end_of_timer3_isr-_t
                                 imer3_isr
  1731                           ;main.c: 74: void timer3_isr(void)
  1732                           ;main.c: 75: {
  1733                           	
  1734  000B86                     _timer3_isr:		; BSR set to: ?
  1735                           
  1736                           	opt stack 30
  1737                           	line	77
  1738  000B86  A2A0               	btfss	c:(32001/8),(32001)&7	;volatile
  1739  000B88  EFC8  F005         	goto	i2u1531
  1740  000B8C  EFCA  F005         	goto	i2u1530
  1741  000B90                     i2u1531:
  1742  000B90  EFF4  F005         	goto	i2l753
  1743  000B94                     i2u1530:
  1744  000B94  A2A1               	btfss	c:(32009/8),(32009)&7	;volatile
  1745  000B96  EFCF  F005         	goto	i2u1541
  1746  000B9A  EFD1  F005         	goto	i2u1540
  1747  000B9E                     i2u1541:
  1748  000B9E  EFF4  F005         	goto	i2l753
  1749  000BA2                     i2u1540:
  1750                           	line	79
  1751                           ;main.c: 78: {
  1752                           ;main.c: 79: TMR3IF = 0;
  1753  000BA2  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
  1754                           	line	81
  1755                           ;main.c: 81: TMR3 = 65535-11059;
  1756  000BA4  0ECC               	movlw	low(0D4CCh)
  1757  000BA6  6EB2               	movwf	((c:4018)),c	;volatile
  1758  000BA8  0ED4               	movlw	high(0D4CCh)
  1759  000BAA  6EB3               	movwf	((c:4018+1)),c	;volatile
  1760                           	line	83
  1761                           ;main.c: 83: count_1ms++;
  1762  000BAC  0100               	movlb	0	; () banked
  1763  000BAE  0100               	movlb	0	; () banked
  1764  000BB0  4B68               	infsnz	((104))&0ffh
  1765  000BB2  2B69               	incf	((104+1))&0ffh
  1766                           	line	85
  1767                           ;main.c: 85: if(count_1ms==6000)
  1768  000BB4  0100               	movlb	0	; () banked
  1769  000BB6  0100               	movlb	0	; () banked
  1770  000BB8  5169               	movf	((104+1))&0ffh,w
  1771  000BBA  0A17               	xorlw	23
  1772  000BBC  0E70               	movlw	112
  1773  000BBE  B4D8               	btfsc	status,2
  1774  000BC0  1968               	xorwf ((104))&0ffh,w
  1775                           
  1776  000BC2  A4D8               	btfss	status,2
  1777  000BC4  EFE6  F005         	goto	i2u1551
  1778  000BC8  EFE8  F005         	goto	i2u1550
  1779  000BCC                     i2u1551:
  1780  000BCC  EFF4  F005         	goto	i2l753
  1781  000BD0                     i2u1550:
  1782                           	line	87
  1783                           ;main.c: 86: {
  1784                           ;main.c: 87: modbus_reg[0] = 0;
  1785  000BD0  0E00               	movlw	low(0)
  1786  000BD2  0101               	movlb	1	; () banked
  1787  000BD4  0101               	movlb	1	; () banked
  1788  000BD6  6F00               	movwf	((256))&0ffh
  1789  000BD8  0E00               	movlw	high(0)
  1790  000BDA  0101               	movlb	1	; () banked
  1791  000BDC  6F01               	movwf	((256+1))&0ffh
  1792                           	line	88
  1793                           ;main.c: 88: count_1ms--;
  1794  000BDE  0100               	movlb	0	; () banked
  1795  000BE0  0100               	movlb	0	; () banked
  1796  000BE2  0768               	decf	((104))&0ffh
  1797  000BE4  A0D8               	btfss	status,0
  1798  000BE6  0769               	decf	((104+1))&0ffh
  1799                           	line	89
  1800                           	
  1801  000BE8                     i2l754:		; BSR set to: ?
  1802                           
  1803                           	line	90
  1804                           	
  1805  000BE8                     i2l753:		; BSR set to: ?
  1806                           
  1807                           	line	91
  1808                           ;main.c: 89: }
  1809                           ;main.c: 90: }
  1810                           ;main.c: 91: }
  1811  000BE8                     i2l752:
  1812                           			; BSR set to: ?
  1813                           
  1814  000BE8  0012               	return
  1815                           	opt stack 0
  1816                           GLOBAL __end_of_timer3_isr
  1817  000BEA                     	__end_of_timer3_isr:
  1818                           	FNSIZE	_timer3_isr,0,0
  1819                           ; =============== function _timer3_isr ends ====
                                 ========
  1820                           
  1821                           	signat	_timer3_isr,88
  1822                                   psect   text9,class=CODE,space=0,reloc=2
  1823                           	global	intlevel2
  1824                           
  1825                           	opt lm
  1826                           	FNBREAK _pv1_isr,intlevel2
  1827                           	global	_pv1_isr
  1828                           	global	??_pv1_isr
  1829                           	global	?_pv1_isr
  1830                           
  1831                           ; *************** function _pv1_isr ************
                                 *****
  1832                           ; Defined at:
  1833                           ;		line 201 in file "../main.c"
  1834                           ; Parameters:
  1835                           ;		None
  1836                           ; Auto variables:
  1837                           ;		None
  1838                           ; Return value:
  1839                           ;		type: void 
  1840                           ;		size: 0
  1841                           ; Registers used:
  1842                           ;		wreg, status,2, status,0, cstack
  1843                           ; Tracked objects:
  1844                           ;		On entry : 0/0
  1845                           ;		On exit  : 0/0
  1846                           ;		Unchanged: 0/0
  1847                           ; Data sizes:
  1848                           ;		Autos:    0
  1849                           ;		Params:   0
  1850                           ;		Temp:     0
  1851                           ;		Total:    0
  1852                           ; This function calls:
  1853                           ;		_get_speed
  1854                           ; This function is called by:
  1855                           ;		_my_isr
  1856                           ; This function uses a non-reentrant model
  1857                           ; 
  1858                           	file	"../main.c"
  1859                           	line	201
  1860  000000                     	__size_of_pv1_isr	equ	__end_of_pv1_isr-_pv1_isr
  1861                           ;main.c: 200: void pv1_isr(void)
  1862                           ;main.c: 201: {
  1863                           	
  1864  000C4E                     _pv1_isr:		; BSR set to: ?
  1865                           
  1866                           	opt stack 30
  1867                           	line	202
  1868                           ;main.c: 202: if(INT0IF&&INT0IE)
  1869  000C4E  A2F2               	btfss	c:(32657/8),(32657)&7	;volatile
  1870  000C50  EF2C  F006         	goto	i2u1581
  1871  000C54  EF2E  F006         	goto	i2u1580
  1872  000C58                     i2u1581:
  1873  000C58  EF38  F006         	goto	i2l775
  1874  000C5C                     i2u1580:
  1875  000C5C  A8F2               	btfss	c:(32660/8),(32660)&7	;volatile
  1876  000C5E  EF33  F006         	goto	i2u1591
  1877  000C62  EF35  F006         	goto	i2u1590
  1878  000C66                     i2u1591:
  1879  000C66  EF38  F006         	goto	i2l775
  1880  000C6A                     i2u1590:
  1881                           	line	204
  1882                           ;main.c: 203: {
  1883                           ;main.c: 204: INT0IF = 0;
  1884  000C6A  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
  1885                           	line	205
  1886                           ;main.c: 205: get_speed();
  1887  000C6C  ECE8  F002         	call	_get_speed	;wreg free
  1888                           	line	206
  1889                           	
  1890  000C70                     i2l775:		; BSR set to: ?
  1891                           
  1892                           	line	207
  1893                           ;main.c: 206: }
  1894                           ;main.c: 207: }
  1895  000C70                     i2l774:
  1896                           			; BSR set to: ?
  1897                           
  1898  000C70  0012               	return
  1899                           	opt stack 0
  1900                           GLOBAL __end_of_pv1_isr
  1901  000C72                     	__end_of_pv1_isr:
  1902                           	FNSIZE	_pv1_isr,0,0
  1903                           ; =============== function _pv1_isr ends =======
                                 =====
  1904                           
  1905                           	signat	_pv1_isr,88
  1906                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  1907                           	global	intlevel2
  1908                           
  1909                           	opt lm
  1910                           	FNBREAK _timer0_isr,intlevel2
  1911                           	global	_timer0_isr
  1912                           	global	??_timer0_isr
  1913                           	global	?_timer0_isr
  1914                           
  1915                           ; *************** function _timer0_isr *********
                                 ********
  1916                           ; Defined at:
  1917                           ;		line 227 in file "../main.c"
  1918                           ; Parameters:
  1919                           ;		None
  1920                           ; Auto variables:
  1921                           ;		None
  1922                           ; Return value:
  1923                           ;		type: void 
  1924                           ;		size: 0
  1925                           ; Registers used:
  1926                           ;		wreg, status,2, status,0
  1927                           ; Tracked objects:
  1928                           ;		On entry : 0/0
  1929                           ;		On exit  : 0/0
  1930                           ;		Unchanged: 0/0
  1931                           ; Data sizes:
  1932                           ;		Autos:    0
  1933                           ;		Params:   0
  1934                           ;		Temp:     1
  1935                           ;		Total:    1
  1936                           ; This function calls:
  1937                           ;		Nothing
  1938                           ; This function is called by:
  1939                           ;		_my_isr
  1940                           ; This function uses a non-reentrant model
  1941                           ; 
  1942                           	file	"../main.c"
  1943                           	line	227
  1944  000000                     	__size_of_timer0_isr	equ	__end_of_timer0_isr-_t
                                 imer0_isr
  1945                           ;main.c: 226: void timer0_isr(void)
  1946                           ;main.c: 227: {
  1947                           	
  1948  000BEA                     _timer0_isr:		; BSR set to: ?
  1949                           
  1950                           	opt stack 30
  1951                           	line	230
  1952                           ;main.c: 228: static unsigned char count0_10ms =
                                  0;
  1953                           ;main.c: 230: if(TMR0IF&&TMR0IE)
  1954  000BEA  A4F2               	btfss	c:(32658/8),(32658)&7	;volatile
  1955  000BEC  EFFA  F005         	goto	i2u1681
  1956  000BF0  EFFC  F005         	goto	i2u1680
  1957  000BF4                     i2u1681:
  1958  000BF4  EF26  F006         	goto	i2l778
  1959  000BF8                     i2u1680:
  1960  000BF8  AAF2               	btfss	c:(32661/8),(32661)&7	;volatile
  1961  000BFA  EF01  F006         	goto	i2u1691
  1962  000BFE  EF03  F006         	goto	i2u1690
  1963  000C02                     i2u1691:
  1964  000C02  EF26  F006         	goto	i2l778
  1965  000C06                     i2u1690:
  1966                           	line	232
  1967                           ;main.c: 231: {
  1968                           ;main.c: 232: TMR0 = 65535-27648;
  1969  000C06  0EFF               	movlw	low(093FFh)
  1970  000C08  6ED6               	movwf	((c:4054)),c	;volatile
  1971  000C0A  0E93               	movlw	high(093FFh)
  1972  000C0C  6ED7               	movwf	((c:4054+1)),c	;volatile
  1973                           	line	233
  1974                           ;main.c: 233: TMR0IF = 0;
  1975  000C0E  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  1976                           	line	234
  1977                           ;main.c: 234: count0_10ms++;
  1978  000C10  0100               	movlb	0	; () banked
  1979  000C12  0100               	movlb	0	; () banked
  1980  000C14  2B6F               	incf	((111))&0ffh
  1981                           	line	236
  1982                           ;main.c: 236: if(count0_10ms==200)
  1983  000C16  0100               	movlb	0	; () banked
  1984  000C18  0100               	movlb	0	; () banked
  1985  000C1A  516F               	movf	((111))&0ffh,w
  1986  000C1C  0AC8               	xorlw	200
  1987                           
  1988  000C1E  A4D8               	btfss	status,2
  1989  000C20  EF14  F006         	goto	i2u1701
  1990  000C24  EF16  F006         	goto	i2u1700
  1991  000C28                     i2u1701:
  1992  000C28  EF26  F006         	goto	i2l778
  1993  000C2C                     i2u1700:
  1994                           	line	238
  1995                           ;main.c: 237: {
  1996                           ;main.c: 238: count_2s_flg = 1;
  1997  000C2C  0102               	movlb	2	; () banked
  1998  000C2E  6F27               	movwf	(??_timer0_isr+0+0)&0ffh
  1999  000C30  0E01               	movlw	low(01h)
  2000  000C32  0100               	movlb	0	; () banked
  2001  000C34  0100               	movlb	0	; () banked
  2002  000C36  6F70               	movwf	((112))&0ffh
  2003  000C38  0102               	movlb	2	; () banked
  2004  000C3A  5127               	movf	(??_timer0_isr+0+0)&0ffh,w
  2005                           	line	239
  2006                           ;main.c: 239: count0_10ms = 0;
  2007  000C3C  0102               	movlb	2	; () banked
  2008  000C3E  6F27               	movwf	(??_timer0_isr+0+0)&0ffh
  2009  000C40  0E00               	movlw	low(0)
  2010  000C42  0100               	movlb	0	; () banked
  2011  000C44  0100               	movlb	0	; () banked
  2012  000C46  6F6F               	movwf	((111))&0ffh
  2013  000C48  0102               	movlb	2	; () banked
  2014  000C4A  5127               	movf	(??_timer0_isr+0+0)&0ffh,w
  2015                           	line	240
  2016                           	
  2017  000C4C                     i2l779:		; BSR set to: ?
  2018                           
  2019                           	line	241
  2020                           	
  2021  000C4C                     i2l778:		; BSR set to: ?
  2022                           
  2023                           	line	242
  2024                           ;main.c: 240: }
  2025                           ;main.c: 241: }
  2026                           ;main.c: 242: }
  2027  000C4C                     i2l777:
  2028                           			; BSR set to: ?
  2029                           
  2030  000C4C  0012               	return
  2031                           	opt stack 0
  2032                           GLOBAL __end_of_timer0_isr
  2033  000C4E                     	__end_of_timer0_isr:
  2034                           	FNSIZE	_timer0_isr,1,0
  2035                           ; =============== function _timer0_isr ends ====
                                 ========
  2036                           
  2037                           	signat	_timer0_isr,88
  2038                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  2039                           	global	intlevel2
  2040                           
  2041                           	opt lm
  2042                           	FNBREAK _rec_isr,intlevel2
  2043                           	global	_rec_isr
  2044                           	global	??_rec_isr
  2045                           	global	?_rec_isr
  2046                           
  2047                           ; *************** function _rec_isr ************
                                 *****
  2048                           ; Defined at:
  2049                           ;		line 30 in file "../modbus_rtu.c"
  2050                           ; Parameters:
  2051                           ;		None
  2052                           ; Auto variables:
  2053                           ;		rec_data    	       	type: unsigned char 
  2054                           ; Return value:
  2055                           ;		type: void 
  2056                           ;		size: 0
  2057                           ; Registers used:
  2058                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2059                           ; Tracked objects:
  2060                           ;		On entry : 0/0
  2061                           ;		On exit  : 0/0
  2062                           ;		Unchanged: 0/0
  2063                           ; Data sizes:
  2064                           ;		Autos:    1
  2065                           ;		Params:   0
  2066                           ;		Temp:     1
  2067                           ;		Total:    2
  2068                           ; This function calls:
  2069                           ;		Nothing
  2070                           ; This function is called by:
  2071                           ;		_my_isr
  2072                           ; This function uses a non-reentrant model
  2073                           ; 
  2074                           	file	"../modbus_rtu.c"
  2075                           	line	30
  2076  000000                     	__size_of_rec_isr	equ	__end_of_rec_isr-_rec_isr
  2077                           ;modbus_rtu.c: 22: RX_STATE rx_state = RX_STATE_
                                 INIT;
  2078                           ;modbus_rtu.c: 24: unsigned int modbus_reg[100];
  2079                           ;modbus_rtu.c: 29: void rec_isr(void)
  2080                           ;modbus_rtu.c: 30: {
  2081                           	
  2082  0004B0                     _rec_isr:		; BSR set to: ?
  2083                           
  2084                           	opt stack 30
  2085                           	line	31
  2086                           ;modbus_rtu.c: 31: unsigned char rec_data = 0;
  2087  0004B0  0102               	movlb	2	; () banked
  2088  0004B2  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2089  0004B4  0E00               	movlw	low(0)
  2090  0004B6  0102               	movlb	2	; () banked
  2091  0004B8  0102               	movlb	2	; () banked
  2092  0004BA  6F27               	movwf	((rec_isr@rec_data))&0ffh
  2093  0004BC  0102               	movlb	2	; () banked
  2094  0004BE  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2095                           	line	33
  2096                           ;modbus_rtu.c: 33: if(((RC1IE)&&(RC1IF)))
  2097  0004C0  AA9D               	btfss	c:(31981/8),(31981)&7	;volatile
  2098  0004C2  EF65  F002         	goto	i2u1361
  2099  0004C6  EF67  F002         	goto	i2u1360
  2100  0004CA                     i2u1361:
  2101  0004CA  EFE7  F002         	goto	i2l357
  2102  0004CE                     i2u1360:
  2103  0004CE  AA9E               	btfss	c:(31989/8),(31989)&7	;volatile
  2104  0004D0  EF6C  F002         	goto	i2u1371
  2105  0004D4  EF6E  F002         	goto	i2u1370
  2106  0004D8                     i2u1371:
  2107  0004D8  EFE7  F002         	goto	i2l357
  2108  0004DC                     i2u1370:
  2109                           	line	37
  2110                           ;modbus_rtu.c: 34: {
  2111                           ;modbus_rtu.c: 37: rec_data = (RC1REG);
  2112  0004DC  CFAE F227          	movff	(c:4014),(rec_isr@rec_data)	;volatile
  2113                           	line	39
  2114                           ;modbus_rtu.c: 39: switch(rx_state)
  2115  0004E0  EFDC  F002         	goto	i2l359
  2116                           	line	41
  2117                           ;modbus_rtu.c: 40: {
  2118                           ;modbus_rtu.c: 41: case RX_STATE_INIT:
  2119                           	
  2120  0004E4                     i2l360:		; BSR set to: ?
  2121                           
  2122                           	line	42
  2123                           ;modbus_rtu.c: 42: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2124  0004E4  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2125  0004E6  0E7F               	movlw	low(0627Fh)
  2126  0004E8  6ECE               	movwf	((c:4046)),c	;volatile
  2127  0004EA  0E62               	movlw	high(0627Fh)
  2128  0004EC  6ECF               	movwf	((c:4046+1)),c	;volatile
  2129  0004EE  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2130  0004F0  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2131  0004F2  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2132                           	line	43
  2133                           ;modbus_rtu.c: 43: rx_buf.rec_count = 0;
  2134  0004F4  0102               	movlb	2	; () banked
  2135  0004F6  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2136  0004F8  0E00               	movlw	low(0)
  2137  0004FA  6E02               	movwf	(0+((c:0)+02h)),c
  2138  0004FC  0102               	movlb	2	; () banked
  2139  0004FE  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2140                           	line	44
  2141                           ;modbus_rtu.c: 44: rx_buf.frame_ok = 0;
  2142  000500  0102               	movlb	2	; () banked
  2143  000502  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2144  000504  0E00               	movlw	low(0)
  2145  000506  6E00               	movwf	((c:0)),c
  2146  000508  0102               	movlb	2	; () banked
  2147  00050A  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2148                           	line	45
  2149                           ;modbus_rtu.c: 45: break;
  2150  00050C  EFE7  F002         	goto	i2l357
  2151                           	line	46
  2152                           ;modbus_rtu.c: 46: case RX_STATE_IDLE:
  2153                           	
  2154  000510                     i2l361:		; BSR set to: ?
  2155                           
  2156                           	line	47
  2157                           ;modbus_rtu.c: 47: rx_buf.data_buf[rx_buf.rec_co
                                 unt++] = rec_data;
  2158  000510  EE00 F002          	lfsr	0,(c:0)+02h
  2159  000514  CFEF F228          	movff	indf0,??_rec_isr+1+0
  2160  000518  0E01               	movlw	01h
  2161  00051A  26EF               	addwf	indf0
  2162  00051C  0E03               	movlw	03h
  2163  00051E  0102               	movlb	2	; () banked
  2164  000520  2728               	addwf	(??_rec_isr+1+0)&0ffh
  2165  000522  0E00               	movlw	low((c:0))
  2166  000524  0102               	movlb	2	; () banked
  2167  000526  2528               	addwf	(??_rec_isr+1+0)&0ffh,w
  2168  000528  6EE9               	movwf	c:fsr0l
  2169  00052A  6AEA               	clrf	1+c:fsr0l
  2170  00052C  0E00               	movlw	high((c:0))
  2171  00052E  22EA               	addwfc	1+c:fsr0l
  2172  000530  0102               	movlb	2	; () banked
  2173  000532  C227  FFEF         	movff	(rec_isr@rec_data),indf0
  2174                           
  2175                           	line	48
  2176                           ;modbus_rtu.c: 48: rx_state = RX_STATE_RECEIVE;
  2177  000536  0102               	movlb	2	; () banked
  2178  000538  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2179  00053A  0E02               	movlw	low(02h)
  2180  00053C  0100               	movlb	0	; () banked
  2181  00053E  0100               	movlb	0	; () banked
  2182  000540  6F6A               	movwf	((106))&0ffh
  2183  000542  0102               	movlb	2	; () banked
  2184  000544  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2185                           	line	49
  2186                           ;modbus_rtu.c: 49: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2187  000546  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2188  000548  0E7F               	movlw	low(0627Fh)
  2189  00054A  6ECE               	movwf	((c:4046)),c	;volatile
  2190  00054C  0E62               	movlw	high(0627Fh)
  2191  00054E  6ECF               	movwf	((c:4046+1)),c	;volatile
  2192  000550  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2193  000552  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2194  000554  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2195                           	line	50
  2196                           ;modbus_rtu.c: 50: break;
  2197  000556  EFE7  F002         	goto	i2l357
  2198                           	line	51
  2199                           ;modbus_rtu.c: 51: case RX_STATE_RECEIVE:
  2200                           	
  2201  00055A                     i2l362:		; BSR set to: ?
  2202                           
  2203                           	line	52
  2204                           ;modbus_rtu.c: 52: if(rx_buf.rec_count<250)
  2205  00055A  0EFA               	movlw	(0FAh)&0ffh
  2206  00055C  6002               	cpfslt	(0+((c:0)+02h)),c
  2207  00055E  EFB3  F002         	goto	i2u1381
  2208  000562  EFB5  F002         	goto	i2u1380
  2209  000566                     i2u1381:
  2210  000566  EFD2  F002         	goto	i2l363
  2211  00056A                     i2u1380:
  2212                           	line	54
  2213                           ;modbus_rtu.c: 53: {
  2214                           ;modbus_rtu.c: 54: rx_buf.data_buf[rx_buf.rec_co
                                 unt++] = rec_data;
  2215  00056A  EE00 F002          	lfsr	0,(c:0)+02h
  2216  00056E  CFEF F228          	movff	indf0,??_rec_isr+1+0
  2217  000572  0E01               	movlw	01h
  2218  000574  26EF               	addwf	indf0
  2219  000576  0E03               	movlw	03h
  2220  000578  0102               	movlb	2	; () banked
  2221  00057A  2728               	addwf	(??_rec_isr+1+0)&0ffh
  2222  00057C  0E00               	movlw	low((c:0))
  2223  00057E  0102               	movlb	2	; () banked
  2224  000580  2528               	addwf	(??_rec_isr+1+0)&0ffh,w
  2225  000582  6EE9               	movwf	c:fsr0l
  2226  000584  6AEA               	clrf	1+c:fsr0l
  2227  000586  0E00               	movlw	high((c:0))
  2228  000588  22EA               	addwfc	1+c:fsr0l
  2229  00058A  0102               	movlb	2	; () banked
  2230  00058C  C227  FFEF         	movff	(rec_isr@rec_data),indf0
  2231                           
  2232                           	line	55
  2233                           ;modbus_rtu.c: 55: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2234  000590  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2235  000592  0E7F               	movlw	low(0627Fh)
  2236  000594  6ECE               	movwf	((c:4046)),c	;volatile
  2237  000596  0E62               	movlw	high(0627Fh)
  2238  000598  6ECF               	movwf	((c:4046+1)),c	;volatile
  2239  00059A  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2240  00059C  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2241  00059E  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2242                           	line	56
  2243                           ;modbus_rtu.c: 56: }
  2244  0005A0  EFDA  F002         	goto	i2l364
  2245                           	line	57
  2246                           	
  2247  0005A4                     i2l363:		; BSR set to: ?
  2248                           
  2249                           	line	59
  2250                           ;modbus_rtu.c: 57: else
  2251                           ;modbus_rtu.c: 58: {
  2252                           ;modbus_rtu.c: 59: rx_state = RX_STATE_INIT;
  2253  0005A4  0102               	movlb	2	; () banked
  2254  0005A6  6F28               	movwf	(??_rec_isr+1+0)&0ffh
  2255  0005A8  0E00               	movlw	low(0)
  2256  0005AA  0100               	movlb	0	; () banked
  2257  0005AC  0100               	movlb	0	; () banked
  2258  0005AE  6F6A               	movwf	((106))&0ffh
  2259  0005B0  0102               	movlb	2	; () banked
  2260  0005B2  5128               	movf	(??_rec_isr+1+0)&0ffh,w
  2261                           	line	60
  2262                           	
  2263  0005B4                     i2l364:		; BSR set to: ?
  2264                           
  2265                           	line	61
  2266                           ;modbus_rtu.c: 60: }
  2267                           ;modbus_rtu.c: 61: break;
  2268  0005B4  EFE7  F002         	goto	i2l357
  2269                           	line	39
  2270                           	
  2271  0005B8                     i2l359:		; BSR set to: ?
  2272                           
  2273  0005B8  0100               	movlb	0	; () banked
  2274  0005BA  0100               	movlb	0	; () banked
  2275  0005BC  516A               	movf	((106))&0ffh,w
  2276  0005BE  0A00               	xorlw	0 ^ 0
  2277  0005C0  E091               	bz	i2l360
  2278  0005C2  0A01               	xorlw	1 ^ 0
  2279  0005C4  E0A5               	bz	i2l361
  2280  0005C6  0A03               	xorlw	2 ^ 1
  2281  0005C8  E0C8               	bz	i2l362
  2282  0005CA  EFDA  F002         	goto	i2l364
  2283                           
  2284                           	line	65
  2285                           	
  2286  0005CE                     i2l357:		; BSR set to: ?
  2287                           
  2288                           	line	66
  2289                           ;modbus_rtu.c: 65: }
  2290                           ;modbus_rtu.c: 66: }
  2291  0005CE                     i2l356:
  2292                           			; BSR set to: ?
  2293                           
  2294  0005CE  0012               	return
  2295                           	opt stack 0
  2296                           GLOBAL __end_of_rec_isr
  2297  0005D0                     	__end_of_rec_isr:
  2298                           	FNSIZE	_rec_isr,2,0
  2299                           ; =============== function _rec_isr ends =======
                                 =====
  2300                           
  2301                           	signat	_rec_isr,88
  2302                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  2303                           	global	intlevel2
  2304                           
  2305                           	opt lm
  2306                           	FNBREAK _tx_isr,intlevel2
  2307                           	global	_tx_isr
  2308                           	global	??_tx_isr
  2309                           	global	?_tx_isr
  2310                           
  2311                           ; *************** function _tx_isr *************
                                 ****
  2312                           ; Defined at:
  2313                           ;		line 69 in file "../modbus_rtu.c"
  2314                           ; Parameters:
  2315                           ;		None
  2316                           ; Auto variables:
  2317                           ;		None
  2318                           ; Return value:
  2319                           ;		type: void 
  2320                           ;		size: 0
  2321                           ; Registers used:
  2322                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2323                           ; Tracked objects:
  2324                           ;		On entry : 0/0
  2325                           ;		On exit  : 0/0
  2326                           ;		Unchanged: 0/0
  2327                           ; Data sizes:
  2328                           ;		Autos:    0
  2329                           ;		Params:   0
  2330                           ;		Temp:     1
  2331                           ;		Total:    1
  2332                           ; This function calls:
  2333                           ;		Nothing
  2334                           ; This function is called by:
  2335                           ;		_my_isr
  2336                           ; This function uses a non-reentrant model
  2337                           ; 
  2338                           	file	"../modbus_rtu.c"
  2339                           	line	69
  2340  000000                     	__size_of_tx_isr	equ	__end_of_tx_isr-_tx_isr
  2341                           ;modbus_rtu.c: 68: void tx_isr(void)
  2342                           ;modbus_rtu.c: 69: {
  2343                           	
  2344  000A06                     _tx_isr:		; BSR set to: ?
  2345                           
  2346                           	opt stack 30
  2347                           	line	72
  2348  000A06  A89D               	btfss	c:(31980/8),(31980)&7	;volatile
  2349  000A08  EF08  F005         	goto	i2u1391
  2350  000A0C  EF0A  F005         	goto	i2u1390
  2351  000A10                     i2u1391:
  2352  000A10  EF4B  F005         	goto	i2l367
  2353  000A14                     i2u1390:
  2354  000A14  A89E               	btfss	c:(31988/8),(31988)&7	;volatile
  2355  000A16  EF0F  F005         	goto	i2u1401
  2356  000A1A  EF11  F005         	goto	i2u1400
  2357  000A1E                     i2u1401:
  2358  000A1E  EF4B  F005         	goto	i2l367
  2359  000A22                     i2u1400:
  2360                           	line	75
  2361                           ;modbus_rtu.c: 73: {
  2362                           ;modbus_rtu.c: 75: if(tx_buf.tx_count>0)
  2363  000A22  5035               	movf	((c:53)),c,w
  2364  000A24  B4D8               	btfsc	status,2
  2365  000A26  EF17  F005         	goto	i2u1411
  2366  000A2A  EF19  F005         	goto	i2u1410
  2367  000A2E                     i2u1411:
  2368  000A2E  EF4B  F005         	goto	i2l367
  2369  000A32                     i2u1410:
  2370                           	line	77
  2371  000A32  C06B F227          	movff	(107),??_tx_isr+0+0
  2372  000A36  0E01               	movlw	01h
  2373  000A38  0102               	movlb	2	; () banked
  2374  000A3A  2727               	addwf	(??_tx_isr+0+0)&0ffh
  2375  000A3C  0100               	movlb	0	; () banked
  2376  000A3E  0E35               	movlw	low(53)
  2377  000A40  0102               	movlb	2	; () banked
  2378  000A42  2527               	addwf	(??_tx_isr+0+0)&0ffh,w
  2379  000A44  6EE9               	movwf	c:fsr0l
  2380  000A46  6AEA               	clrf	1+c:fsr0l
  2381  000A48  0100               	movlb	0	; () banked
  2382  000A4A  0E00               	movlw	high(53)
  2383  000A4C  22EA               	addwfc	1+c:fsr0l
  2384  000A4E  50EF               	movf	indf0,w
  2385  000A50  6EAD               	movwf	((c:4013)),c	;volatile
  2386                           ;modbus_rtu.c: 76: {
  2387                           ;modbus_rtu.c: 77: (TX1REG) = tx_buf.data_buf[cu
                                 rrent_need_send++];
  2388  000A52  0100               	movlb	0	; () banked
  2389  000A54  0100               	movlb	0	; () banked
  2390  000A56  2B6B               	incf	((107))&0ffh
  2391                           	line	78
  2392                           ;modbus_rtu.c: 78: if(current_need_send==tx_buf.
                                 tx_count)
  2393  000A58  5035               	movf	((c:53)),c,w
  2394  000A5A  0100               	movlb	0	; () banked
  2395  000A5C  0100               	movlb	0	; () banked
  2396  000A5E  636B               	cpfseq	((107))&0ffh
  2397  000A60  EF34  F005         	goto	i2u1421
  2398  000A64  EF36  F005         	goto	i2u1420
  2399  000A68                     i2u1421:
  2400  000A68  EF4B  F005         	goto	i2l367
  2401  000A6C                     i2u1420:
  2402                           	line	80
  2403                           ;modbus_rtu.c: 79: {
  2404                           ;modbus_rtu.c: 80: (TX1IE) = 0;
  2405  000A6C  989D               	bcf	c:(31980/8),(31980)&7	;volatile
  2406                           	line	81
  2407                           ;modbus_rtu.c: 81: current_need_send = 0;
  2408  000A6E  0102               	movlb	2	; () banked
  2409  000A70  6F27               	movwf	(??_tx_isr+0+0)&0ffh
  2410  000A72  0E00               	movlw	low(0)
  2411  000A74  0100               	movlb	0	; () banked
  2412  000A76  0100               	movlb	0	; () banked
  2413  000A78  6F6B               	movwf	((107))&0ffh
  2414  000A7A  0102               	movlb	2	; () banked
  2415  000A7C  5127               	movf	(??_tx_isr+0+0)&0ffh,w
  2416                           	line	82
  2417                           ;modbus_rtu.c: 82: tx_buf.tx_count = 0;
  2418  000A7E  0102               	movlb	2	; () banked
  2419  000A80  6F27               	movwf	(??_tx_isr+0+0)&0ffh
  2420  000A82  0E00               	movlw	low(0)
  2421  000A84  6E35               	movwf	((c:53)),c
  2422  000A86  0102               	movlb	2	; () banked
  2423  000A88  5127               	movf	(??_tx_isr+0+0)&0ffh,w
  2424                           	line	83
  2425                           ;modbus_rtu.c: 83: rx_buf.rec_count = 0;
  2426  000A8A  0102               	movlb	2	; () banked
  2427  000A8C  6F27               	movwf	(??_tx_isr+0+0)&0ffh
  2428  000A8E  0E00               	movlw	low(0)
  2429  000A90  6E02               	movwf	(0+((c:0)+02h)),c
  2430  000A92  0102               	movlb	2	; () banked
  2431  000A94  5127               	movf	(??_tx_isr+0+0)&0ffh,w
  2432                           	line	85
  2433                           	
  2434  000A96                     i2l369:		; BSR set to: ?
  2435                           
  2436                           	line	86
  2437                           	
  2438  000A96                     i2l368:		; BSR set to: ?
  2439                           
  2440                           	line	87
  2441                           	
  2442  000A96                     i2l367:		; BSR set to: ?
  2443                           
  2444                           	line	88
  2445                           ;modbus_rtu.c: 85: }
  2446                           ;modbus_rtu.c: 86: }
  2447                           ;modbus_rtu.c: 87: }
  2448                           ;modbus_rtu.c: 88: }
  2449  000A96                     i2l366:
  2450                           			; BSR set to: ?
  2451                           
  2452  000A96  0012               	return
  2453                           	opt stack 0
  2454                           GLOBAL __end_of_tx_isr
  2455  000A98                     	__end_of_tx_isr:
  2456                           	FNSIZE	_tx_isr,1,0
  2457                           ; =============== function _tx_isr ends ========
                                 ====
  2458                           
  2459                           	signat	_tx_isr,88
  2460                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  2461                           	global	intlevel2
  2462                           
  2463                           	opt lm
  2464                           	FNBREAK _timer35_isr,intlevel2
  2465                           	global	_timer35_isr
  2466                           	global	??_timer35_isr
  2467                           	global	?_timer35_isr
  2468                           
  2469                           ; *************** function _timer35_isr ********
                                 *********
  2470                           ; Defined at:
  2471                           ;		line 90 in file "../modbus_rtu.c"
  2472                           ; Parameters:
  2473                           ;		None
  2474                           ; Auto variables:
  2475                           ;		None
  2476                           ; Return value:
  2477                           ;		type: void 
  2478                           ;		size: 0
  2479                           ; Registers used:
  2480                           ;		wreg, status,2, status,0
  2481                           ; Tracked objects:
  2482                           ;		On entry : 0/0
  2483                           ;		On exit  : 0/0
  2484                           ;		Unchanged: 0/0
  2485                           ; Data sizes:
  2486                           ;		Autos:    0
  2487                           ;		Params:   0
  2488                           ;		Temp:     1
  2489                           ;		Total:    1
  2490                           ; This function calls:
  2491                           ;		Nothing
  2492                           ; This function is called by:
  2493                           ;		_my_isr
  2494                           ; This function uses a non-reentrant model
  2495                           ; 
  2496                           	file	"../modbus_rtu.c"
  2497                           	line	90
  2498  000000                     	__size_of_timer35_isr	equ	__end_of_timer35_isr-
                                 _timer35_isr
  2499                           ;modbus_rtu.c: 89: void timer35_isr(void)
  2500                           ;modbus_rtu.c: 90: {
  2501                           	
  2502  000B16                     _timer35_isr:		; BSR set to: ?
  2503                           
  2504                           	opt stack 30
  2505                           	line	91
  2506  000B16  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
  2507  000B18  EF90  F005         	goto	i2u1661
  2508  000B1C  EF92  F005         	goto	i2u1660
  2509  000B20                     i2u1661:
  2510  000B20  EFC2  F005         	goto	i2l371
  2511  000B24                     i2u1660:
  2512  000B24  A09D               	btfss	c:(31976/8),(31976)&7	;volatile
  2513  000B26  EF97  F005         	goto	i2u1671
  2514  000B2A  EF99  F005         	goto	i2u1670
  2515  000B2E                     i2u1671:
  2516  000B2E  EFC2  F005         	goto	i2l371
  2517  000B32                     i2u1670:
  2518                           	line	94
  2519                           ;modbus_rtu.c: 92: {
  2520                           ;modbus_rtu.c: 94: switch(rx_state)
  2521  000B32  EFB7  F005         	goto	i2l373
  2522                           	line	96
  2523                           ;modbus_rtu.c: 95: {
  2524                           ;modbus_rtu.c: 96: case RX_STATE_INIT:
  2525                           	
  2526  000B36                     i2l374:		; BSR set to: ?
  2527                           
  2528                           	line	97
  2529                           ;modbus_rtu.c: 97: rx_state = RX_STATE_IDLE;
  2530  000B36  0102               	movlb	2	; () banked
  2531  000B38  6F27               	movwf	(??_timer35_isr+0+0)&0ffh
  2532  000B3A  0E01               	movlw	low(01h)
  2533  000B3C  0100               	movlb	0	; () banked
  2534  000B3E  0100               	movlb	0	; () banked
  2535  000B40  6F6A               	movwf	((106))&0ffh
  2536  000B42  0102               	movlb	2	; () banked
  2537  000B44  5127               	movf	(??_timer35_isr+0+0)&0ffh,w
  2538                           	line	98
  2539                           ;modbus_rtu.c: 98: break;
  2540  000B46  EFC0  F005         	goto	i2l372
  2541                           	line	99
  2542                           ;modbus_rtu.c: 99: case RX_STATE_RECEIVE:
  2543                           	
  2544  000B4A                     i2l375:		; BSR set to: ?
  2545                           
  2546                           	line	100
  2547                           ;modbus_rtu.c: 100: rx_state = RX_STATE_IDLE;
  2548  000B4A  0102               	movlb	2	; () banked
  2549  000B4C  6F27               	movwf	(??_timer35_isr+0+0)&0ffh
  2550  000B4E  0E01               	movlw	low(01h)
  2551  000B50  0100               	movlb	0	; () banked
  2552  000B52  0100               	movlb	0	; () banked
  2553  000B54  6F6A               	movwf	((106))&0ffh
  2554  000B56  0102               	movlb	2	; () banked
  2555  000B58  5127               	movf	(??_timer35_isr+0+0)&0ffh,w
  2556                           	line	101
  2557                           ;modbus_rtu.c: 101: rx_buf.frame_ok = 1;
  2558  000B5A  0102               	movlb	2	; () banked
  2559  000B5C  6F27               	movwf	(??_timer35_isr+0+0)&0ffh
  2560  000B5E  0E01               	movlw	low(01h)
  2561  000B60  6E00               	movwf	((c:0)),c
  2562  000B62  0102               	movlb	2	; () banked
  2563  000B64  5127               	movf	(??_timer35_isr+0+0)&0ffh,w
  2564                           	line	102
  2565                           ;modbus_rtu.c: 102: break;
  2566  000B66  EFC0  F005         	goto	i2l372
  2567                           	line	103
  2568                           ;modbus_rtu.c: 103: default:
  2569                           	
  2570  000B6A                     i2l376:		; BSR set to: ?
  2571                           
  2572                           	line	104
  2573                           ;modbus_rtu.c: 104: break;
  2574  000B6A  EFC0  F005         	goto	i2l372
  2575                           	line	94
  2576                           	
  2577  000B6E                     i2l373:		; BSR set to: ?
  2578                           
  2579  000B6E  0100               	movlb	0	; () banked
  2580  000B70  0100               	movlb	0	; () banked
  2581  000B72  516A               	movf	((106))&0ffh,w
  2582  000B74  0A00               	xorlw	0 ^ 0
  2583  000B76  E0DF               	bz	i2l374
  2584  000B78  0A02               	xorlw	2 ^ 0
  2585  000B7A  E0E7               	bz	i2l375
  2586  000B7C  EFB5  F005         	goto	i2l376
  2587                           
  2588                           	line	105
  2589                           	
  2590  000B80                     i2l372:		; BSR set to: ?
  2591                           
  2592                           	line	106
  2593                           ;modbus_rtu.c: 106: TMR1ON = 0;
  2594  000B80  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2595                           	line	108
  2596                           ;modbus_rtu.c: 108: TMR1IF=0;
  2597  000B82  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2598                           	line	110
  2599                           	
  2600  000B84                     i2l371:		; BSR set to: ?
  2601                           
  2602                           	line	111
  2603                           ;modbus_rtu.c: 110: }
  2604                           ;modbus_rtu.c: 111: }
  2605  000B84                     i2l370:
  2606                           			; BSR set to: ?
  2607                           
  2608  000B84  0012               	return
  2609                           	opt stack 0
  2610                           GLOBAL __end_of_timer35_isr
  2611  000B86                     	__end_of_timer35_isr:
  2612                           	FNSIZE	_timer35_isr,1,0
  2613                           ; =============== function _timer35_isr ends ===
                                 =========
  2614                           
  2615                           	signat	_timer35_isr,88
  2616                                   psect   text14,class=CODE,space=0,reloc=
                                 2
  2617                           	global	intlevel2
  2618                           
  2619                           	opt lm
  2620                           	FNBREAK _get_speed,intlevel2
  2621                           	global	_get_speed
  2622                           	global	??_get_speed
  2623                           	global	?_get_speed
  2624                           
  2625                           ; *************** function _get_speed **********
                                 *******
  2626                           ; Defined at:
  2627                           ;		line 146 in file "../main.c"
  2628                           ; Parameters:
  2629                           ;		None
  2630                           ; Auto variables:
  2631                           ;		None
  2632                           ; Return value:
  2633                           ;		type: void 
  2634                           ;		size: 0
  2635                           ; Registers used:
  2636                           ;		wreg, status,2, status,0, cstack
  2637                           ; Tracked objects:
  2638                           ;		On entry : 0/0
  2639                           ;		On exit  : 0/0
  2640                           ;		Unchanged: 0/0
  2641                           ; Data sizes:
  2642                           ;		Autos:    0
  2643                           ;		Params:   0
  2644                           ;		Temp:     1
  2645                           ;		Total:    1
  2646                           ; This function calls:
  2647                           ;		_start_timer3
  2648                           ;		_stop_timer3
  2649                           ;		___aldiv
  2650                           ; This function is called by:
  2651                           ;		_pv1_isr
  2652                           ; This function uses a non-reentrant model
  2653                           ; 
  2654                           	file	"../main.c"
  2655                           	line	146
  2656  000000                     	__size_of_get_speed	equ	__end_of_get_speed-_get
                                 _speed
  2657                           ;main.c: 145: void get_speed(void)
  2658                           ;main.c: 146: {
  2659                           	
  2660  0005D0                     _get_speed:		; BSR set to: ?
  2661                           
  2662                           	opt stack 29
  2663                           	line	150
  2664  0005D0  0102               	movlb	2	; () banked
  2665  0005D2  6F27               	movwf	(??_get_speed+0+0)&0ffh
  2666  0005D4  0E01               	movlw	low(01h)
  2667  0005D6  0100               	movlb	0	; () banked
  2668  0005D8  0100               	movlb	0	; () banked
  2669  0005DA  6F6E               	movwf	((110))&0ffh
  2670  0005DC  0102               	movlb	2	; () banked
  2671  0005DE  5127               	movf	(??_get_speed+0+0)&0ffh,w
  2672                           	line	151
  2673                           ;main.c: 151: switch(sample_step)
  2674  0005E0  EF63  F003         	goto	i2l765
  2675                           	line	153
  2676                           ;main.c: 152: {
  2677                           ;main.c: 153: case 1:
  2678                           	
  2679  0005E4                     i2l766:		; BSR set to: ?
  2680                           
  2681                           	line	154
  2682                           ;main.c: 154: start_timer3();
  2683  0005E4  EC57  F006         	call	_start_timer3	;wreg free
  2684                           	line	155
  2685                           ;main.c: 155: pulse_count++;
  2686  0005E8  0100               	movlb	0	; () banked
  2687  0005EA  0100               	movlb	0	; () banked
  2688  0005EC  4B6C               	infsnz	((108))&0ffh
  2689  0005EE  2B6D               	incf	((108+1))&0ffh
  2690                           	line	156
  2691                           ;main.c: 156: sample_step = 2;
  2692  0005F0  0102               	movlb	2	; () banked
  2693  0005F2  6F27               	movwf	(??_get_speed+0+0)&0ffh
  2694  0005F4  0E02               	movlw	low(02h)
  2695  0005F6  0100               	movlb	0	; () banked
  2696  0005F8  0100               	movlb	0	; () banked
  2697  0005FA  6F71               	movwf	((113))&0ffh
  2698  0005FC  0102               	movlb	2	; () banked
  2699  0005FE  5127               	movf	(??_get_speed+0+0)&0ffh,w
  2700                           	line	157
  2701                           ;main.c: 157: break;
  2702  000600  EF6C  F003         	goto	i2l764
  2703                           	line	158
  2704                           ;main.c: 158: case 2:
  2705                           	
  2706  000604                     i2l767:		; BSR set to: ?
  2707                           
  2708                           	line	159
  2709                           ;main.c: 159: pulse_count++;
  2710  000604  0100               	movlb	0	; () banked
  2711  000606  0100               	movlb	0	; () banked
  2712  000608  4B6C               	infsnz	((108))&0ffh
  2713  00060A  2B6D               	incf	((108+1))&0ffh
  2714                           	line	160
  2715                           ;main.c: 160: if(pulse_count==6)
  2716  00060C  0100               	movlb	0	; () banked
  2717  00060E  0100               	movlb	0	; () banked
  2718  000610  516C               	movf	((108))&0ffh,w
  2719  000612  0A06               	xorlw	6
  2720  000614  116D               	iorwf ((108+1))&0ffh,w
  2721                           
  2722  000616  A4D8               	btfss	status,2
  2723  000618  EF10  F003         	goto	i2u1561
  2724  00061C  EF12  F003         	goto	i2u1560
  2725  000620                     i2u1561:
  2726  000620  EF57  F003         	goto	i2l768
  2727  000624                     i2u1560:
  2728                           	line	162
  2729                           ;main.c: 161: {
  2730                           ;main.c: 162: stop_timer3();
  2731  000624  EC51  F006         	call	_stop_timer3	;wreg free
  2732                           	line	163
  2733                           ;main.c: 163: pulse_count = 0;
  2734  000628  0E00               	movlw	low(0)
  2735  00062A  0100               	movlb	0	; () banked
  2736  00062C  0100               	movlb	0	; () banked
  2737  00062E  6F6C               	movwf	((108))&0ffh
  2738  000630  0E00               	movlw	high(0)
  2739  000632  0100               	movlb	0	; () banked
  2740  000634  6F6D               	movwf	((108+1))&0ffh
  2741                           	line	164
  2742                           ;main.c: 164: stop_timer3();
  2743  000636  EC51  F006         	call	_stop_timer3	;wreg free
  2744                           	line	165
  2745                           ;main.c: 165: if(count_1ms>0)
  2746  00063A  0100               	movlb	0	; () banked
  2747  00063C  0100               	movlb	0	; () banked
  2748  00063E  5169               	movf	((104+1))&0ffh,w
  2749  000640  1168               	iorwf ((104))&0ffh,w
  2750                           
  2751  000642  B4D8               	btfsc	status,2
  2752  000644  EF26  F003         	goto	i2u1571
  2753  000648  EF28  F003         	goto	i2u1570
  2754  00064C                     i2u1571:
  2755  00064C  EF48  F003         	goto	i2l769
  2756  000650                     i2u1570:
  2757                           	line	167
  2758                           ;main.c: 166: {
  2759                           ;main.c: 167: modbus_reg[0] = (unsigned int)(100
                                 000/count_1ms);
  2760  000650  0100               	movlb	0	; () banked
  2761  000652  0102               	movlb	2	; () banked
  2762  000654  C068 F22C          	movff	(104),0+(?___aldiv+04h)
  2763  000658  0100               	movlb	0	; () banked
  2764  00065A  0102               	movlb	2	; () banked
  2765  00065C  C069 F22D          	movff	(104+1),1+(?___aldiv+04h)
  2766  000660  0102               	movlb	2	; () banked
  2767  000662  0102               	movlb	2	; () banked
  2768  000664  6B2E               	clrf	(2+(?___aldiv+04h))&0ffh
  2769  000666  0102               	movlb	2	; () banked
  2770  000668  6B2F               	clrf	(3+(?___aldiv+04h))&0ffh
  2771                           
  2772  00066A  0EA0               	movlw	low(0186A0h)
  2773  00066C  0102               	movlb	2	; () banked
  2774  00066E  0102               	movlb	2	; () banked
  2775  000670  6F28               	movwf	((?___aldiv))&0ffh
  2776  000672  0E86               	movlw	high(0186A0h)
  2777  000674  0102               	movlb	2	; () banked
  2778  000676  6F29               	movwf	((?___aldiv+1))&0ffh
  2779  000678  0E01               	movlw	low highword(0186A0h)
  2780  00067A  0102               	movlb	2	; () banked
  2781  00067C  6F2A               	movwf	((?___aldiv+2))&0ffh
  2782  00067E  0E00               	movlw	high highword(0186A0h)
  2783  000680  0102               	movlb	2	; () banked
  2784  000682  6F2B               	movwf	((?___aldiv+3))&0ffh
  2785  000684  EC61  F001         	call	___aldiv	;wreg free
  2786  000688  C228  F100         	movff	0+?___aldiv,(256)
  2787  00068C  C229  F101         	movff	1+?___aldiv,(256+1)
  2788                           	line	168
  2789                           	
  2790  000690                     i2l769:		; BSR set to: ?
  2791                           
  2792                           	line	169
  2793                           ;main.c: 168: }
  2794                           ;main.c: 169: count_1ms = 0;
  2795  000690  0E00               	movlw	low(0)
  2796  000692  0100               	movlb	0	; () banked
  2797  000694  0100               	movlb	0	; () banked
  2798  000696  6F68               	movwf	((104))&0ffh
  2799  000698  0E00               	movlw	high(0)
  2800  00069A  0100               	movlb	0	; () banked
  2801  00069C  6F69               	movwf	((104+1))&0ffh
  2802                           	line	170
  2803                           ;main.c: 170: sample_step = 1;
  2804  00069E  0102               	movlb	2	; () banked
  2805  0006A0  6F27               	movwf	(??_get_speed+0+0)&0ffh
  2806  0006A2  0E01               	movlw	low(01h)
  2807  0006A4  0100               	movlb	0	; () banked
  2808  0006A6  0100               	movlb	0	; () banked
  2809  0006A8  6F71               	movwf	((113))&0ffh
  2810  0006AA  0102               	movlb	2	; () banked
  2811  0006AC  5127               	movf	(??_get_speed+0+0)&0ffh,w
  2812                           	line	171
  2813                           	
  2814  0006AE                     i2l768:		; BSR set to: ?
  2815                           
  2816                           	line	172
  2817                           ;main.c: 171: }
  2818                           ;main.c: 172: break;
  2819  0006AE  EF6C  F003         	goto	i2l764
  2820                           	line	174
  2821                           ;main.c: 174: default:
  2822                           	
  2823  0006B2                     i2l770:		; BSR set to: ?
  2824                           
  2825                           	line	175
  2826                           ;main.c: 175: sample_step = 1;
  2827  0006B2  0102               	movlb	2	; () banked
  2828  0006B4  6F27               	movwf	(??_get_speed+0+0)&0ffh
  2829  0006B6  0E01               	movlw	low(01h)
  2830  0006B8  0100               	movlb	0	; () banked
  2831  0006BA  0100               	movlb	0	; () banked
  2832  0006BC  6F71               	movwf	((113))&0ffh
  2833  0006BE  0102               	movlb	2	; () banked
  2834  0006C0  5127               	movf	(??_get_speed+0+0)&0ffh,w
  2835                           	line	176
  2836                           ;main.c: 176: break;
  2837  0006C2  EF6C  F003         	goto	i2l764
  2838                           	line	151
  2839                           	
  2840  0006C6                     i2l765:		; BSR set to: ?
  2841                           
  2842  0006C6  0100               	movlb	0	; () banked
  2843  0006C8  0100               	movlb	0	; () banked
  2844  0006CA  5171               	movf	((113))&0ffh,w
  2845  0006CC  0A01               	xorlw	1 ^ 0
  2846  0006CE  E08A               	bz	i2l766
  2847  0006D0  0A03               	xorlw	2 ^ 1
  2848  0006D2  E098               	bz	i2l767
  2849  0006D4  EF59  F003         	goto	i2l770
  2850                           
  2851                           	line	177
  2852                           	
  2853  0006D8                     i2l764:		; BSR set to: ?
  2854                           
  2855                           	line	178
  2856                           ;main.c: 178: }
  2857  0006D8                     i2l763:
  2858                           			; BSR set to: ?
  2859                           
  2860  0006D8  0012               	return
  2861                           	opt stack 0
  2862                           GLOBAL __end_of_get_speed
  2863  0006DA                     	__end_of_get_speed:
  2864                           	FNSIZE	_get_speed,1,0
  2865                           ; =============== function _get_speed ends =====
                                 =======
  2866                           
  2867                           	signat	_get_speed,88
  2868                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  2869                           	global	intlevel2
  2870                           
  2871                           	opt lm
  2872                           	FNBREAK ___aldiv,intlevel2
  2873                           	global	___aldiv
  2874                           	global	??___aldiv
  2875                           	global	?___aldiv
  2876                           
  2877                           ; *************** function ___aldiv ************
                                 *****
  2878                           ; Defined at:
  2879                           ;		line 5 in file "D:\Program Files\HI-TECH Soft
                                 ware\PICC-18\PRO\9.66\sources\aldiv.c"
  2880                           ; Parameters:
  2881                           ;		dividend       size:   4offs:   0	type: long 
  2882                           ;		divisor        size:   4offs:   4	type: long 
  2883                           ; Auto variables:
  2884                           ;		counter     	       	type: unsigned char 
  2885                           ;		sign        	       	type: unsigned char 
  2886                           ;		quotient    	       	type: long 
  2887                           ; Return value:
  2888                           ;		type: long 
  2889                           ;		size: 4
  2890                           ; Registers used:
  2891                           ;		wreg, status,2, status,0
  2892                           ; Tracked objects:
  2893                           ;		On entry : 0/0
  2894                           ;		On exit  : 0/0
  2895                           ;		Unchanged: 0/0
  2896                           ; Data sizes:
  2897                           ;		Autos:    6
  2898                           ;		Params:   8
  2899                           ;		Temp:     1
  2900                           ;		Total:   15
  2901                           ; This function calls:
  2902                           ;		Nothing
  2903                           ; This function is called by:
  2904                           ;		_get_speed
  2905                           ; This function uses a non-reentrant model
  2906                           ; 
  2907                           	file	"D:\Program Files\HI-TECH Software\PICC-18
                                 \PRO\9.66\sources\aldiv.c"
  2908                           	line	5
  2909  000000                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  2910                           	
  2911  0002C2                     ___aldiv:		; BSR set to: ?
  2912                           
  2913                           	opt stack 28
  2914                           	line	9
  2915  0002C2  0102               	movlb	2	; () banked
  2916  0002C4  6F36               	movwf	(??___aldiv+6+0)&0ffh
  2917  0002C6  0E00               	movlw	low(0)
  2918  0002C8  0102               	movlb	2	; () banked
  2919  0002CA  0102               	movlb	2	; () banked
  2920  0002CC  6F31               	movwf	((___aldiv@sign))&0ffh
  2921  0002CE  0102               	movlb	2	; () banked
  2922  0002D0  5136               	movf	(??___aldiv+6+0)&0ffh,w
  2923                           	line	10
  2924  0002D2  0102               	movlb	2	; () banked
  2925  0002D4  0102               	movlb	2	; () banked
  2926  0002D6  AF2F               	btfss	((___aldiv@divisor+3))&0ffh,7
  2927  0002D8  EF70  F001         	goto	i2u1601
  2928  0002DC  EF72  F001         	goto	i2u1600
  2929  0002E0                     i2u1601:
  2930  0002E0  EF8A  F001         	goto	i2l811
  2931  0002E4                     i2u1600:
  2932                           	line	11
  2933  0002E4  0102               	movlb	2	; () banked
  2934  0002E6  0102               	movlb	2	; () banked
  2935  0002E8  1F2F               	comf	((___aldiv@divisor+3))&0ffh
  2936  0002EA  0102               	movlb	2	; () banked
  2937  0002EC  1F2E               	comf	((___aldiv@divisor+2))&0ffh
  2938  0002EE  0102               	movlb	2	; () banked
  2939  0002F0  1F2D               	comf	((___aldiv@divisor+1))&0ffh
  2940  0002F2  0102               	movlb	2	; () banked
  2941  0002F4  6D2C               	negf	((___aldiv@divisor))&0ffh
  2942  0002F6  0E00               	movlw	0
  2943  0002F8  0102               	movlb	2	; () banked
  2944  0002FA  232D               	addwfc	((___aldiv@divisor+1))&0ffh
  2945  0002FC  0102               	movlb	2	; () banked
  2946  0002FE  232E               	addwfc	((___aldiv@divisor+2))&0ffh
  2947  000300  0102               	movlb	2	; () banked
  2948  000302  232F               	addwfc	((___aldiv@divisor+3))&0ffh
  2949                           	line	12
  2950  000304  0102               	movlb	2	; () banked
  2951  000306  6F36               	movwf	(??___aldiv+6+0)&0ffh
  2952  000308  0E01               	movlw	low(01h)
  2953  00030A  0102               	movlb	2	; () banked
  2954  00030C  0102               	movlb	2	; () banked
  2955  00030E  6F31               	movwf	((___aldiv@sign))&0ffh
  2956  000310  0102               	movlb	2	; () banked
  2957  000312  5136               	movf	(??___aldiv+6+0)&0ffh,w
  2958                           	line	13
  2959                           	
  2960  000314                     i2l811:		; BSR set to: ?
  2961                           
  2962                           	line	14
  2963  000314  0102               	movlb	2	; () banked
  2964  000316  0102               	movlb	2	; () banked
  2965  000318  AF2B               	btfss	((___aldiv@dividend+3))&0ffh,7
  2966  00031A  EF91  F001         	goto	i2u1611
  2967  00031E  EF93  F001         	goto	i2u1610
  2968  000322                     i2u1611:
  2969  000322  EFA7  F001         	goto	i2l812
  2970  000326                     i2u1610:
  2971                           	line	15
  2972  000326  0102               	movlb	2	; () banked
  2973  000328  0102               	movlb	2	; () banked
  2974  00032A  1F2B               	comf	((___aldiv@dividend+3))&0ffh
  2975  00032C  0102               	movlb	2	; () banked
  2976  00032E  1F2A               	comf	((___aldiv@dividend+2))&0ffh
  2977  000330  0102               	movlb	2	; () banked
  2978  000332  1F29               	comf	((___aldiv@dividend+1))&0ffh
  2979  000334  0102               	movlb	2	; () banked
  2980  000336  6D28               	negf	((___aldiv@dividend))&0ffh
  2981  000338  0E00               	movlw	0
  2982  00033A  0102               	movlb	2	; () banked
  2983  00033C  2329               	addwfc	((___aldiv@dividend+1))&0ffh
  2984  00033E  0102               	movlb	2	; () banked
  2985  000340  232A               	addwfc	((___aldiv@dividend+2))&0ffh
  2986  000342  0102               	movlb	2	; () banked
  2987  000344  232B               	addwfc	((___aldiv@dividend+3))&0ffh
  2988                           	line	16
  2989  000346  0E01               	movlw	(01h)&0ffh
  2990  000348  0102               	movlb	2	; () banked
  2991  00034A  0102               	movlb	2	; () banked
  2992  00034C  1B31               	xorwf	((___aldiv@sign))&0ffh
  2993                           	line	17
  2994                           	
  2995  00034E                     i2l812:		; BSR set to: ?
  2996                           
  2997                           	line	18
  2998  00034E  0E00               	movlw	low(0)
  2999  000350  0102               	movlb	2	; () banked
  3000  000352  0102               	movlb	2	; () banked
  3001  000354  6F32               	movwf	((___aldiv@quotient))&0ffh
  3002  000356  0E00               	movlw	high(0)
  3003  000358  0102               	movlb	2	; () banked
  3004  00035A  6F33               	movwf	((___aldiv@quotient+1))&0ffh
  3005  00035C  0E00               	movlw	low highword(0)
  3006  00035E  0102               	movlb	2	; () banked
  3007  000360  6F34               	movwf	((___aldiv@quotient+2))&0ffh
  3008  000362  0E00               	movlw	high highword(0)
  3009  000364  0102               	movlb	2	; () banked
  3010  000366  6F35               	movwf	((___aldiv@quotient+3))&0ffh
  3011                           	line	19
  3012  000368  0102               	movlb	2	; () banked
  3013  00036A  512F               	movf	((___aldiv@divisor+3))&0ffh,w
  3014  00036C  112C               	iorwf ((___aldiv@divisor))&0ffh,w
  3015  00036E  112D               	iorwf ((___aldiv@divisor+1))&0ffh,w
  3016  000370  112E               	iorwf ((___aldiv@divisor+2))&0ffh,w
  3017                           
  3018  000372  B4D8               	btfsc	status,2
  3019  000374  EFBE  F001         	goto	i2u1621
  3020  000378  EFC0  F001         	goto	i2u1620
  3021  00037C                     i2u1621:
  3022  00037C  EF33  F002         	goto	i2l813
  3023  000380                     i2u1620:
  3024                           	line	20
  3025  000380  0102               	movlb	2	; () banked
  3026  000382  6F36               	movwf	(??___aldiv+6+0)&0ffh
  3027  000384  0E01               	movlw	low(01h)
  3028  000386  0102               	movlb	2	; () banked
  3029  000388  0102               	movlb	2	; () banked
  3030  00038A  6F30               	movwf	((___aldiv@counter))&0ffh
  3031  00038C  0102               	movlb	2	; () banked
  3032  00038E  5136               	movf	(??___aldiv+6+0)&0ffh,w
  3033                           	line	21
  3034  000390  EFD7  F001         	goto	i2l814
  3035                           	
  3036  000394                     i2l815:		; BSR set to: ?
  3037                           
  3038                           	line	22
  3039  000394  0102               	movlb	2	; () banked
  3040  000396  90D8               	bcf	status,0
  3041  000398  0102               	movlb	2	; () banked
  3042  00039A  372C               	rlcf	((___aldiv@divisor))&0ffh
  3043  00039C  0102               	movlb	2	; () banked
  3044  00039E  372D               	rlcf	((___aldiv@divisor+1))&0ffh
  3045  0003A0  0102               	movlb	2	; () banked
  3046  0003A2  372E               	rlcf	((___aldiv@divisor+2))&0ffh
  3047  0003A4  0102               	movlb	2	; () banked
  3048  0003A6  372F               	rlcf	((___aldiv@divisor+3))&0ffh
  3049                           	line	23
  3050  0003A8  0102               	movlb	2	; () banked
  3051  0003AA  0102               	movlb	2	; () banked
  3052  0003AC  2B30               	incf	((___aldiv@counter))&0ffh
  3053                           	line	24
  3054                           	
  3055  0003AE                     i2l814:		; BSR set to: ?
  3056                           
  3057                           	line	21
  3058  0003AE  0102               	movlb	2	; () banked
  3059                           	
  3060  0003B0  0102               	movlb	2	; () banked
  3061  0003B2  AF2F               	btfss	((___aldiv@divisor+3))&0ffh,(31)&7
  3062  0003B4  EFDE  F001         	goto	i2u1631
  3063  0003B8  EFE0  F001         	goto	i2u1630
  3064  0003BC                     i2u1631:
  3065  0003BC  EFCA  F001         	goto	i2l815
  3066  0003C0                     i2u1630:
  3067                           	
  3068  0003C0                     i2l816:		; BSR set to: ?
  3069                           
  3070                           	line	25
  3071                           	
  3072  0003C0                     i2l819:		; BSR set to: ?
  3073                           
  3074                           	line	26
  3075  0003C0  0102               	movlb	2	; () banked
  3076  0003C2  90D8               	bcf	status,0
  3077  0003C4  0102               	movlb	2	; () banked
  3078  0003C6  3732               	rlcf	((___aldiv@quotient))&0ffh
  3079  0003C8  0102               	movlb	2	; () banked
  3080  0003CA  3733               	rlcf	((___aldiv@quotient+1))&0ffh
  3081  0003CC  0102               	movlb	2	; () banked
  3082  0003CE  3734               	rlcf	((___aldiv@quotient+2))&0ffh
  3083  0003D0  0102               	movlb	2	; () banked
  3084  0003D2  3735               	rlcf	((___aldiv@quotient+3))&0ffh
  3085                           	line	27
  3086  0003D4  0102               	movlb	2	; () banked
  3087  0003D6  0102               	movlb	2	; () banked
  3088  0003D8  512C               	movf	((___aldiv@divisor))&0ffh,w
  3089  0003DA  0102               	movlb	2	; () banked
  3090  0003DC  0102               	movlb	2	; () banked
  3091  0003DE  5D28               	subwf	((___aldiv@dividend))&0ffh,w
  3092  0003E0  0102               	movlb	2	; () banked
  3093  0003E2  0102               	movlb	2	; () banked
  3094  0003E4  512D               	movf	((___aldiv@divisor+1))&0ffh,w
  3095  0003E6  0102               	movlb	2	; () banked
  3096  0003E8  0102               	movlb	2	; () banked
  3097  0003EA  5929               	subwfb	((___aldiv@dividend+1))&0ffh,w
  3098  0003EC  0102               	movlb	2	; () banked
  3099  0003EE  0102               	movlb	2	; () banked
  3100  0003F0  512E               	movf	((___aldiv@divisor+2))&0ffh,w
  3101  0003F2  0102               	movlb	2	; () banked
  3102  0003F4  0102               	movlb	2	; () banked
  3103  0003F6  592A               	subwfb	((___aldiv@dividend+2))&0ffh,w
  3104  0003F8  0102               	movlb	2	; () banked
  3105  0003FA  0102               	movlb	2	; () banked
  3106  0003FC  512F               	movf	((___aldiv@divisor+3))&0ffh,w
  3107  0003FE  0102               	movlb	2	; () banked
  3108  000400  0102               	movlb	2	; () banked
  3109  000402  592B               	subwfb	((___aldiv@dividend+3))&0ffh,w
  3110  000404  A0D8               	btfss	status,0
  3111  000406  EF07  F002         	goto	i2u1641
  3112  00040A  EF09  F002         	goto	i2u1640
  3113  00040E                     i2u1641:
  3114  00040E  EF24  F002         	goto	i2l820
  3115  000412                     i2u1640:
  3116                           	line	28
  3117  000412  0102               	movlb	2	; () banked
  3118  000414  0102               	movlb	2	; () banked
  3119  000416  512C               	movf	((___aldiv@divisor))&0ffh,w
  3120  000418  0102               	movlb	2	; () banked
  3121  00041A  0102               	movlb	2	; () banked
  3122  00041C  5F28               	subwf	((___aldiv@dividend))&0ffh
  3123  00041E  0102               	movlb	2	; () banked
  3124  000420  0102               	movlb	2	; () banked
  3125  000422  512D               	movf	((___aldiv@divisor+1))&0ffh,w
  3126  000424  0102               	movlb	2	; () banked
  3127  000426  0102               	movlb	2	; () banked
  3128  000428  5B29               	subwfb	((___aldiv@dividend+1))&0ffh
  3129  00042A  0102               	movlb	2	; () banked
  3130  00042C  0102               	movlb	2	; () banked
  3131  00042E  512E               	movf	((___aldiv@divisor+2))&0ffh,w
  3132  000430  0102               	movlb	2	; () banked
  3133  000432  0102               	movlb	2	; () banked
  3134  000434  5B2A               	subwfb	((___aldiv@dividend+2))&0ffh
  3135  000436  0102               	movlb	2	; () banked
  3136  000438  0102               	movlb	2	; () banked
  3137  00043A  512F               	movf	((___aldiv@divisor+3))&0ffh,w
  3138  00043C  0102               	movlb	2	; () banked
  3139  00043E  0102               	movlb	2	; () banked
  3140  000440  5B2B               	subwfb	((___aldiv@dividend+3))&0ffh
  3141                           	line	29
  3142  000442  0102               	movlb	2	; () banked
  3143  000444  0102               	movlb	2	; () banked
  3144  000446  8132               	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
  3145                           	line	30
  3146                           	
  3147  000448                     i2l820:		; BSR set to: ?
  3148                           
  3149                           	line	31
  3150  000448  0102               	movlb	2	; () banked
  3151  00044A  90D8               	bcf	status,0
  3152  00044C  0102               	movlb	2	; () banked
  3153  00044E  332F               	rrcf	((___aldiv@divisor+3))&0ffh
  3154  000450  0102               	movlb	2	; () banked
  3155  000452  332E               	rrcf	((___aldiv@divisor+2))&0ffh
  3156  000454  0102               	movlb	2	; () banked
  3157  000456  332D               	rrcf	((___aldiv@divisor+1))&0ffh
  3158  000458  0102               	movlb	2	; () banked
  3159  00045A  332C               	rrcf	((___aldiv@divisor))&0ffh
  3160                           	line	32
  3161  00045C  0102               	movlb	2	; () banked
  3162  00045E  0102               	movlb	2	; () banked
  3163  000460  2F30               	decfsz	((___aldiv@counter))&0ffh
  3164                           	
  3165  000462  EFE0  F001         	goto	i2l819
  3166                           	
  3167  000466                     i2l818:		; BSR set to: ?
  3168                           
  3169                           	line	33
  3170                           	
  3171  000466                     i2l813:		; BSR set to: ?
  3172                           
  3173                           	line	34
  3174  000466  0102               	movlb	2	; () banked
  3175  000468  0102               	movlb	2	; () banked
  3176  00046A  5131               	movf	((___aldiv@sign))&0ffh,w
  3177  00046C  B4D8               	btfsc	status,2
  3178  00046E  EF3B  F002         	goto	i2u1651
  3179  000472  EF3D  F002         	goto	i2u1650
  3180  000476                     i2u1651:
  3181  000476  EF4D  F002         	goto	i2l821
  3182  00047A                     i2u1650:
  3183                           	line	35
  3184  00047A  0102               	movlb	2	; () banked
  3185  00047C  0102               	movlb	2	; () banked
  3186  00047E  1F35               	comf	((___aldiv@quotient+3))&0ffh
  3187  000480  0102               	movlb	2	; () banked
  3188  000482  1F34               	comf	((___aldiv@quotient+2))&0ffh
  3189  000484  0102               	movlb	2	; () banked
  3190  000486  1F33               	comf	((___aldiv@quotient+1))&0ffh
  3191  000488  0102               	movlb	2	; () banked
  3192  00048A  6D32               	negf	((___aldiv@quotient))&0ffh
  3193  00048C  0E00               	movlw	0
  3194  00048E  0102               	movlb	2	; () banked
  3195  000490  2333               	addwfc	((___aldiv@quotient+1))&0ffh
  3196  000492  0102               	movlb	2	; () banked
  3197  000494  2334               	addwfc	((___aldiv@quotient+2))&0ffh
  3198  000496  0102               	movlb	2	; () banked
  3199  000498  2335               	addwfc	((___aldiv@quotient+3))&0ffh
  3200                           	
  3201  00049A                     i2l821:		; BSR set to: ?
  3202                           
  3203                           	line	36
  3204  00049A  C232  F228         	movff	(___aldiv@quotient),(?___aldiv)
  3205  00049E  C233  F229         	movff	(___aldiv@quotient+1),(?___aldiv+1)
  3206  0004A2  C234  F22A         	movff	(___aldiv@quotient+2),(?___aldiv+2)
  3207  0004A6  C235  F22B         	movff	(___aldiv@quotient+3),(?___aldiv+3)
  3208  0004AA  EF57  F002         	goto	i2l810
  3209                           	line	37
  3210  0004AE                     i2l810:
  3211                           			; BSR set to: ?
  3212                           
  3213  0004AE  0012               	return
  3214                           	opt stack 0
  3215                           GLOBAL __end_of___aldiv
  3216  0004B0                     	__end_of___aldiv:
  3217                           	FNSIZE	___aldiv,7,8
  3218                           ; =============== function ___aldiv ends =======
                                 =====
  3219                           
  3220                           	signat	___aldiv,8316
  3221                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  3222                           	global	intlevel2
  3223                           
  3224                           	opt lm
  3225                           	FNBREAK _start_timer3,intlevel2
  3226                           	global	_start_timer3
  3227                           	global	??_start_timer3
  3228                           	global	?_start_timer3
  3229                           
  3230                           ; *************** function _start_timer3 *******
                                 **********
  3231                           ; Defined at:
  3232                           ;		line 181 in file "../main.c"
  3233                           ; Parameters:
  3234                           ;		None
  3235                           ; Auto variables:
  3236                           ;		None
  3237                           ; Return value:
  3238                           ;		type: void 
  3239                           ;		size: 0
  3240                           ; Registers used:
  3241                           ;		wreg, status,2
  3242                           ; Tracked objects:
  3243                           ;		On entry : 0/0
  3244                           ;		On exit  : 0/0
  3245                           ;		Unchanged: 0/0
  3246                           ; Data sizes:
  3247                           ;		Autos:    0
  3248                           ;		Params:   0
  3249                           ;		Temp:     0
  3250                           ;		Total:    0
  3251                           ; This function calls:
  3252                           ;		Nothing
  3253                           ; This function is called by:
  3254                           ;		_get_speed
  3255                           ; This function uses a non-reentrant model
  3256                           ; 
  3257                           	file	"../main.c"
  3258                           	line	181
  3259  000000                     	__size_of_start_timer3	equ	__end_of_start_timer
                                 3-_start_timer3
  3260                           ;main.c: 180: void start_timer3(void)
  3261                           ;main.c: 181: {
  3262                           	
  3263  000CAE                     _start_timer3:		; BSR set to: ?
  3264                           
  3265                           	opt stack 28
  3266                           	line	182
  3267                           ;main.c: 182: TMR3 = 65535-11059;
  3268  000CAE  0ECC               	movlw	low(0D4CCh)
  3269  000CB0  6EB2               	movwf	((c:4018)),c	;volatile
  3270  000CB2  0ED4               	movlw	high(0D4CCh)
  3271  000CB4  6EB3               	movwf	((c:4018+1)),c	;volatile
  3272                           	line	183
  3273                           ;main.c: 183: TMR3ON = 1;
  3274  000CB6  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
  3275                           	line	184
  3276                           ;main.c: 184: }
  3277  000CB8                     i2l771:
  3278                           			; BSR set to: ?
  3279                           
  3280  000CB8  0012               	return
  3281                           	opt stack 0
  3282                           GLOBAL __end_of_start_timer3
  3283  000CBA                     	__end_of_start_timer3:
  3284                           	FNSIZE	_start_timer3,0,0
  3285                           ; =============== function _start_timer3 ends ==
                                 ==========
  3286                           
  3287                           	signat	_start_timer3,88
  3288                                   psect   text17,class=CODE,space=0,reloc=
                                 2
  3289                           	global	intlevel2
  3290                           
  3291                           	opt lm
  3292                           	FNBREAK _stop_timer3,intlevel2
  3293                           	global	_stop_timer3
  3294                           	global	??_stop_timer3
  3295                           	global	?_stop_timer3
  3296                           
  3297                           ; *************** function _stop_timer3 ********
                                 *********
  3298                           ; Defined at:
  3299                           ;		line 186 in file "../main.c"
  3300                           ; Parameters:
  3301                           ;		None
  3302                           ; Auto variables:
  3303                           ;		None
  3304                           ; Return value:
  3305                           ;		type: void 
  3306                           ;		size: 0
  3307                           ; Registers used:
  3308                           ;		wreg, status,2
  3309                           ; Tracked objects:
  3310                           ;		On entry : 0/0
  3311                           ;		On exit  : 0/0
  3312                           ;		Unchanged: 0/0
  3313                           ; Data sizes:
  3314                           ;		Autos:    0
  3315                           ;		Params:   0
  3316                           ;		Temp:     0
  3317                           ;		Total:    0
  3318                           ; This function calls:
  3319                           ;		Nothing
  3320                           ; This function is called by:
  3321                           ;		_get_speed
  3322                           ; This function uses a non-reentrant model
  3323                           ; 
  3324                           	file	"../main.c"
  3325                           	line	186
  3326  000000                     	__size_of_stop_timer3	equ	__end_of_stop_timer3-
                                 _stop_timer3
  3327                           ;main.c: 185: void stop_timer3(void)
  3328                           ;main.c: 186: {
  3329                           	
  3330  000CA2                     _stop_timer3:		; BSR set to: ?
  3331                           
  3332                           	opt stack 28
  3333                           	line	187
  3334                           ;main.c: 187: TMR3ON = 0;
  3335  000CA2  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
  3336                           	line	188
  3337                           ;main.c: 188: TMR3 = 65535-11059;
  3338  000CA4  0ECC               	movlw	low(0D4CCh)
  3339  000CA6  6EB2               	movwf	((c:4018)),c	;volatile
  3340  000CA8  0ED4               	movlw	high(0D4CCh)
  3341  000CAA  6EB3               	movwf	((c:4018+1)),c	;volatile
  3342                           	line	189
  3343                           ;main.c: 189: }
  3344  000CAC                     i2l772:
  3345                           			; BSR set to: ?
  3346                           
  3347  000CAC  0012               	return
  3348                           	opt stack 0
  3349                           GLOBAL __end_of_stop_timer3
  3350  000CAE                     	__end_of_stop_timer3:
  3351                           	FNSIZE	_stop_timer3,0,0
  3352                           ; =============== function _stop_timer3 ends ===
                                 =========
  3353                           
  3354                           	signat	_stop_timer3,88
  3355                           	FNCALL	_main,_init_timer3
  3356                           	FNCALL	_main,_init_pv1
  3357                           	FNCALL	_main,_modbus_receive
  3358                           	FNCALL	_modbus_receive,_modbus_crc16
  3359                           	FNCALL	_modbus_receive,_read_holding_regs
  3360                           	FNCALL	_modbus_receive,_write_single_holding_re
                                 g
  3361                           	FNCALL	_read_holding_regs,_modbus_crc16
  3362                           	FNROOT	_main
  3363                           	FNCALL	_my_isr,_rec_isr
  3364                           	FNCALL	_my_isr,_tx_isr
  3365                           	FNCALL	_my_isr,_timer35_isr
  3366                           	FNCALL	_my_isr,_timer3_isr
  3367                           	FNCALL	_my_isr,_pv1_isr
  3368                           	FNCALL	_my_isr,_timer0_isr
  3369                           	FNCALL	_pv1_isr,_get_speed
  3370                           	FNCALL	_get_speed,_start_timer3
  3371                           	FNCALL	_get_speed,_stop_timer3
  3372                           	FNCALL	_get_speed,___aldiv
  3373                           	FNCALL	intlevel2,_my_isr
  3374                           	global	intlevel2
  3375                           	FNROOT	intlevel2
  3376                           	global	F3893
  3377                                   psect   text18,class=CODE,space=0,reloc=
                                 2
  3378  000000                     F3893  equ     113
  3379                           
  3380                           	opt lm
  3381                           
  3382                           	DABS	1,113,1	;F3893
  3383                                   psect   idata,class=CODE,space=0
  3384                           	line	148
  3385                           
  3386                           ;initializer for F3893
  3387  00006A  01                 	db	low(01h)
  3388                                   psect   mediumconst,class=MEDIUMCONST,sp
                                 ace=0,reloc=2
  3389                           	global	_aucCRCHi
  3390                           	file	"../mbcrc.c"
  3391                           	line	2
  3392  007DFE                     _aucCRCHi:
  3393  007DFE  00                 	db	low(0)
  3394  007DFF  C1                 	db	low(0C1h)
  3395  007E00  81                 	db	low(081h)
  3396  007E01  40                 	db	low(040h)
  3397  007E02  01                 	db	low(01h)
  3398  007E03  C0                 	db	low(0C0h)
  3399  007E04  80                 	db	low(080h)
  3400  007E05  41                 	db	low(041h)
  3401  007E06  01                 	db	low(01h)
  3402  007E07  C0                 	db	low(0C0h)
  3403  007E08  80                 	db	low(080h)
  3404  007E09  41                 	db	low(041h)
  3405  007E0A  00                 	db	low(0)
  3406  007E0B  C1                 	db	low(0C1h)
  3407  007E0C  81                 	db	low(081h)
  3408  007E0D  40                 	db	low(040h)
  3409  007E0E  01                 	db	low(01h)
  3410  007E0F  C0                 	db	low(0C0h)
  3411  007E10  80                 	db	low(080h)
  3412  007E11  41                 	db	low(041h)
  3413  007E12  00                 	db	low(0)
  3414  007E13  C1                 	db	low(0C1h)
  3415  007E14  81                 	db	low(081h)
  3416  007E15  40                 	db	low(040h)
  3417  007E16  00                 	db	low(0)
  3418  007E17  C1                 	db	low(0C1h)
  3419  007E18  81                 	db	low(081h)
  3420  007E19  40                 	db	low(040h)
  3421  007E1A  01                 	db	low(01h)
  3422  007E1B  C0                 	db	low(0C0h)
  3423  007E1C  80                 	db	low(080h)
  3424  007E1D  41                 	db	low(041h)
  3425  007E1E  01                 	db	low(01h)
  3426  007E1F  C0                 	db	low(0C0h)
  3427  007E20  80                 	db	low(080h)
  3428  007E21  41                 	db	low(041h)
  3429  007E22  00                 	db	low(0)
  3430  007E23  C1                 	db	low(0C1h)
  3431  007E24  81                 	db	low(081h)
  3432  007E25  40                 	db	low(040h)
  3433  007E26  00                 	db	low(0)
  3434  007E27  C1                 	db	low(0C1h)
  3435  007E28  81                 	db	low(081h)
  3436  007E29  40                 	db	low(040h)
  3437  007E2A  01                 	db	low(01h)
  3438  007E2B  C0                 	db	low(0C0h)
  3439  007E2C  80                 	db	low(080h)
  3440  007E2D  41                 	db	low(041h)
  3441  007E2E  00                 	db	low(0)
  3442  007E2F  C1                 	db	low(0C1h)
  3443  007E30  81                 	db	low(081h)
  3444  007E31  40                 	db	low(040h)
  3445  007E32  01                 	db	low(01h)
  3446  007E33  C0                 	db	low(0C0h)
  3447  007E34  80                 	db	low(080h)
  3448  007E35  41                 	db	low(041h)
  3449  007E36  01                 	db	low(01h)
  3450  007E37  C0                 	db	low(0C0h)
  3451  007E38  80                 	db	low(080h)
  3452  007E39  41                 	db	low(041h)
  3453  007E3A  00                 	db	low(0)
  3454  007E3B  C1                 	db	low(0C1h)
  3455  007E3C  81                 	db	low(081h)
  3456  007E3D  40                 	db	low(040h)
  3457  007E3E  01                 	db	low(01h)
  3458  007E3F  C0                 	db	low(0C0h)
  3459  007E40  80                 	db	low(080h)
  3460  007E41  41                 	db	low(041h)
  3461  007E42  00                 	db	low(0)
  3462  007E43  C1                 	db	low(0C1h)
  3463  007E44  81                 	db	low(081h)
  3464  007E45  40                 	db	low(040h)
  3465  007E46  00                 	db	low(0)
  3466  007E47  C1                 	db	low(0C1h)
  3467  007E48  81                 	db	low(081h)
  3468  007E49  40                 	db	low(040h)
  3469  007E4A  01                 	db	low(01h)
  3470  007E4B  C0                 	db	low(0C0h)
  3471  007E4C  80                 	db	low(080h)
  3472  007E4D  41                 	db	low(041h)
  3473  007E4E  00                 	db	low(0)
  3474  007E4F  C1                 	db	low(0C1h)
  3475  007E50  81                 	db	low(081h)
  3476  007E51  40                 	db	low(040h)
  3477  007E52  01                 	db	low(01h)
  3478  007E53  C0                 	db	low(0C0h)
  3479  007E54  80                 	db	low(080h)
  3480  007E55  41                 	db	low(041h)
  3481  007E56  01                 	db	low(01h)
  3482  007E57  C0                 	db	low(0C0h)
  3483  007E58  80                 	db	low(080h)
  3484  007E59  41                 	db	low(041h)
  3485  007E5A  00                 	db	low(0)
  3486  007E5B  C1                 	db	low(0C1h)
  3487  007E5C  81                 	db	low(081h)
  3488  007E5D  40                 	db	low(040h)
  3489  007E5E  00                 	db	low(0)
  3490  007E5F  C1                 	db	low(0C1h)
  3491  007E60  81                 	db	low(081h)
  3492  007E61  40                 	db	low(040h)
  3493  007E62  01                 	db	low(01h)
  3494  007E63  C0                 	db	low(0C0h)
  3495  007E64  80                 	db	low(080h)
  3496  007E65  41                 	db	low(041h)
  3497  007E66  01                 	db	low(01h)
  3498  007E67  C0                 	db	low(0C0h)
  3499  007E68  80                 	db	low(080h)
  3500  007E69  41                 	db	low(041h)
  3501  007E6A  00                 	db	low(0)
  3502  007E6B  C1                 	db	low(0C1h)
  3503  007E6C  81                 	db	low(081h)
  3504  007E6D  40                 	db	low(040h)
  3505  007E6E  01                 	db	low(01h)
  3506  007E6F  C0                 	db	low(0C0h)
  3507  007E70  80                 	db	low(080h)
  3508  007E71  41                 	db	low(041h)
  3509  007E72  00                 	db	low(0)
  3510  007E73  C1                 	db	low(0C1h)
  3511  007E74  81                 	db	low(081h)
  3512  007E75  40                 	db	low(040h)
  3513  007E76  00                 	db	low(0)
  3514  007E77  C1                 	db	low(0C1h)
  3515  007E78  81                 	db	low(081h)
  3516  007E79  40                 	db	low(040h)
  3517  007E7A  01                 	db	low(01h)
  3518  007E7B  C0                 	db	low(0C0h)
  3519  007E7C  80                 	db	low(080h)
  3520  007E7D  41                 	db	low(041h)
  3521  007E7E  01                 	db	low(01h)
  3522  007E7F  C0                 	db	low(0C0h)
  3523  007E80  80                 	db	low(080h)
  3524  007E81  41                 	db	low(041h)
  3525  007E82  00                 	db	low(0)
  3526  007E83  C1                 	db	low(0C1h)
  3527  007E84  81                 	db	low(081h)
  3528  007E85  40                 	db	low(040h)
  3529  007E86  00                 	db	low(0)
  3530  007E87  C1                 	db	low(0C1h)
  3531  007E88  81                 	db	low(081h)
  3532  007E89  40                 	db	low(040h)
  3533  007E8A  01                 	db	low(01h)
  3534  007E8B  C0                 	db	low(0C0h)
  3535  007E8C  80                 	db	low(080h)
  3536  007E8D  41                 	db	low(041h)
  3537  007E8E  00                 	db	low(0)
  3538  007E8F  C1                 	db	low(0C1h)
  3539  007E90  81                 	db	low(081h)
  3540  007E91  40                 	db	low(040h)
  3541  007E92  01                 	db	low(01h)
  3542  007E93  C0                 	db	low(0C0h)
  3543  007E94  80                 	db	low(080h)
  3544  007E95  41                 	db	low(041h)
  3545  007E96  01                 	db	low(01h)
  3546  007E97  C0                 	db	low(0C0h)
  3547  007E98  80                 	db	low(080h)
  3548  007E99  41                 	db	low(041h)
  3549  007E9A  00                 	db	low(0)
  3550  007E9B  C1                 	db	low(0C1h)
  3551  007E9C  81                 	db	low(081h)
  3552  007E9D  40                 	db	low(040h)
  3553  007E9E  00                 	db	low(0)
  3554  007E9F  C1                 	db	low(0C1h)
  3555  007EA0  81                 	db	low(081h)
  3556  007EA1  40                 	db	low(040h)
  3557  007EA2  01                 	db	low(01h)
  3558  007EA3  C0                 	db	low(0C0h)
  3559  007EA4  80                 	db	low(080h)
  3560  007EA5  41                 	db	low(041h)
  3561  007EA6  01                 	db	low(01h)
  3562  007EA7  C0                 	db	low(0C0h)
  3563  007EA8  80                 	db	low(080h)
  3564  007EA9  41                 	db	low(041h)
  3565  007EAA  00                 	db	low(0)
  3566  007EAB  C1                 	db	low(0C1h)
  3567  007EAC  81                 	db	low(081h)
  3568  007EAD  40                 	db	low(040h)
  3569  007EAE  01                 	db	low(01h)
  3570  007EAF  C0                 	db	low(0C0h)
  3571  007EB0  80                 	db	low(080h)
  3572  007EB1  41                 	db	low(041h)
  3573  007EB2  00                 	db	low(0)
  3574  007EB3  C1                 	db	low(0C1h)
  3575  007EB4  81                 	db	low(081h)
  3576  007EB5  40                 	db	low(040h)
  3577  007EB6  00                 	db	low(0)
  3578  007EB7  C1                 	db	low(0C1h)
  3579  007EB8  81                 	db	low(081h)
  3580  007EB9  40                 	db	low(040h)
  3581  007EBA  01                 	db	low(01h)
  3582  007EBB  C0                 	db	low(0C0h)
  3583  007EBC  80                 	db	low(080h)
  3584  007EBD  41                 	db	low(041h)
  3585  007EBE  00                 	db	low(0)
  3586  007EBF  C1                 	db	low(0C1h)
  3587  007EC0  81                 	db	low(081h)
  3588  007EC1  40                 	db	low(040h)
  3589  007EC2  01                 	db	low(01h)
  3590  007EC3  C0                 	db	low(0C0h)
  3591  007EC4  80                 	db	low(080h)
  3592  007EC5  41                 	db	low(041h)
  3593  007EC6  01                 	db	low(01h)
  3594  007EC7  C0                 	db	low(0C0h)
  3595  007EC8  80                 	db	low(080h)
  3596  007EC9  41                 	db	low(041h)
  3597  007ECA  00                 	db	low(0)
  3598  007ECB  C1                 	db	low(0C1h)
  3599  007ECC  81                 	db	low(081h)
  3600  007ECD  40                 	db	low(040h)
  3601  007ECE  01                 	db	low(01h)
  3602  007ECF  C0                 	db	low(0C0h)
  3603  007ED0  80                 	db	low(080h)
  3604  007ED1  41                 	db	low(041h)
  3605  007ED2  00                 	db	low(0)
  3606  007ED3  C1                 	db	low(0C1h)
  3607  007ED4  81                 	db	low(081h)
  3608  007ED5  40                 	db	low(040h)
  3609  007ED6  00                 	db	low(0)
  3610  007ED7  C1                 	db	low(0C1h)
  3611  007ED8  81                 	db	low(081h)
  3612  007ED9  40                 	db	low(040h)
  3613  007EDA  01                 	db	low(01h)
  3614  007EDB  C0                 	db	low(0C0h)
  3615  007EDC  80                 	db	low(080h)
  3616  007EDD  41                 	db	low(041h)
  3617  007EDE  01                 	db	low(01h)
  3618  007EDF  C0                 	db	low(0C0h)
  3619  007EE0  80                 	db	low(080h)
  3620  007EE1  41                 	db	low(041h)
  3621  007EE2  00                 	db	low(0)
  3622  007EE3  C1                 	db	low(0C1h)
  3623  007EE4  81                 	db	low(081h)
  3624  007EE5  40                 	db	low(040h)
  3625  007EE6  00                 	db	low(0)
  3626  007EE7  C1                 	db	low(0C1h)
  3627  007EE8  81                 	db	low(081h)
  3628  007EE9  40                 	db	low(040h)
  3629  007EEA  01                 	db	low(01h)
  3630  007EEB  C0                 	db	low(0C0h)
  3631  007EEC  80                 	db	low(080h)
  3632  007EED  41                 	db	low(041h)
  3633  007EEE  00                 	db	low(0)
  3634  007EEF  C1                 	db	low(0C1h)
  3635  007EF0  81                 	db	low(081h)
  3636  007EF1  40                 	db	low(040h)
  3637  007EF2  01                 	db	low(01h)
  3638  007EF3  C0                 	db	low(0C0h)
  3639  007EF4  80                 	db	low(080h)
  3640  007EF5  41                 	db	low(041h)
  3641  007EF6  01                 	db	low(01h)
  3642  007EF7  C0                 	db	low(0C0h)
  3643  007EF8  80                 	db	low(080h)
  3644  007EF9  41                 	db	low(041h)
  3645  007EFA  00                 	db	low(0)
  3646  007EFB  C1                 	db	low(0C1h)
  3647  007EFC  81                 	db	low(081h)
  3648  007EFD  40                 	db	low(040h)
  3649                           	global	_aucCRCLo
  3650                           	line	27
  3651  007EFE                     _aucCRCLo:
  3652  007EFE  00                 	db	low(0)
  3653  007EFF  C0                 	db	low(0C0h)
  3654  007F00  C1                 	db	low(0C1h)
  3655  007F01  01                 	db	low(01h)
  3656  007F02  C3                 	db	low(0C3h)
  3657  007F03  03                 	db	low(03h)
  3658  007F04  02                 	db	low(02h)
  3659  007F05  C2                 	db	low(0C2h)
  3660  007F06  C6                 	db	low(0C6h)
  3661  007F07  06                 	db	low(06h)
  3662  007F08  07                 	db	low(07h)
  3663  007F09  C7                 	db	low(0C7h)
  3664  007F0A  05                 	db	low(05h)
  3665  007F0B  C5                 	db	low(0C5h)
  3666  007F0C  C4                 	db	low(0C4h)
  3667  007F0D  04                 	db	low(04h)
  3668  007F0E  CC                 	db	low(0CCh)
  3669  007F0F  0C                 	db	low(0Ch)
  3670  007F10  0D                 	db	low(0Dh)
  3671  007F11  CD                 	db	low(0CDh)
  3672  007F12  0F                 	db	low(0Fh)
  3673  007F13  CF                 	db	low(0CFh)
  3674  007F14  CE                 	db	low(0CEh)
  3675  007F15  0E                 	db	low(0Eh)
  3676  007F16  0A                 	db	low(0Ah)
  3677  007F17  CA                 	db	low(0CAh)
  3678  007F18  CB                 	db	low(0CBh)
  3679  007F19  0B                 	db	low(0Bh)
  3680  007F1A  C9                 	db	low(0C9h)
  3681  007F1B  09                 	db	low(09h)
  3682  007F1C  08                 	db	low(08h)
  3683  007F1D  C8                 	db	low(0C8h)
  3684  007F1E  D8                 	db	low(0D8h)
  3685  007F1F  18                 	db	low(018h)
  3686  007F20  19                 	db	low(019h)
  3687  007F21  D9                 	db	low(0D9h)
  3688  007F22  1B                 	db	low(01Bh)
  3689  007F23  DB                 	db	low(0DBh)
  3690  007F24  DA                 	db	low(0DAh)
  3691  007F25  1A                 	db	low(01Ah)
  3692  007F26  1E                 	db	low(01Eh)
  3693  007F27  DE                 	db	low(0DEh)
  3694  007F28  DF                 	db	low(0DFh)
  3695  007F29  1F                 	db	low(01Fh)
  3696  007F2A  DD                 	db	low(0DDh)
  3697  007F2B  1D                 	db	low(01Dh)
  3698  007F2C  1C                 	db	low(01Ch)
  3699  007F2D  DC                 	db	low(0DCh)
  3700  007F2E  14                 	db	low(014h)
  3701  007F2F  D4                 	db	low(0D4h)
  3702  007F30  D5                 	db	low(0D5h)
  3703  007F31  15                 	db	low(015h)
  3704  007F32  D7                 	db	low(0D7h)
  3705  007F33  17                 	db	low(017h)
  3706  007F34  16                 	db	low(016h)
  3707  007F35  D6                 	db	low(0D6h)
  3708  007F36  D2                 	db	low(0D2h)
  3709  007F37  12                 	db	low(012h)
  3710  007F38  13                 	db	low(013h)
  3711  007F39  D3                 	db	low(0D3h)
  3712  007F3A  11                 	db	low(011h)
  3713  007F3B  D1                 	db	low(0D1h)
  3714  007F3C  D0                 	db	low(0D0h)
  3715  007F3D  10                 	db	low(010h)
  3716  007F3E  F0                 	db	low(0F0h)
  3717  007F3F  30                 	db	low(030h)
  3718  007F40  31                 	db	low(031h)
  3719  007F41  F1                 	db	low(0F1h)
  3720  007F42  33                 	db	low(033h)
  3721  007F43  F3                 	db	low(0F3h)
  3722  007F44  F2                 	db	low(0F2h)
  3723  007F45  32                 	db	low(032h)
  3724  007F46  36                 	db	low(036h)
  3725  007F47  F6                 	db	low(0F6h)
  3726  007F48  F7                 	db	low(0F7h)
  3727  007F49  37                 	db	low(037h)
  3728  007F4A  F5                 	db	low(0F5h)
  3729  007F4B  35                 	db	low(035h)
  3730  007F4C  34                 	db	low(034h)
  3731  007F4D  F4                 	db	low(0F4h)
  3732  007F4E  3C                 	db	low(03Ch)
  3733  007F4F  FC                 	db	low(0FCh)
  3734  007F50  FD                 	db	low(0FDh)
  3735  007F51  3D                 	db	low(03Dh)
  3736  007F52  FF                 	db	low(0FFh)
  3737  007F53  3F                 	db	low(03Fh)
  3738  007F54  3E                 	db	low(03Eh)
  3739  007F55  FE                 	db	low(0FEh)
  3740  007F56  FA                 	db	low(0FAh)
  3741  007F57  3A                 	db	low(03Ah)
  3742  007F58  3B                 	db	low(03Bh)
  3743  007F59  FB                 	db	low(0FBh)
  3744  007F5A  39                 	db	low(039h)
  3745  007F5B  F9                 	db	low(0F9h)
  3746  007F5C  F8                 	db	low(0F8h)
  3747  007F5D  38                 	db	low(038h)
  3748  007F5E  28                 	db	low(028h)
  3749  007F5F  E8                 	db	low(0E8h)
  3750  007F60  E9                 	db	low(0E9h)
  3751  007F61  29                 	db	low(029h)
  3752  007F62  EB                 	db	low(0EBh)
  3753  007F63  2B                 	db	low(02Bh)
  3754  007F64  2A                 	db	low(02Ah)
  3755  007F65  EA                 	db	low(0EAh)
  3756  007F66  EE                 	db	low(0EEh)
  3757  007F67  2E                 	db	low(02Eh)
  3758  007F68  2F                 	db	low(02Fh)
  3759  007F69  EF                 	db	low(0EFh)
  3760  007F6A  2D                 	db	low(02Dh)
  3761  007F6B  ED                 	db	low(0EDh)
  3762  007F6C  EC                 	db	low(0ECh)
  3763  007F6D  2C                 	db	low(02Ch)
  3764  007F6E  E4                 	db	low(0E4h)
  3765  007F6F  24                 	db	low(024h)
  3766  007F70  25                 	db	low(025h)
  3767  007F71  E5                 	db	low(0E5h)
  3768  007F72  27                 	db	low(027h)
  3769  007F73  E7                 	db	low(0E7h)
  3770  007F74  E6                 	db	low(0E6h)
  3771  007F75  26                 	db	low(026h)
  3772  007F76  22                 	db	low(022h)
  3773  007F77  E2                 	db	low(0E2h)
  3774  007F78  E3                 	db	low(0E3h)
  3775  007F79  23                 	db	low(023h)
  3776  007F7A  E1                 	db	low(0E1h)
  3777  007F7B  21                 	db	low(021h)
  3778  007F7C  20                 	db	low(020h)
  3779  007F7D  E0                 	db	low(0E0h)
  3780  007F7E  A0                 	db	low(0A0h)
  3781  007F7F  60                 	db	low(060h)
  3782  007F80  61                 	db	low(061h)
  3783  007F81  A1                 	db	low(0A1h)
  3784  007F82  63                 	db	low(063h)
  3785  007F83  A3                 	db	low(0A3h)
  3786  007F84  A2                 	db	low(0A2h)
  3787  007F85  62                 	db	low(062h)
  3788  007F86  66                 	db	low(066h)
  3789  007F87  A6                 	db	low(0A6h)
  3790  007F88  A7                 	db	low(0A7h)
  3791  007F89  67                 	db	low(067h)
  3792  007F8A  A5                 	db	low(0A5h)
  3793  007F8B  65                 	db	low(065h)
  3794  007F8C  64                 	db	low(064h)
  3795  007F8D  A4                 	db	low(0A4h)
  3796  007F8E  6C                 	db	low(06Ch)
  3797  007F8F  AC                 	db	low(0ACh)
  3798  007F90  AD                 	db	low(0ADh)
  3799  007F91  6D                 	db	low(06Dh)
  3800  007F92  AF                 	db	low(0AFh)
  3801  007F93  6F                 	db	low(06Fh)
  3802  007F94  6E                 	db	low(06Eh)
  3803  007F95  AE                 	db	low(0AEh)
  3804  007F96  AA                 	db	low(0AAh)
  3805  007F97  6A                 	db	low(06Ah)
  3806  007F98  6B                 	db	low(06Bh)
  3807  007F99  AB                 	db	low(0ABh)
  3808  007F9A  69                 	db	low(069h)
  3809  007F9B  A9                 	db	low(0A9h)
  3810  007F9C  A8                 	db	low(0A8h)
  3811  007F9D  68                 	db	low(068h)
  3812  007F9E  78                 	db	low(078h)
  3813  007F9F  B8                 	db	low(0B8h)
  3814  007FA0  B9                 	db	low(0B9h)
  3815  007FA1  79                 	db	low(079h)
  3816  007FA2  BB                 	db	low(0BBh)
  3817  007FA3  7B                 	db	low(07Bh)
  3818  007FA4  7A                 	db	low(07Ah)
  3819  007FA5  BA                 	db	low(0BAh)
  3820  007FA6  BE                 	db	low(0BEh)
  3821  007FA7  7E                 	db	low(07Eh)
  3822  007FA8  7F                 	db	low(07Fh)
  3823  007FA9  BF                 	db	low(0BFh)
  3824  007FAA  7D                 	db	low(07Dh)
  3825  007FAB  BD                 	db	low(0BDh)
  3826  007FAC  BC                 	db	low(0BCh)
  3827  007FAD  7C                 	db	low(07Ch)
  3828  007FAE  B4                 	db	low(0B4h)
  3829  007FAF  74                 	db	low(074h)
  3830  007FB0  75                 	db	low(075h)
  3831  007FB1  B5                 	db	low(0B5h)
  3832  007FB2  77                 	db	low(077h)
  3833  007FB3  B7                 	db	low(0B7h)
  3834  007FB4  B6                 	db	low(0B6h)
  3835  007FB5  76                 	db	low(076h)
  3836  007FB6  72                 	db	low(072h)
  3837  007FB7  B2                 	db	low(0B2h)
  3838  007FB8  B3                 	db	low(0B3h)
  3839  007FB9  73                 	db	low(073h)
  3840  007FBA  B1                 	db	low(0B1h)
  3841  007FBB  71                 	db	low(071h)
  3842  007FBC  70                 	db	low(070h)
  3843  007FBD  B0                 	db	low(0B0h)
  3844  007FBE  50                 	db	low(050h)
  3845  007FBF  90                 	db	low(090h)
  3846  007FC0  91                 	db	low(091h)
  3847  007FC1  51                 	db	low(051h)
  3848  007FC2  93                 	db	low(093h)
  3849  007FC3  53                 	db	low(053h)
  3850  007FC4  52                 	db	low(052h)
  3851  007FC5  92                 	db	low(092h)
  3852  007FC6  96                 	db	low(096h)
  3853  007FC7  56                 	db	low(056h)
  3854  007FC8  57                 	db	low(057h)
  3855  007FC9  97                 	db	low(097h)
  3856  007FCA  55                 	db	low(055h)
  3857  007FCB  95                 	db	low(095h)
  3858  007FCC  94                 	db	low(094h)
  3859  007FCD  54                 	db	low(054h)
  3860  007FCE  9C                 	db	low(09Ch)
  3861  007FCF  5C                 	db	low(05Ch)
  3862  007FD0  5D                 	db	low(05Dh)
  3863  007FD1  9D                 	db	low(09Dh)
  3864  007FD2  5F                 	db	low(05Fh)
  3865  007FD3  9F                 	db	low(09Fh)
  3866  007FD4  9E                 	db	low(09Eh)
  3867  007FD5  5E                 	db	low(05Eh)
  3868  007FD6  5A                 	db	low(05Ah)
  3869  007FD7  9A                 	db	low(09Ah)
  3870  007FD8  9B                 	db	low(09Bh)
  3871  007FD9  5B                 	db	low(05Bh)
  3872  007FDA  99                 	db	low(099h)
  3873  007FDB  59                 	db	low(059h)
  3874  007FDC  58                 	db	low(058h)
  3875  007FDD  98                 	db	low(098h)
  3876  007FDE  88                 	db	low(088h)
  3877  007FDF  48                 	db	low(048h)
  3878  007FE0  49                 	db	low(049h)
  3879  007FE1  89                 	db	low(089h)
  3880  007FE2  4B                 	db	low(04Bh)
  3881  007FE3  8B                 	db	low(08Bh)
  3882  007FE4  8A                 	db	low(08Ah)
  3883  007FE5  4A                 	db	low(04Ah)
  3884  007FE6  4E                 	db	low(04Eh)
  3885  007FE7  8E                 	db	low(08Eh)
  3886  007FE8  8F                 	db	low(08Fh)
  3887  007FE9  4F                 	db	low(04Fh)
  3888  007FEA  8D                 	db	low(08Dh)
  3889  007FEB  4D                 	db	low(04Dh)
  3890  007FEC  4C                 	db	low(04Ch)
  3891  007FED  8C                 	db	low(08Ch)
  3892  007FEE  44                 	db	low(044h)
  3893  007FEF  84                 	db	low(084h)
  3894  007FF0  85                 	db	low(085h)
  3895  007FF1  45                 	db	low(045h)
  3896  007FF2  87                 	db	low(087h)
  3897  007FF3  47                 	db	low(047h)
  3898  007FF4  46                 	db	low(046h)
  3899  007FF5  86                 	db	low(086h)
  3900  007FF6  82                 	db	low(082h)
  3901  007FF7  42                 	db	low(042h)
  3902  007FF8  43                 	db	low(043h)
  3903  007FF9  83                 	db	low(083h)
  3904  007FFA  41                 	db	low(041h)
  3905  007FFB  81                 	db	low(081h)
  3906  007FFC  80                 	db	low(080h)
  3907  007FFD  40                 	db	low(040h)
  3908                           	global	_aucCRCHi
  3909                           	global	_aucCRCLo
  3910                           	global	_modbus_reg
  3911                           	global	_modbus_reg
  3912  000000                     _modbus_reg  equ     256
  3913                           
  3914                           	DABS	1,256,200	;_modbus_reg
  3915                           	global	_rx_buf
  3916                           	global	_rx_buf
  3917  000000                     _rx_buf  equ     0
  3918                           
  3919                           	DABS	1,0,53	;_rx_buf
  3920                           	global	_tx_buf
  3921                           	global	_tx_buf
  3922  000000                     _tx_buf  equ     53
  3923                           
  3924                           	DABS	1,53,51	;_tx_buf
  3925                           	global	F3892
  3926  000000                     F3892  equ     108
  3927                           
  3928                           	DABS	1,108,2	;F3892
  3929                           	global	_count_1ms
  3930                           	global	_count_1ms
  3931  000000                     _count_1ms  equ     104
  3932                           
  3933                           	DABS	1,104,2	;_count_1ms
  3934                           	global	F3867
  3935  000000                     F3867  equ     107
  3936                           
  3937                           	DABS	1,107,1	;F3867
  3938                           	global	F3901
  3939  000000                     F3901  equ     111
  3940                           
  3941                           	DABS	1,111,1	;F3901
  3942                           	global	_count_2s_flg
  3943                           	global	_count_2s_flg
  3944  000000                     _count_2s_flg  equ     112
  3945                           
  3946                           	DABS	1,112,1	;_count_2s_flg
  3947                           	global	_have_speed
  3948                           	global	_have_speed
  3949  000000                     _have_speed  equ     110
  3950                           
  3951                           	DABS	1,110,1	;_have_speed
  3952                           	global	_rx_state
  3953                           	global	_rx_state
  3954  000000                     _rx_state  equ     106
  3955                           
  3956                           	DABS	1,106,1	;_rx_state
  3957                           	global	_TMR0
  3958  000000                     _TMR0	equ	0xFD6
  3959                           	global	_TMR1
  3960  000000                     _TMR1	equ	0xFCE
  3961                           	global	_TMR3
  3962  000000                     _TMR3	equ	0xFB2
  3963                           	global	_TMR5
  3964  000000                     _TMR5	equ	0xF4F
  3965                           	global	_ANSELA
  3966  000000                     _ANSELA	equ	0xF38
  3967                           	global	_ANSELB
  3968  000000                     _ANSELB	equ	0xF39
  3969                           	global	_ANSELC
  3970  000000                     _ANSELC	equ	0xF3A
  3971                           	global	_PORTC
  3972  000000                     _PORTC	equ	0xF82
  3973                           	global	_PORTCbits
  3974  000000                     _PORTCbits	equ	0xF82
  3975                           	global	_RC1REG
  3976  000000                     _RC1REG	equ	0xFAE
  3977                           	global	_SPBRG1
  3978  000000                     _SPBRG1	equ	0xFAF
  3979                           	global	_TRISC
  3980  000000                     _TRISC	equ	0xF94
  3981                           	global	_TX1REG
  3982  000000                     _TX1REG	equ	0xFAD
  3983                           	global	_BRGH1
  3984  000000                     _BRGH1	equ	0x7D62
  3985                           	global	_CREN1
  3986  000000                     _CREN1	equ	0x7D5C
  3987                           	global	_GIE
  3988  000000                     _GIE	equ	0x7F97
  3989                           	global	_INT0IE
  3990  000000                     _INT0IE	equ	0x7F94
  3991                           	global	_INT0IF
  3992  000000                     _INT0IF	equ	0x7F91
  3993                           	global	_INT1IE
  3994  000000                     _INT1IE	equ	0x7F83
  3995                           	global	_INT1IF
  3996  000000                     _INT1IF	equ	0x7F80
  3997                           	global	_INTEDG0
  3998  000000                     _INTEDG0	equ	0x7F8E
  3999                           	global	_INTEDG1
  4000  000000                     _INTEDG1	equ	0x7F8D
  4001                           	global	_PEIE
  4002  000000                     _PEIE	equ	0x7F96
  4003                           	global	_PSA
  4004  000000                     _PSA	equ	0x7EAB
  4005                           	global	_RB0
  4006  000000                     _RB0	equ	0x7C08
  4007                           	global	_RB1
  4008  000000                     _RB1	equ	0x7C09
  4009                           	global	_RC1IE
  4010  000000                     _RC1IE	equ	0x7CED
  4011                           	global	_RC1IF
  4012  000000                     _RC1IF	equ	0x7CF5
  4013                           	global	_SPEN1
  4014  000000                     _SPEN1	equ	0x7D5F
  4015                           	global	_SYNC1
  4016  000000                     _SYNC1	equ	0x7D64
  4017                           	global	_T08BIT
  4018  000000                     _T08BIT	equ	0x7EAE
  4019                           	global	_T0CS
  4020  000000                     _T0CS	equ	0x7EAD
  4021                           	global	_T0PS0
  4022  000000                     _T0PS0	equ	0x7EA8
  4023                           	global	_T0PS1
  4024  000000                     _T0PS1	equ	0x7EA9
  4025                           	global	_T0PS2
  4026  000000                     _T0PS2	equ	0x7EAA
  4027                           	global	_T1CKPS0
  4028  000000                     _T1CKPS0	equ	0x7E6C
  4029                           	global	_T1CKPS1
  4030  000000                     _T1CKPS1	equ	0x7E6D
  4031                           	global	_T3CKPS0
  4032  000000                     _T3CKPS0	equ	0x7D8C
  4033                           	global	_T3CKPS1
  4034  000000                     _T3CKPS1	equ	0x7D8D
  4035                           	global	_T5CKPS0
  4036  000000                     _T5CKPS0	equ	0x7A74
  4037                           	global	_T5CKPS1
  4038  000000                     _T5CKPS1	equ	0x7A75
  4039                           	global	_TMR0IE
  4040  000000                     _TMR0IE	equ	0x7F95
  4041                           	global	_TMR0IF
  4042  000000                     _TMR0IF	equ	0x7F92
  4043                           	global	_TMR0ON
  4044  000000                     _TMR0ON	equ	0x7EAF
  4045                           	global	_TMR1CS0
  4046  000000                     _TMR1CS0	equ	0x7E6E
  4047                           	global	_TMR1CS1
  4048  000000                     _TMR1CS1	equ	0x7E6F
  4049                           	global	_TMR1IE
  4050  000000                     _TMR1IE	equ	0x7CE8
  4051                           	global	_TMR1IF
  4052  000000                     _TMR1IF	equ	0x7CF0
  4053                           	global	_TMR1ON
  4054  000000                     _TMR1ON	equ	0x7E68
  4055                           	global	_TMR3CS0
  4056  000000                     _TMR3CS0	equ	0x7D8E
  4057                           	global	_TMR3CS1
  4058  000000                     _TMR3CS1	equ	0x7D8F
  4059                           	global	_TMR3IE
  4060  000000                     _TMR3IE	equ	0x7D01
  4061                           	global	_TMR3IF
  4062  000000                     _TMR3IF	equ	0x7D09
  4063                           	global	_TMR3ON
  4064  000000                     _TMR3ON	equ	0x7D88
  4065                           	global	_TMR5CS0
  4066  000000                     _TMR5CS0	equ	0x7A76
  4067                           	global	_TMR5CS1
  4068  000000                     _TMR5CS1	equ	0x7A77
  4069                           	global	_TMR5IE
  4070  000000                     _TMR5IE	equ	0x7BE9
  4071                           	global	_TMR5IF
  4072  000000                     _TMR5IF	equ	0x7BF1
  4073                           	global	_TMR5ON
  4074  000000                     _TMR5ON	equ	0x7A70
  4075                           	global	_TRISA5
  4076  000000                     _TRISA5	equ	0x7C95
  4077                           	global	_TRISB0
  4078  000000                     _TRISB0	equ	0x7C98
  4079                           	global	_TRISB1
  4080  000000                     _TRISB1	equ	0x7C99
  4081                           	global	_TX1IE
  4082  000000                     _TX1IE	equ	0x7CEC
  4083                           	global	_TX1IF
  4084  000000                     _TX1IF	equ	0x7CF4
  4085                           	global	_TXEN1
  4086  000000                     _TXEN1	equ	0x7D65
  4087  007FFE  00                 	db 0	; dummy byte at the end
  4088                           	psect	intsave_regs,class=BIGRAM,space=1
  4089                           	PSECT	param2,class=BANK2,space=1
  4090                           	GLOBAL	__Lparam2
  4091                           	FNCONF	param2,??,?
  4092                           	GLOBAL	__Labsbss0
  4093  000000                     __Labsbss0	EQU	0
  4094                           	GLOBAL	__Habsbss0
  4095  000000                     __Habsbss0	EQU	113
  4096                           	GLOBAL	__Labsbss1
  4097  000000                     __Labsbss1	EQU	256
  4098                           	GLOBAL	__Habsbss1
  4099  000000                     __Habsbss1	EQU	456
  4100                           	GLOBAL	__Ldata0
  4101  000000                     __Ldata0	EQU	113
  4102                           	GLOBAL	__Hdata0
  4103  000000                     __Hdata0	EQU	114
  4104                           GLOBAL	__Lparam, __Hparam
  4105                           GLOBAL	__Lparam2, __Hparam2
  4106  000000                     __Lparam	EQU	__Lparam2
  4107  000000                     __Hparam	EQU	__Hparam2


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Thu May 30 16:55:11 2013

                                 l1 0A04  
                                 l2 09CA  
                                 l3 0964  
                                 l4 09EA  
            __end_of_modbus_receive 07E4  
                               l380 0758  
                               l381 0764  
                               l390 02C0  
                               l382 0774  
                               l391 00F8  
                               l383 07E2  
                               l392 0210  
                               l377 07E2  
                               l385 07D0  
                               l394 01E4  
                               l386 0794  
                               l378 0774  
                               l395 089E  
                               l387 079C  
                               l379 0768  
                               l396 0844  
                               l388 07A4  
                               l397 0898  
                               l389 07A8  
                               l399 0882  
                               l751 0C8A  
                               l760 093E  
                               l761 094C  
                               l756 094C  
                               l773 0CA0  
                               l757 08EE  
                               l759 094C  
                               _GIE 007F97  
                               _RB0 007C08  
                               _RB1 007C09  
                               _PSA 007EAB  
                              F3901 00006F  
                              F3867 00006B  
                              F3892 00006C  
                              F3893 000071  
          _write_single_holding_reg 07E4  
         read_holding_regs@data_crc 0205  
                              _T0CS 007EAD  
                              u1500 0210  
                              u1501 020C  
                              u1510 0898  
                              u1430 06EA  
                              u1511 0894  
                              u1431 06E6  
                              u1520 09EA  
                              u1440 0728  
                              u1521 09E6  
                              u1441 0724  
                              u1450 0738  
                              u1451 0734  
                              u1460 0748  
                              u1461 0744  
                              u1470 0784  
                              u1471 0780  
                              u1480 0906  
                              u1481 0902  
                              u1490 092A  
                              u1491 0926  
                              _PEIE 007F96  
                              _TMR0 000FD6  
                              _TMR1 000FCE  
                              _TMR3 000FB2  
                              _TMR5 000F4F  
                              _main 08A0  
                              fsr0h 000FEA  
                              fsr1h 000FE2  
                              indf0 000FEF  
                              fsr0l 000FE9  
                              fsr2h 000FDA  
                              indf1 000FE7  
                              fsr1l 000FE1  
                              fsr2l 000FD9  
                      _start_timer3 0CAE  
                              pclat 000FFA  
                              prodh 000FF4  
                              prodl 000FF3  
                              start 0018  
                       _stop_timer3 0CA2  
                   ?_modbus_receive 0201  
                   __end_of___aldiv 04B0  
                             ?_main 0200  
                             _BRGH1 007D62  
                             _CREN1 007D5C  
                             _RC1IE 007CED  
                             _RC1IF 007CF5  
                             _T0PS0 007EA8  
                             _T0PS1 007EA9  
                             _T0PS2 007EAA  
                             i2l360 04E4  
                             i2l361 0510  
                             i2l370 0B84  
                             i2l362 055A  
                             i2l371 0B84  
                             i2l363 05A4  
                             i2l372 0B80  
                             i2l356 05CE  
                             i2l364 05B4  
                             i2l373 0B6E  
                             i2l357 05CE  
                             i2l374 0B36  
                             i2l366 0A96  
                             i2l375 0B4A  
                             i2l367 0A96  
                             i2l359 05B8  
                             i2l376 0B6A  
                             i2l368 0A96  
                             i2l369 0A96  
                             i2l810 04AE  
                             i2l811 0314  
                             i2l820 0448  
                             i2l812 034E  
                             i2l821 049A  
                             i2l813 0466  
                             i2l814 03AE  
                             i2l815 0394  
                             i2l816 03C0  
                             i2l752 0BE8  
                             i2l753 0BE8  
                             i2l818 0466  
                             i2l770 06B2  
                             i2l754 0BE8  
                             i2l762 0ADC  
                             i2l771 0CB8  
                             i2l819 03C0  
                             i2l763 06D8  
                             i2l772 0CAC  
                             i2l764 06D8  
                             i2l765 06C6  
                             i2l766 05E4  
                             i2l774 0C70  
                             i2l767 0604  
                             i2l775 0C70  
                             i2l768 06AE  
                             i2l769 0690  
                             i2l777 0C4C  
                             i2l778 0C4C  
                             i2l779 0C4C  
                             _SPEN1 007D5F  
                             _TX1IE 007CEC  
                             _TX1IF 007CF4  
                             _PORTC 000F82  
                             _TRISC 000F94  
                             _TXEN1 007D65  
                             _SYNC1 007D64  
                      ?_init_timer3 0201  
                   __end_of_pv1_isr 0C72  
                   __end_of_rec_isr 05D0  
                             tablat 000FF5  
                             status 000FD8  
                   rec_isr@rec_data 0227  
                      __end_of_main 0954  
                            ??_main 0200  
                     __activetblptr 000002  
               modbus_crc16@ucCRCHi 0214  
               modbus_crc16@ucCRCLo 0215  
                            _T08BIT 007EAE  
                            _ANSELA 000F38  
                            _ANSELB 000F39  
                            _ANSELC 000F3A  
                            _RC1REG 000FAE  
                            _INT0IE 007F94  
                            _INT0IF 007F91  
                            _INT1IE 007F83  
                            _INT1IF 007F80  
                            i2u1400 0A22  
                            i2u1401 0A1E  
                            i2u1410 0A32  
                            i2u1411 0A2E  
                            i2u1420 0A6C  
                            i2u1421 0A68  
                            i2u1600 02E4  
                            i2u1360 04CE  
                            i2u1601 02E0  
                            i2u1361 04CA  
                            i2u1610 0326  
                            i2u1370 04DC  
                            i2u1530 0B94  
                            i2u1611 0322  
                            i2u1371 04D8  
                            i2u1531 0B90  
                            i2u1620 0380  
                            i2u1380 056A  
                            i2u1700 0C2C  
                            i2u1540 0BA2  
                            i2u1621 037C  
                            i2u1381 0566  
                            i2u1701 0C28  
                            i2u1541 0B9E  
                            i2u1630 03C0  
                            i2u1390 0A14  
                            i2u1550 0BD0  
                            i2u1631 03BC  
                            i2u1391 0A10  
                            i2u1551 0BCC  
                            i2u1640 0412  
                            i2u1560 0624  
                            i2u1641 040E  
                            i2u1561 0620  
                            i2u1650 047A  
                            i2u1570 0650  
                            i2u1651 0476  
                            i2u1571 064C  
                            i2u1660 0B24  
                            i2u1580 0C5C  
                            i2u1661 0B20  
                            i2u1581 0C58  
                            i2u1670 0B32  
                            i2u1590 0C6A  
                            i2u1671 0B2E  
                            i2u1591 0C66  
                            i2u1680 0BF8  
                            i2u1681 0BF4  
                            i2u1690 0C06  
                            i2u1691 0C02  
                            _TMR0IE 007F95  
                            _SPBRG1 000FAF  
                            _TMR0IF 007F92  
                            _TMR1IE 007CE8  
                            _TMR1IF 007CF0  
                            _TMR3IE 007D01  
                            _TMR3IF 007D09  
                            _TMR5IE 007BE9  
                            _TMR5IF 007BF1  
                            _TMR0ON 007EAF  
                            _TMR1ON 007E68  
                            _TMR3ON 007D88  
                            _TMR5ON 007A70  
                            _TX1REG 000FAD  
                            _TRISB0 007C98  
                            _TRISB1 007C99  
                            _TRISA5 007C95  
                            __Ldata 000071  
                      ?_timer35_isr 0227  
                         ??___aldiv 0230  
                  __end_of_init_pv1 0CA2  
                            _my_isr 0A98  
                            _rx_buf 000000  
                            _tx_buf 000035  
                            _tx_isr 0A06  
                         ??_pv1_isr 0227  
                         ??_rec_isr 0227  
                      __mediumconst 7DFE  
                            tblptrh 000FF7  
                            tblptrl 000FF6  
                            tblptru 000FF8  
                        __accesstop 0060  
                     ?_modbus_crc16 0210  
        ??_write_single_holding_reg 0202  
              read_holding_regs@num 0207  
                 modbus_crc16@usLen 0212  
                    ??_modbus_crc16 0214  
                      ?_stop_timer3 0228  
                  ??_modbus_receive 0201  
                         l600000267 0748  
                           ?_my_isr 0219  
                           ?_tx_isr 0227  
                           _T1CKPS0 007E6C  
                           _T1CKPS1 007E6D  
                           _T3CKPS0 007D8C  
                           _T3CKPS1 007D8D  
                           _T5CKPS0 007A74  
                           _T5CKPS1 007A75  
                           _INTEDG0 007F8E  
                           _INTEDG1 007F8D  
                        _have_speed 00006E  
                           _TMR1CS0 007E6E  
                           _TMR1CS1 007E6F  
                           _TMR3CS0 007D8E  
                           _TMR3CS1 007D8F  
                           _TMR5CS0 007A76  
                           _TMR5CS1 007A77  
              modbus_crc16@pucFrame 0210  
                         ?_init_pv1 0201  
                           __Hdata0 000072  
                           __Ldata0 000071  
                           __Hparam 0237  
                           __Lparam 0200  
                           ___aldiv 02C2  
                 __end_of_get_speed 06DA  
                           __ramtop 0600  
                           _pv1_isr 0C4E  
                           _rec_isr 04B0  
                  ___aldiv@dividend 0228  
                        _modbus_reg 000100  
                     __Lmediumconst 7DFE  
                        ??_init_pv1 0201  
                           int_func 0008  
                  ___aldiv@quotient 0232  
                           postdec0 000FED  
                           postdec1 000FE5  
                        _timer0_isr 0BEA  
                        _timer3_isr 0B86  
                           postinc0 000FEE  
                           postinc1 000FE6  
  __end_of_write_single_holding_reg 08A0  
                 _read_holding_regs 006C  
                         _PORTCbits 000F82  
                ?_read_holding_regs 0202  
              __end_of_modbus_crc16 0A06  
               ??_read_holding_regs 0202  
       read_holding_regs@start_addr 0203  
write_single_holding_reg@start_addr 0203  
         __end_of_read_holding_regs 02C2  
                      _count_2s_flg 000070  
                    __end_of_my_isr 0B16  
                    __end_of_tx_isr 0A98  
                         __Habsbss0 000071  
                         __Habsbss1 0001C8  
                read_holding_regs@i 0202  
                         __Labsbss0 000000  
                         __Labsbss1 000100  
                modbus_crc16@iIndex 0216  
                     ?_start_timer3 0228  
                       ?_timer0_isr 0227  
                       ?_timer3_isr 0227  
                          ??_my_isr 0219  
                          ??_tx_isr 0227  
                     ??_init_timer3 0201  
                         __config10 00FFFF  
                         __config11 00FFFF  
         ?_write_single_holding_reg 0202  
                    ??_start_timer3 0228  
                          ?___aldiv 0228  
                         _get_speed 05D0  
                          ?_pv1_isr 0227  
                       __smallconst 0600  
                         _count_1ms 000068  
                          ?_rec_isr 0227  
               __end_of_init_timer3 0C8C  
                   ___aldiv@divisor 022C  
                   ___aldiv@counter 0230  
                     ??_timer35_isr 0227  
                      _modbus_crc16 0954  
                        ?_get_speed 0227  
                          __Hparam2 0237  
                          __Lparam2 0200  
                      __Lsmallconst 0600  
               __end_of_timer35_isr 0B86  
              __end_of_start_timer3 0CBA  
                          __config1 00E9FF  
                          __config2 00FFFF  
                          __config3 00FFFF  
                          __config4 00FFFF  
                          __config5 00FFFF  
                          __config6 00FFFF  
                          __config7 00FFFF  
                          __config8 00FFFF  
                          __config9 00FFFF  
                          _aucCRCHi 7DFE  
                          _aucCRCLo 7EFE  
                       _init_timer3 0C72  
                          _init_pv1 0C8C  
                     ??_stop_timer3 0228  
                      ??_timer0_isr 0227  
                      ??_timer3_isr 0227  
                          _rx_state 00006A  
                       ??_get_speed 0227  
                          intlevel2 0CBA  
                __end_of_timer0_isr 0C4E  
                __end_of_timer3_isr 0BEA  
                       _timer35_isr 0B16  
               __end_of_stop_timer3 0CAE  
                    _modbus_receive 06DA  
                      ___aldiv@sign 0231  
         write_single_holding_reg@i 0202  
