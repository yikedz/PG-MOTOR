

HI-TECH Software LITE Macro Assembler (PIC18) V9.66 build 8870 
                                                       Wed May 29 23:37:08 2013

HI-TECH Software Omniscient Code Generator build 8870
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 8870"
     2                           
     3                           	processor	18F25K22
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           # 19 "../main.c"
   102                           	global __config1 ;#
   103                           # 19 "../main.c"
   104  000000                     	__config1 equ 0xF9FF & 0xEFFF & 0xFFFF & 0xFFFF
                                  & 0xFFFF ;#
   105                           # 21 "../main.c"
   106                           	global __config2 ;#
   107                           # 21 "../main.c"
   108  000000                     	__config2 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   109                           # 23 "../main.c"
   110                           	global __config3 ;#
   111                           # 23 "../main.c"
   112  000000                     	__config3 equ 0xFFFF & 0xFFFF ;#
   113                           # 25 "../main.c"
   114                           	global __config4 ;#
   115                           # 25 "../main.c"
   116  000000                     	__config4 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
                                  & 0xFFFF & 0xFFFF & 0xFFFF ;#
   117+                          # 27 "../main.c"
   118+                          	global __config5 ;#
   119+                          # 27 "../main.c"
   120+ 000000                     	__config5 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   121+                          # 29 "../main.c"
   122+                          	global __config6 ;#
   123+                          # 29 "../main.c"
   124+ 000000                     	__config6 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
      +                           ;#
   125                           # 31 "../main.c"
   126                           	global __config7 ;#
   127                           # 31 "../main.c"
   128  000000                     	__config7 equ 0xFFFF & 0xFFFF ;#
   129+                          # 33 "../main.c"
   130+                          	global __config8 ;#
   131+                          # 33 "../main.c"
   132+ 000000                     	__config8 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF
      +                           ;#
   133+                          # 35 "../main.c"
   134+                          	global __config9 ;#
   135+                          # 35 "../main.c"
   136+ 000000                     	__config9 equ 0xFFFF & 0xFFFF & 0xFFFF ;#
   137                           # 37 "../main.c"
   138                           	global __config10 ;#
   139                           # 37 "../main.c"
   140  000000                     	__config10 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFF
                                 F ;#
   141+                          # 39 "../main.c"
   142+                          	global __config11 ;#
   143+                          # 39 "../main.c"
   144+ 000000                     	__config11 equ 0xFFFF ;#
   145+                          	GLOBAL	__activetblptr
   146+ 000000                     __activetblptr	EQU	2
   147                           	GLOBAL	__smallconst,__Lsmallconst
   148  000000                     __smallconst	EQU	__Lsmallconst
   149+                          	GLOBAL	__mediumconst,__Lmediumconst
   150+ 000000                     __mediumconst	EQU	__Lmediumconst
   151+                          	GLOBAL	__Ldata
   152+ 000000                     __Ldata	EQU	310
   153  000000                     read_holding_regs@i	equ	??_read_holding_regs+0
   154+                          	global	read_holding_regs@i
   155+ 000000                     read_holding_regs@start_addr	equ	??_read_holding
      +                          _regs+1
   156+                          	global	read_holding_regs@start_addr
   157+ 000000                     read_holding_regs@data_crc	equ	??_read_holding_r
      +                          egs+3
   158                           	global	read_holding_regs@data_crc
   159  000000                     read_holding_regs@num	equ	??_read_holding_regs+5
   160+                          	global	read_holding_regs@num
   161+ 000000                     write_single_holding_reg@i	equ	??_write_single_h
      +                          olding_reg+0
   162+                          	global	write_single_holding_reg@i
   163+ 000000                     write_single_holding_reg@start_addr	equ	??_write
      +                          _single_holding_reg+1
   164                           	global	write_single_holding_reg@start_addr
   165  000000                     modbus_crc16@ucCRCHi	equ	??_modbus_crc16+0
   166+                          	global	modbus_crc16@ucCRCHi
   167+ 000000                     modbus_crc16@ucCRCLo	equ	??_modbus_crc16+1
   168+                          	global	modbus_crc16@ucCRCLo
   169+ 000000                     modbus_crc16@iIndex	equ	??_modbus_crc16+2
   170                           	global	modbus_crc16@iIndex
   171  000000                     modbus_crc16@pucFrame	equ	?_modbus_crc16+0
   172+                          	global	modbus_crc16@pucFrame
   173+ 000000                     modbus_crc16@usLen	equ	?_modbus_crc16+2
   174+                          	global	modbus_crc16@usLen
   175+ 000000                     rec_isr@rec_data	equ	??_rec_isr+0
   176                           	global	rec_isr@rec_data
   177                           ;Data sizes: Strings 0, constant 512, data 1, bs
                                 s 0, persistent 0 stack 40
   178                           	global	_main
   179                           	global	??_main
   180                           	global	?_main
   181                           
   182                           ; *************** function _main ***************
                                 **
   183                           ; Defined at:
   184                           ;		line 74 in file "../main.c"
   185                           ; Parameters:
   186                           ;		None
   187                           ; Auto variables:
   188                           ;		md_keep     	       	type: unsigned int 
   189                           ; Return value:
   190                           ;		type: void 
   191                           ;		size: 0
   192                           ; Registers used:
   193                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   194                           ; Tracked objects:
   195                           ;		On entry : 0/0
   196                           ;		On exit  : 0/0
   197                           ;		Unchanged: 0/0
   198                           ; Data sizes:
   199                           ;		Autos:    0
   200                           ;		Params:   0
   201                           ;		Temp:     0
   202                           ;		Total:    0
   203                           ; This function calls:
   204                           ;		_init_timer3
   205                           ;		_init_pv1
   206                           ;		_modbus_receive
   207                           ; This function is called by:
   208                           ;		Startup code after reset
   209                           ; This function uses a non-reentrant model
   210                           ; 
   211                                   psect   text0,class=CODE,space=0,reloc=2
   212                           
   213                           	opt lm
   214                           	file	"../main.c"
   215                           	line	74
   216  000000                     	__size_of_main	equ	__end_of_main-_main
   217+                                  psect   text0
   218+                          ;main.c: 73: void main(void)
   219+                          ;main.c: 74: {
   220+                          	
   221+ 00082C                     _main:		; BSR set to: ?
   222+                          
   223+                          	opt stack 26
   224+                          	line	77
   225+                          ;main.c: 75: unsigned int md_keep;
   226+                          ;main.c: 77: ANSELC = 0;
   227+ 00082C  0E00               	movlw	low(0)
   228  00082E  010F               	movlb	15	; () banked
   229+ 000830  010F               	movlb	15	; () banked
   230+ 000832  6F3A               	movwf	((3898))&0ffh	;volatile
   231                           	line	78
   232                           ;main.c: 78: TRISC = 0x80;
   233  000834  0E80               	movlw	low(080h)
   234+ 000836  6E94               	movwf	((c:3988)),c	;volatile
   235+                          	line	79
   236+                          ;main.c: 79: PORTC = 0xc0;
   237+ 000838  0EC0               	movlw	low(0C0h)
   238  00083A  6E82               	movwf	((c:3970)),c	;volatile
   239+                          	line	81
   240+                          ;main.c: 81: ANSELA = 0;
   241+ 00083C  0E00               	movlw	low(0)
   242+ 00083E  010F               	movlb	15	; () banked
   243  000840  010F               	movlb	15	; () banked
   244+ 000842  6F38               	movwf	((3896))&0ffh	;volatile
   245+                          	line	82
   246+                          ;main.c: 82: TRISA5 =0;
   247+ 000844  9A92               	bcf	c:(31893/8),(31893)&7	;volatile
   248                           	line	83
   249                           ;main.c: 83: RA5 = 0;
   250  000846  9A80               	bcf	c:(31749/8),(31749)&7	;volatile
   251+                          	line	86
   252+                          ;main.c: 86: TMR1ON = 0; TMR1CS0 = 0; TMR1CS1 = 
      +                          0; T1CKPS0 = 0; T1CKPS1 = 0; TMR1 = 65535-40320;
      +                           TMR1IF=0; TMR1IE=1; TMR1ON = 1;
   253+ 000848  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
   254+ 00084A  9CCD               	bcf	c:(32366/8),(32366)&7	;volatile
   255  00084C  9ECD               	bcf	c:(32367/8),(32367)&7	;volatile
   256+ 00084E  98CD               	bcf	c:(32364/8),(32364)&7	;volatile
   257+ 000850  9ACD               	bcf	c:(32365/8),(32365)&7	;volatile
   258  000852  0E7F               	movlw	low(0627Fh)
   259+ 000854  6ECE               	movwf	((c:4046)),c	;volatile
   260+ 000856  0E62               	movlw	high(0627Fh)
   261  000858  6ECF               	movwf	((c:4046+1)),c	;volatile
   262+ 00085A  909E               	bcf	c:(31984/8),(31984)&7	;volatile
   263+ 00085C  809D               	bsf	c:(31976/8),(31976)&7	;volatile
   264  00085E  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
   265+                          	line	88
   266+                          ;main.c: 88: PEIE = 1;
   267+ 000860  8CF2               	bsf	c:(32662/8),(32662)&7	;volatile
   268+                          	line	89
   269+                          ;main.c: 89: GIE = 1;
   270+ 000862  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
   271                           	line	90
   272                           ;main.c: 90: SPEN1 = 1; SYNC1 = 0; SPBRG1 = 1105
                                 92/(96*16)-1; BRGH1 = 0; CREN1 = 1; TXEN1 = 1; R
                                 C1IE = 1;
   273  000864  8EAB               	bsf	c:(32095/8),(32095)&7	;volatile
   274+ 000866  98AC               	bcf	c:(32100/8),(32100)&7	;volatile
   275+ 000868  0E47               	movlw	low(047h)
   276  00086A  6EAF               	movwf	((c:4015)),c	;volatile
   277+ 00086C  94AC               	bcf	c:(32098/8),(32098)&7	;volatile
   278+ 00086E  88AB               	bsf	c:(32092/8),(32092)&7	;volatile
   279  000870  8AAC               	bsf	c:(32101/8),(32101)&7	;volatile
   280+ 000872  8A9D               	bsf	c:(31981/8),(31981)&7	;volatile
   281+                          	line	92
   282+                          ;main.c: 92: init_timer3();
   283+ 000874  ECB3  F004         	call	_init_timer3	;wreg free
   284                           	line	93
   285                           ;main.c: 93: init_pv1();
   286  000878  ECC0  F004         	call	_init_pv1	;wreg free
   287+                          	line	94
   288+                          ;main.c: 94: while(1)
   289+                          	
   290+ 00087C                     l756:		; BSR set to: ?
   291+                          
   292+                          	line	96
   293+                          ;main.c: 95: {
   294+                          ;main.c: 96: modbus_receive();
   295+ 00087C  ECED  F001         	call	_modbus_receive	;wreg free
   296                           	line	101
   297                           ;main.c: 101: if(modbus_reg[3]==1)
   298  000880  0100               	movlb	0	; () banked
   299+ 000882  0100               	movlb	0	; () banked
   300+ 000884  053B               	decf	(0+(53+06h))&0ffh,w
   301  000886  113C               	iorwf (1+(53+06h))&0ffh,w
   302+                          
   303+ 000888  A4D8               	btfss	status,2
   304+ 00088A  EF49  F004         	goto	u1261
   305  00088E  EF4B  F004         	goto	u1260
   306+ 000892                     u1261:
   307+ 000892  EF4D  F004         	goto	l755
   308  000896                     u1260:
   309+                          	line	104
   310+                          ;main.c: 102: {
   311+                          ;main.c: 104: }
   312+ 000896  EF4D  F004         	goto	l755
   313+                          	line	110
   314+                          	
   315+ 00089A                     l755:		; BSR set to: ?
   316                           
   317                           	line	94
   318  00089A  EF3E  F004         	goto	l756
   319+                          	global	start
   320+ 00089E  EF0C  F000         	goto	start
   321+                          	opt stack 0
   322+                          GLOBAL __end_of_main
   323+ 0008A2                     	__end_of_main:
   324                           	FNSIZE	_main,0,0
   325                           ; =============== function _main ends ==========
                                 ==
   326                           
   327                                   psect   text1,class=CODE,space=0,reloc=2
   328                           	line	111
   329                           
   330                           	opt lm
   331                           	signat	_main,88
   332                           	global	_modbus_receive
   333                           	global	??_modbus_receive
   334                           	global	?_modbus_receive
   335                           
   336                           ; *************** function _modbus_receive *****
                                 ************
   337                           ; Defined at:
   338                           ;		line 113 in file "../modbus_rtu.c"
   339                           ; Parameters:
   340                           ;		None
   341                           ; Auto variables:
   342                           ;		None
   343                           ; Return value:
   344                           ;		type: void 
   345                           ;		size: 0
   346                           ; Registers used:
   347                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   348                           ; Tracked objects:
   349                           ;		On entry : 0/0
   350                           ;		On exit  : 0/0
   351                           ;		Unchanged: 0/0
   352                           ; Data sizes:
   353                           ;		Autos:    0
   354                           ;		Params:   0
   355                           ;		Temp:     1
   356                           ;		Total:    1
   357                           ; This function calls:
   358                           ;		_modbus_crc16
   359                           ;		_read_holding_regs
   360                           ;		_write_single_holding_reg
   361                           ; This function is called by:
   362                           ;		_main
   363                           ; This function uses a non-reentrant model
   364                           ; 
   365                           	file	"../modbus_rtu.c"
   366                           	line	113
   367  000000                     	__size_of_modbus_receive	equ	__end_of_modbus_re
                                 ceive-_modbus_receive
   368+                          ;modbus_rtu.c: 112: void modbus_receive(void)
   369+                          ;modbus_rtu.c: 113: {
   370+                          	
   371+ 0003DA                     _modbus_receive:		; BSR set to: ?
   372+                          
   373+                          	opt stack 25
   374+                          	line	114
   375+                          ;modbus_rtu.c: 114: if(rx_buf.frame_ok==1)
   376+ 0003DA  0400               	decf	((c:0)),c,w
   377                           
   378  0003DC  A4D8               	btfss	status,2
   379+ 0003DE  EFF3  F001         	goto	u1211
   380+ 0003E2  EFF5  F001         	goto	u1210
   381  0003E6                     u1211:
   382+ 0003E6  EF3A  F002         	goto	l378
   383+ 0003EA                     u1210:
   384                           	line	116
   385                           ;modbus_rtu.c: 115: {
   386                           ;modbus_rtu.c: 116: rx_buf.frame_ok = 0;
   387  0003EA  0102               	movlb	2	; () banked
   388+ 0003EC  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   389+ 0003EE  0E00               	movlw	low(0)
   390  0003F0  6E00               	movwf	((c:0)),c
   391+ 0003F2  0102               	movlb	2	; () banked
   392+ 0003F4  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   393                           	line	118
   394                           ;modbus_rtu.c: 118: if(modbus_crc16(rx_buf.data_
                                 buf,rx_buf.rec_count)==0)
   395  0003F6  0102               	movlb	2	; () banked
   396+ 0003F8  C002 F211          	movff	0+((c:0)+02h),0+(?_modbus_crc16+02h)
   397+ 0003FC  0102               	movlb	2	; () banked
   398  0003FE  0102               	movlb	2	; () banked
   399+ 000400  6B12               	clrf	(1+(?_modbus_crc16+02h))&0ffh
   400  000402  0E03               	movlw	low((c:0)+03h)
   401  000404  0102               	movlb	2	; () banked
   402  000406  0102               	movlb	2	; () banked
   403  000408  6F0F               	movwf	((?_modbus_crc16))&0ffh
   404  00040A  0E00               	movlw	high((c:0)+03h)
   405  00040C  0102               	movlb	2	; () banked
   406  00040E  6F10               	movwf	((?_modbus_crc16+1))&0ffh
   407  000410  EC31  F003         	call	_modbus_crc16	;wreg free
   408  000414  0102               	movlb	2	; () banked
   409  000416  5110               	movf	(1+?_modbus_crc16)&0ffh,w
   410  000418  110F               	iorwf (0+?_modbus_crc16)&0ffh,w
   411                           
   412  00041A  A4D8               	btfss	status,2
   413  00041C  EF12  F002         	goto	u1221
   414  000420  EF14  F002         	goto	u1220
   415  000424                     u1221:
   416  000424  EF34  F002         	goto	l379
   417  000428                     u1220:
   418                           	line	120
   419                           ;modbus_rtu.c: 119: {
   420                           ;modbus_rtu.c: 120: if((1 ==rx_buf.data_buf[0])|
                                 |(255==rx_buf.data_buf[0]))
   421  000428  0403               	decf	(0+((c:0)+03h)),c,w
   422                           
   423  00042A  B4D8               	btfsc	status,2
   424  00042C  EF1A  F002         	goto	u1231
   425  000430  EF1C  F002         	goto	u1230
   426  000434                     u1231:
   427  000434  EF24  F002         	goto	l600000230
   428  000438                     u1230:
   429  000438  2803               	incf	(0+((c:0)+03h)),c,w
   430                           
   431  00043A  A4D8               	btfss	status,2
   432  00043C  EF22  F002         	goto	u1241
   433  000440  EF24  F002         	goto	u1240
   434  000444                     u1241:
   435  000444  EF2C  F002         	goto	l380
   436  000448                     u1240:
   437                           	
   438  000448                     l600000230:		; BSR set to: ?
   439                           
   440                           	line	122
   441                           ;modbus_rtu.c: 121: {
   442                           ;modbus_rtu.c: 122: rx_buf.data_valid = 1;
   443  000448  0102               	movlb	2	; () banked
   444  00044A  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   445  00044C  0E01               	movlw	low(01h)
   446  00044E  6E01               	movwf	(0+((c:0)+01h)),c
   447  000450  0102               	movlb	2	; () banked
   448  000452  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   449                           	line	123
   450                           ;modbus_rtu.c: 123: }
   451  000454  EF32  F002         	goto	l381
   452                           	line	124
   453                           	
   454  000458                     l380:		; BSR set to: ?
   455                           
   456                           	line	126
   457                           ;modbus_rtu.c: 124: else
   458                           ;modbus_rtu.c: 125: {
   459                           ;modbus_rtu.c: 126: rx_buf.rec_count = 0;
   460  000458  0102               	movlb	2	; () banked
   461  00045A  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   462  00045C  0E00               	movlw	low(0)
   463  00045E  6E02               	movwf	(0+((c:0)+02h)),c
   464  000460  0102               	movlb	2	; () banked
   465  000462  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   466                           	line	127
   467                           	
   468  000464                     l381:		; BSR set to: ?
   469                           
   470                           	line	128
   471                           ;modbus_rtu.c: 127: }
   472                           ;modbus_rtu.c: 128: }
   473  000464  EF3A  F002         	goto	l378
   474                           	line	129
   475                           	
   476  000468                     l379:		; BSR set to: ?
   477                           
   478                           	line	131
   479                           ;modbus_rtu.c: 129: else
   480                           ;modbus_rtu.c: 130: {
   481                           ;modbus_rtu.c: 131: rx_buf.rec_count = 0;
   482  000468  0102               	movlb	2	; () banked
   483  00046A  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   484  00046C  0E00               	movlw	low(0)
   485  00046E  6E02               	movwf	(0+((c:0)+02h)),c
   486  000470  0102               	movlb	2	; () banked
   487  000472  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   488                           	line	132
   489                           	
   490  000474                     l382:		; BSR set to: ?
   491                           
   492                           	line	133
   493                           	
   494  000474                     l378:		; BSR set to: ?
   495                           
   496                           	line	135
   497                           ;modbus_rtu.c: 132: }
   498                           ;modbus_rtu.c: 133: }
   499                           ;modbus_rtu.c: 135: if(rx_buf.data_valid)
   500  000474  5001               	movf	(0+((c:0)+01h)),c,w
   501  000476  B4D8               	btfsc	status,2
   502  000478  EF40  F002         	goto	u1251
   503  00047C  EF42  F002         	goto	u1250
   504  000480                     u1251:
   505  000480  EF71  F002         	goto	l383
   506  000484                     u1250:
   507                           	line	137
   508                           ;modbus_rtu.c: 136: {
   509                           ;modbus_rtu.c: 137: rx_buf.data_valid = 0;
   510  000484  0102               	movlb	2	; () banked
   511  000486  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   512  000488  0E00               	movlw	low(0)
   513  00048A  6E01               	movwf	(0+((c:0)+01h)),c
   514  00048C  0102               	movlb	2	; () banked
   515  00048E  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   516                           	line	139
   517                           ;modbus_rtu.c: 139: switch(rx_buf.data_buf[1])
   518  000490  EF68  F002         	goto	l385
   519                           	line	141
   520                           ;modbus_rtu.c: 140: {
   521                           ;modbus_rtu.c: 141: case 0x03:
   522                           	
   523  000494                     l386:		; BSR set to: ?
   524                           
   525                           	line	142
   526                           ;modbus_rtu.c: 142: read_holding_regs();
   527  000494  EC30  F000         	call	_read_holding_regs	;wreg free
   528                           	line	143
   529                           ;modbus_rtu.c: 143: break;
   530  000498  EF71  F002         	goto	l383
   531                           	line	144
   532                           ;modbus_rtu.c: 144: case 0x06:
   533                           	
   534  00049C                     l387:		; BSR set to: ?
   535                           
   536                           	line	145
   537                           ;modbus_rtu.c: 145: write_single_holding_reg();
   538  00049C  ECD3  F002         	call	_write_single_holding_reg	;wreg free
   539                           	line	146
   540                           ;modbus_rtu.c: 146: break;
   541  0004A0  EF71  F002         	goto	l383
   542                           	line	147
   543                           ;modbus_rtu.c: 147: case 0x16:
   544                           	
   545  0004A4                     l388:		; BSR set to: ?
   546                           
   547                           	line	149
   548                           ;modbus_rtu.c: 149: break;
   549  0004A4  EF71  F002         	goto	l383
   550                           	line	150
   551                           ;modbus_rtu.c: 150: default:
   552                           	
   553  0004A8                     l389:		; BSR set to: ?
   554                           
   555                           	line	151
   556                           ;modbus_rtu.c: 151: rx_buf.data_valid = 0;
   557  0004A8  0102               	movlb	2	; () banked
   558  0004AA  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   559  0004AC  0E00               	movlw	low(0)
   560  0004AE  6E01               	movwf	(0+((c:0)+01h)),c
   561  0004B0  0102               	movlb	2	; () banked
   562  0004B2  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   563                           	line	152
   564                           ;modbus_rtu.c: 152: rx_buf.rec_count = 0;
   565  0004B4  0102               	movlb	2	; () banked
   566  0004B6  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   567  0004B8  0E00               	movlw	low(0)
   568  0004BA  6E02               	movwf	(0+((c:0)+02h)),c
   569  0004BC  0102               	movlb	2	; () banked
   570  0004BE  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   571                           	line	153
   572                           ;modbus_rtu.c: 153: rx_buf.frame_ok = 0;
   573  0004C0  0102               	movlb	2	; () banked
   574  0004C2  6F00               	movwf	(??_modbus_receive+0+0)&0ffh
   575  0004C4  0E00               	movlw	low(0)
   576  0004C6  6E00               	movwf	((c:0)),c
   577  0004C8  0102               	movlb	2	; () banked
   578  0004CA  5100               	movf	(??_modbus_receive+0+0)&0ffh,w
   579                           	line	154
   580                           ;modbus_rtu.c: 154: break;
   581  0004CC  EF71  F002         	goto	l383
   582                           	line	139
   583                           	
   584  0004D0                     l385:		; BSR set to: ?
   585                           
   586  0004D0  5004               	movf	(0+((c:0)+04h)),c,w
   587  0004D2  0A03               	xorlw	3 ^ 0
   588  0004D4  E0DF               	bz	l386
   589  0004D6  0A05               	xorlw	6 ^ 3
   590  0004D8  E0E1               	bz	l387
   591  0004DA  0A10               	xorlw	22 ^ 6
   592  0004DC  E0E3               	bz	l388
   593  0004DE  EF54  F002         	goto	l389
   594                           
   595                           	line	156
   596                           	
   597  0004E2                     l383:		; BSR set to: ?
   598                           
   599                           	line	157
   600                           ;modbus_rtu.c: 156: }
   601                           ;modbus_rtu.c: 157: }
   602  0004E2                     l377:
   603                           			; BSR set to: ?
   604                           
   605  0004E2  0012               	return
   606                           	opt stack 0
   607                           GLOBAL __end_of_modbus_receive
   608  0004E4                     	__end_of_modbus_receive:
   609                           	FNSIZE	_modbus_receive,1,0
   610                           ; =============== function _modbus_receive ends 
                                 ============
   611                           
   612                           	signat	_modbus_receive,88
   613                           	global	_init_pv1
   614                           	global	??_init_pv1
   615                           	global	?_init_pv1
   616                           
   617                           ; *************** function _init_pv1 ***********
                                 ******
   618                           ; Defined at:
   619                           ;		line 171 in file "../main.c"
   620                           ; Parameters:
   621                           ;		None
   622                           ; Auto variables:
   623                           ;		None
   624                           ; Return value:
   625                           ;		type: void 
   626                           ;		size: 0
   627                           ; Registers used:
   628                           ;		wreg, status,2
   629                           ; Tracked objects:
   630                           ;		On entry : 0/0
   631                           ;		On exit  : 0/0
   632                           ;		Unchanged: 0/0
   633                           ; Data sizes:
   634                           ;		Autos:    0
   635                           ;		Params:   0
   636                           ;		Temp:     0
   637                           ;		Total:    0
   638                           ; This function calls:
   639                           ;		Nothing
   640                           ; This function is called by:
   641                           ;		_main
   642                           ; This function uses a non-reentrant model
   643                           ; 
   644                                   psect   text2,class=CODE,space=0,reloc=2
   645                           
   646                           	opt lm
   647                           	file	"../main.c"
   648                           	line	171
   649  000000                     	__size_of_init_pv1	equ	__end_of_init_pv1-_init_
                                 pv1
   650                           ;main.c: 170: void init_pv1(void)
   651                           ;main.c: 171: {
   652                           	
   653  000980                     _init_pv1:		; BSR set to: ?
   654                           
   655                           	opt stack 25
   656                           	line	172
   657                           ;main.c: 172: ANSELB = 0;
   658  000980  0E00               	movlw	low(0)
   659  000982  010F               	movlb	15	; () banked
   660  000984  010F               	movlb	15	; () banked
   661  000986  6F39               	movwf	((3897))&0ffh	;volatile
   662                           	line	173
   663                           ;main.c: 173: TRISB0=0;
   664  000988  9093               	bcf	c:(31896/8),(31896)&7	;volatile
   665                           	line	174
   666                           ;main.c: 174: RB0=1;
   667  00098A  8081               	bsf	c:(31752/8),(31752)&7	;volatile
   668                           	line	175
   669                           ;main.c: 175: TRISB0=1;
   670  00098C  8093               	bsf	c:(31896/8),(31896)&7	;volatile
   671                           	line	176
   672                           ;main.c: 176: INTEDG0 = 0;
   673  00098E  9CF1               	bcf	c:(32654/8),(32654)&7	;volatile
   674                           	line	177
   675                           ;main.c: 177: INT0IE = 1;
   676  000990  88F2               	bsf	c:(32660/8),(32660)&7	;volatile
   677                           	line	178
   678                           ;main.c: 178: INT0IF = 0;
   679  000992  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
   680                           	line	179
   681                           ;main.c: 179: }
   682  000994                     l771:
   683                           			; BSR set to: ?
   684                           
   685  000994  0012               	return
   686                           	opt stack 0
   687                           GLOBAL __end_of_init_pv1
   688  000996                     	__end_of_init_pv1:
   689                           	FNSIZE	_init_pv1,0,0
   690                           ; =============== function _init_pv1 ends ======
                                 ======
   691                           
   692                           	signat	_init_pv1,88
   693                           	global	_init_timer3
   694                           	global	??_init_timer3
   695                           	global	?_init_timer3
   696                           
   697                           ; *************** function _init_timer3 ********
                                 *********
   698                           ; Defined at:
   699                           ;		line 47 in file "../main.c"
   700                           ; Parameters:
   701                           ;		None
   702                           ; Auto variables:
   703                           ;		None
   704                           ; Return value:
   705                           ;		type: void 
   706                           ;		size: 0
   707                           ; Registers used:
   708                           ;		wreg, status,2
   709                           ; Tracked objects:
   710                           ;		On entry : 0/0
   711                           ;		On exit  : 0/0
   712                           ;		Unchanged: 0/0
   713                           ; Data sizes:
   714                           ;		Autos:    0
   715                           ;		Params:   0
   716                           ;		Temp:     0
   717                           ;		Total:    0
   718                           ; This function calls:
   719                           ;		Nothing
   720                           ; This function is called by:
   721                           ;		_main
   722                           ; This function uses a non-reentrant model
   723                           ; 
   724                                   psect   text3,class=CODE,space=0,reloc=2
   725                           
   726                           	opt lm
   727                           	file	"../main.c"
   728                           	line	47
   729  000000                     	__size_of_init_timer3	equ	__end_of_init_timer3-
                                 _init_timer3
   730                           ;main.c: 19: asm("\tglobal __config" "1"); asm("
                                 \t__config" "1" " equ " "0xF9FF & 0xEFFF & 0xFFF
                                 F & 0xFFFF & 0xFFFF");
   731                           ;main.c: 21: asm("\tglobal __config" "2"); asm("
                                 \t__config" "2" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F");
   732                           ;main.c: 23: asm("\tglobal __config" "3"); asm("
                                 \t__config" "3" " equ " "0xFFFF & 0xFFFF");
   733                           ;main.c: 25: asm("\tglobal __config" "4"); asm("
                                 \t__config" "4" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF");
   734                           ;main.c: 27: asm("\tglobal __config" "5"); asm("
                                 \t__config" "5" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F");
   735                           	
   736  000966                     _init_timer3:		; BSR set to: ?
   737                           
   738                           	opt stack 25
   739                           	line	49
   740  000966  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
   741                           	line	51
   742                           ;main.c: 51: TMR3CS0 = 0;
   743  000968  9CB1               	bcf	c:(32142/8),(32142)&7	;volatile
   744                           	line	52
   745                           ;main.c: 52: TMR3CS1 = 0;
   746  00096A  9EB1               	bcf	c:(32143/8),(32143)&7	;volatile
   747                           	line	54
   748                           ;main.c: 54: T3CKPS0 = 0;
   749  00096C  98B1               	bcf	c:(32140/8),(32140)&7	;volatile
   750                           	line	55
   751                           ;main.c: 55: T3CKPS1 = 0;
   752  00096E  9AB1               	bcf	c:(32141/8),(32141)&7	;volatile
   753                           	line	57
   754                           ;main.c: 57: TMR3 = 65535-11059;
   755  000970  0ECC               	movlw	low(0D4CCh)
   756  000972  6EB2               	movwf	((c:4018)),c	;volatile
   757  000974  0ED4               	movlw	high(0D4CCh)
   758  000976  6EB3               	movwf	((c:4018+1)),c	;volatile
   759                           	line	58
   760                           ;main.c: 58: TMR3IF=0;
   761  000978  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
   762                           	line	59
   763                           ;main.c: 59: TMR3IE=1;
   764  00097A  82A0               	bsf	c:(32001/8),(32001)&7	;volatile
   765                           	line	60
   766                           ;main.c: 60: TMR3ON = 1;
   767  00097C  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
   768                           	line	61
   769                           ;main.c: 61: }
   770  00097E                     l751:
   771                           			; BSR set to: ?
   772                           
   773  00097E  0012               	return
   774                           	opt stack 0
   775                           GLOBAL __end_of_init_timer3
   776  000980                     	__end_of_init_timer3:
   777                           	FNSIZE	_init_timer3,0,0
   778                           ; =============== function _init_timer3 ends ===
                                 =========
   779                           
   780                           	signat	_init_timer3,88
   781                           	global	_read_holding_regs
   782                           	global	??_read_holding_regs
   783                           	global	?_read_holding_regs
   784                           
   785                           ; *************** function _read_holding_regs **
                                 ***************
   786                           ; Defined at:
   787                           ;		line 160 in file "../modbus_rtu.c"
   788                           ; Parameters:
   789                           ;		None
   790                           ; Auto variables:
   791                           ;		i           	       	type: unsigned char 
   792                           ;		start_addr  	       	type: unsigned int 
   793                           ;		data_crc    	       	type: unsigned int 
   794                           ;		num         	       	type: unsigned int 
   795                           ; Return value:
   796                           ;		type: void 
   797                           ;		size: 0
   798                           ; Registers used:
   799                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
   800                           ; Tracked objects:
   801                           ;		On entry : 0/0
   802                           ;		On exit  : 0/0
   803                           ;		Unchanged: 0/0
   804                           ; Data sizes:
   805                           ;		Autos:    7
   806                           ;		Params:   0
   807                           ;		Temp:     7
   808                           ;		Total:   14
   809                           ; This function calls:
   810                           ;		_modbus_crc16
   811                           ; This function is called by:
   812                           ;		_modbus_receive
   813                           ; This function uses a non-reentrant model
   814                           ; 
   815                                   psect   text4,class=CODE,space=0,reloc=2
   816                           
   817                           	opt lm
   818                           	file	"../modbus_rtu.c"
   819                           	line	160
   820  000000                     	__size_of_read_holding_regs	equ	__end_of_read_h
                                 olding_regs-_read_holding_regs
   821                           ;modbus_rtu.c: 159: void read_holding_regs(void)
   822                           ;modbus_rtu.c: 160: {
   823                           	
   824  000060                     _read_holding_regs:		; BSR set to: ?
   825                           
   826                           	opt stack 24
   827                           	line	161
   828  000060  0E00               	movlw	low(0)
   829  000062  0102               	movlb	2	; () banked
   830  000064  0102               	movlb	2	; () banked
   831  000066  6F06               	movwf	((read_holding_regs@num))&0ffh
   832  000068  0E00               	movlw	high(0)
   833  00006A  0102               	movlb	2	; () banked
   834  00006C  6F07               	movwf	((read_holding_regs@num+1))&0ffh
   835                           	line	163
   836                           ;modbus_rtu.c: 162: unsigned int start_addr;
   837                           ;modbus_rtu.c: 163: unsigned int data_crc=0;
   838  00006E  0E00               	movlw	low(0)
   839  000070  0102               	movlb	2	; () banked
   840  000072  0102               	movlb	2	; () banked
   841  000074  6F04               	movwf	((read_holding_regs@data_crc))&0ffh
   842  000076  0E00               	movlw	high(0)
   843  000078  0102               	movlb	2	; () banked
   844  00007A  6F05               	movwf	((read_holding_regs@data_crc+1))&0ffh
   845                           	line	164
   846                           ;modbus_rtu.c: 164: unsigned char i = 0 ;
   847  00007C  0102               	movlb	2	; () banked
   848  00007E  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   849  000080  0E00               	movlw	low(0)
   850  000082  0102               	movlb	2	; () banked
   851  000084  0102               	movlb	2	; () banked
   852  000086  6F01               	movwf	((read_holding_regs@i))&0ffh
   853  000088  0102               	movlb	2	; () banked
   854  00008A  5108               	movf	(??_read_holding_regs+7+0)&0ffh,w
   855                           	line	166
   856                           ;modbus_rtu.c: 166: start_addr = ((rx_buf.data_b
                                 uf[2])<<8)|(rx_buf.data_buf[3]);
   857  00008C  5005               	movf	(0+((c:0)+05h)),c,w
   858  00008E  0102               	movlb	2	; () banked
   859  000090  0102               	movlb	2	; () banked
   860  000092  6F03               	movwf	((read_holding_regs@start_addr+1))&0ffh
   861  000094  5006               	movf	(0+((c:0)+06h)),c,w
   862  000096  0102               	movlb	2	; () banked
   863  000098  6F02               	movwf	((read_holding_regs@start_addr))&0ffh
   864                           	line	168
   865                           ;modbus_rtu.c: 168: num = ((rx_buf.data_buf[4])<
                                 <8)|(rx_buf.data_buf[5]);
   866  00009A  5007               	movf	(0+((c:0)+07h)),c,w
   867  00009C  0102               	movlb	2	; () banked
   868  00009E  0102               	movlb	2	; () banked
   869  0000A0  6F07               	movwf	((read_holding_regs@num+1))&0ffh
   870  0000A2  5008               	movf	(0+((c:0)+08h)),c,w
   871  0000A4  0102               	movlb	2	; () banked
   872  0000A6  6F06               	movwf	((read_holding_regs@num))&0ffh
   873                           	line	170
   874                           ;modbus_rtu.c: 170: tx_buf.data_buf[0] = 1;
   875  0000A8  0102               	movlb	2	; () banked
   876  0000AA  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   877  0000AC  0E01               	movlw	low(01h)
   878  0000AE  0101               	movlb	1	; () banked
   879  0000B0  0101               	movlb	1	; () banked
   880  0000B2  6F01               	movwf	(0+(256+01h))&0ffh
   881  0000B4  0102               	movlb	2	; () banked
   882  0000B6  5108               	movf	(??_read_holding_regs+7+0)&0ffh,w
   883                           	line	171
   884                           ;modbus_rtu.c: 171: tx_buf.data_buf[1] = 0x03;
   885  0000B8  0102               	movlb	2	; () banked
   886  0000BA  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   887  0000BC  0E03               	movlw	low(03h)
   888  0000BE  0101               	movlb	1	; () banked
   889  0000C0  0101               	movlb	1	; () banked
   890  0000C2  6F02               	movwf	(0+(256+02h))&0ffh
   891  0000C4  0102               	movlb	2	; () banked
   892  0000C6  5108               	movf	(??_read_holding_regs+7+0)&0ffh,w
   893                           	line	172
   894                           ;modbus_rtu.c: 172: tx_buf.data_buf[2] = 2*num;
   895  0000C8  0102               	movlb	2	; () banked
   896  0000CA  0102               	movlb	2	; () banked
   897  0000CC  5106               	movf	((read_holding_regs@num))&0ffh,w
   898  0000CE  0102               	movlb	2	; () banked
   899  0000D0  2506               	addwf	((read_holding_regs@num))&0ffh,w
   900  0000D2  0101               	movlb	1	; () banked
   901  0000D4  0101               	movlb	1	; () banked
   902  0000D6  6F03               	movwf	(0+(256+03h))&0ffh
   903                           	line	174
   904                           ;modbus_rtu.c: 174: for(i=0;i<num;i++)
   905  0000D8  0102               	movlb	2	; () banked
   906  0000DA  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   907  0000DC  0E00               	movlw	low(0)
   908  0000DE  0102               	movlb	2	; () banked
   909  0000E0  0102               	movlb	2	; () banked
   910  0000E2  6F01               	movwf	((read_holding_regs@i))&0ffh
   911  0000E4  0102               	movlb	2	; () banked
   912  0000E6  5108               	movf	(??_read_holding_regs+7+0)&0ffh,w
   913  0000E8  EFEC  F000         	goto	l394
   914                           	line	175
   915                           	
   916  0000EC                     l391:		; BSR set to: ?
   917                           
   918                           	line	176
   919                           ;modbus_rtu.c: 175: {
   920                           ;modbus_rtu.c: 176: tx_buf.data_buf[3+2*i] = mod
                                 bus_reg[i+start_addr]>>8;
   921  0000EC  0102               	movlb	2	; () banked
   922  0000EE  0102               	movlb	2	; () banked
   923  0000F0  5101               	movf	((read_holding_regs@i))&0ffh,w
   924  0000F2  0D02               	mullw	02h
   925  0000F4  CFF3 F208          	movff	prodl,??_read_holding_regs+7+0
   926  0000F8  0E04               	movlw	04h
   927  0000FA  0102               	movlb	2	; () banked
   928  0000FC  2708               	addwf	(??_read_holding_regs+7+0)&0ffh
   929  0000FE  0101               	movlb	1	; () banked
   930  000100  0E00               	movlw	low(256)
   931  000102  0102               	movlb	2	; () banked
   932  000104  2508               	addwf	(??_read_holding_regs+7+0)&0ffh,w
   933  000106  6EE9               	movwf	c:fsr0l
   934  000108  6AEA               	clrf	1+c:fsr0l
   935  00010A  0101               	movlb	1	; () banked
   936  00010C  0E01               	movlw	high(256)
   937  00010E  22EA               	addwfc	1+c:fsr0l
   938  000110  0102               	movlb	2	; () banked
   939  000112  0102               	movlb	2	; () banked
   940  000114  5101               	movf	((read_holding_regs@i))&0ffh,w
   941  000116  0102               	movlb	2	; () banked
   942  000118  0102               	movlb	2	; () banked
   943  00011A  2502               	addwf	((read_holding_regs@start_addr))&0ffh,w
   944  00011C  0102               	movlb	2	; () banked
   945  00011E  6F09               	movwf	(??_read_holding_regs+8+0)&0ffh
   946  000120  0E00               	movlw	0
   947  000122  0102               	movlb	2	; () banked
   948  000124  0102               	movlb	2	; () banked
   949  000126  2103               	addwfc	((read_holding_regs@start_addr+1))&0ffh,
                                 w
   950  000128  0102               	movlb	2	; () banked
   951  00012A  6F0A               	movwf	(??_read_holding_regs+8+0+1)&0ffh
   952  00012C  90D8               	bcf	status,0
   953  00012E  0102               	movlb	2	; () banked
   954  000130  3509               	rlcf	(??_read_holding_regs+8+0)&0ffh,w
   955  000132  0102               	movlb	2	; () banked
   956  000134  6F0B               	movwf	(??_read_holding_regs+10+0)&0ffh
   957  000136  0102               	movlb	2	; () banked
   958  000138  350A               	rlcf	(??_read_holding_regs+8+1)&0ffh,w
   959  00013A  0102               	movlb	2	; () banked
   960  00013C  6F0C               	movwf	1+(??_read_holding_regs+10+0)&0ffh
   961  00013E  0100               	movlb	0	; () banked
   962  000140  0E35               	movlw	low(53)
   963  000142  0102               	movlb	2	; () banked
   964  000144  250B               	addwf	(??_read_holding_regs+10+0)&0ffh,w
   965  000146  6EE1               	movwf	c:fsr1l
   966  000148  0100               	movlb	0	; () banked
   967  00014A  0E00               	movlw	high(53)
   968  00014C  0102               	movlb	2	; () banked
   969  00014E  210C               	addwfc	(??_read_holding_regs+10+1)&0ffh,w
   970  000150  6EE2               	movwf	1+c:fsr1l
   971  000152  CFE6 F20D          	movff	postinc1,??_read_holding_regs+12+0
   972  000156  CFE5 F20E          	movff	postdec1,??_read_holding_regs+12+0+1
   973  00015A  C20E  F20D         	movff	??_read_holding_regs+12+1,??_read_holding
                                 _regs+12+0
   974  00015E  0102               	movlb	2	; () banked
   975  000160  6B0E               	clrf	(??_read_holding_regs+12+1)&0ffh
   976  000162  0102               	movlb	2	; () banked
   977  000164  510D               	movf	(??_read_holding_regs+12+0)&0ffh,w
   978  000166  6EEF               	movwf	indf0
   979                           
   980                           	line	177
   981                           ;modbus_rtu.c: 177: tx_buf.data_buf[3+2*i+1] = m
                                 odbus_reg[i+start_addr];
   982  000168  0102               	movlb	2	; () banked
   983  00016A  0102               	movlb	2	; () banked
   984  00016C  5101               	movf	((read_holding_regs@i))&0ffh,w
   985  00016E  0102               	movlb	2	; () banked
   986  000170  0102               	movlb	2	; () banked
   987  000172  2502               	addwf	((read_holding_regs@start_addr))&0ffh,w
   988  000174  0102               	movlb	2	; () banked
   989  000176  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
   990  000178  0E00               	movlw	0
   991  00017A  0102               	movlb	2	; () banked
   992  00017C  0102               	movlb	2	; () banked
   993  00017E  2103               	addwfc	((read_holding_regs@start_addr+1))&0ffh,
                                 w
   994  000180  0102               	movlb	2	; () banked
   995  000182  6F09               	movwf	(??_read_holding_regs+7+0+1)&0ffh
   996  000184  90D8               	bcf	status,0
   997  000186  0102               	movlb	2	; () banked
   998  000188  3508               	rlcf	(??_read_holding_regs+7+0)&0ffh,w
   999  00018A  0102               	movlb	2	; () banked
  1000  00018C  6F0A               	movwf	(??_read_holding_regs+9+0)&0ffh
  1001  00018E  0102               	movlb	2	; () banked
  1002  000190  3509               	rlcf	(??_read_holding_regs+7+1)&0ffh,w
  1003  000192  0102               	movlb	2	; () banked
  1004  000194  6F0B               	movwf	1+(??_read_holding_regs+9+0)&0ffh
  1005  000196  0100               	movlb	0	; () banked
  1006  000198  0E35               	movlw	low(53)
  1007  00019A  0102               	movlb	2	; () banked
  1008  00019C  250A               	addwf	(??_read_holding_regs+9+0)&0ffh,w
  1009  00019E  6EE9               	movwf	c:fsr0l
  1010  0001A0  0100               	movlb	0	; () banked
  1011  0001A2  0E00               	movlw	high(53)
  1012  0001A4  0102               	movlb	2	; () banked
  1013  0001A6  210B               	addwfc	(??_read_holding_regs+9+1)&0ffh,w
  1014  0001A8  6EEA               	movwf	1+c:fsr0l
  1015  0001AA  0102               	movlb	2	; () banked
  1016  0001AC  0102               	movlb	2	; () banked
  1017  0001AE  5101               	movf	((read_holding_regs@i))&0ffh,w
  1018  0001B0  0D02               	mullw	02h
  1019  0001B2  CFF3 F20C          	movff	prodl,??_read_holding_regs+11+0
  1020  0001B6  0E05               	movlw	05h
  1021  0001B8  0102               	movlb	2	; () banked
  1022  0001BA  270C               	addwf	(??_read_holding_regs+11+0)&0ffh
  1023  0001BC  0101               	movlb	1	; () banked
  1024  0001BE  0E00               	movlw	low(256)
  1025  0001C0  0102               	movlb	2	; () banked
  1026  0001C2  250C               	addwf	(??_read_holding_regs+11+0)&0ffh,w
  1027  0001C4  6EE1               	movwf	c:fsr1l
  1028  0001C6  6AE2               	clrf	1+c:fsr1l
  1029  0001C8  0101               	movlb	1	; () banked
  1030  0001CA  0E01               	movlw	high(256)
  1031  0001CC  22E2               	addwfc	1+c:fsr1l
  1032  0001CE  CFEF FFE7          	movff	indf0,indf1
  1033                           	line	174
  1034  0001D2  0102               	movlb	2	; () banked
  1035  0001D4  0102               	movlb	2	; () banked
  1036  0001D6  2B01               	incf	((read_holding_regs@i))&0ffh
  1037                           	
  1038  0001D8                     l394:		; BSR set to: ?
  1039                           
  1040  0001D8  0102               	movlb	2	; () banked
  1041  0001DA  C201  F208         	movff	(read_holding_regs@i),??_read_holding_reg
                                 s+7+0
  1042  0001DE  0102               	movlb	2	; () banked
  1043  0001E0  6B09               	clrf	(??_read_holding_regs+7+0+1)&0ffh
  1044  0001E2  0102               	movlb	2	; () banked
  1045  0001E4  0102               	movlb	2	; () banked
  1046  0001E6  5106               	movf	((read_holding_regs@num))&0ffh,w
  1047  0001E8  0102               	movlb	2	; () banked
  1048  0001EA  5D08               	subwf	(??_read_holding_regs+7+0)&0ffh,w
  1049  0001EC  0102               	movlb	2	; () banked
  1050  0001EE  0102               	movlb	2	; () banked
  1051  0001F0  5107               	movf	((read_holding_regs@num+1))&0ffh,w
  1052  0001F2  0102               	movlb	2	; () banked
  1053  0001F4  5909               	subwfb	(??_read_holding_regs+7+1)&0ffh,w
  1054  0001F6  A0D8               	btfss	status,0
  1055  0001F8  EF00  F001         	goto	u1271
  1056  0001FC  EF02  F001         	goto	u1270
  1057  000200                     u1271:
  1058  000200  EF76  F000         	goto	l391
  1059  000204                     u1270:
  1060                           	
  1061  000204                     l392:		; BSR set to: ?
  1062                           
  1063                           	line	179
  1064                           ;modbus_rtu.c: 178: }
  1065                           ;modbus_rtu.c: 179: data_crc = modbus_crc16(tx_b
                                 uf.data_buf,(2*num+3));
  1066  000204  90D8               	bcf	status,0
  1067  000206  0102               	movlb	2	; () banked
  1068  000208  0102               	movlb	2	; () banked
  1069  00020A  3506               	rlcf	((read_holding_regs@num))&0ffh,w
  1070  00020C  0102               	movlb	2	; () banked
  1071  00020E  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
  1072  000210  0102               	movlb	2	; () banked
  1073  000212  0102               	movlb	2	; () banked
  1074  000214  3507               	rlcf	((read_holding_regs@num+1))&0ffh,w
  1075  000216  0102               	movlb	2	; () banked
  1076  000218  6F09               	movwf	1+(??_read_holding_regs+7+0)&0ffh
  1077  00021A  0E03               	movlw	low(03h)
  1078  00021C  0102               	movlb	2	; () banked
  1079  00021E  2508               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1080  000220  0102               	movlb	2	; () banked
  1081                           	
  1082  000222  0102               	movlb	2	; () banked
  1083  000224  6F11               	movwf	(0+(?_modbus_crc16+02h))&0ffh
  1084  000226  0E00               	movlw	high(03h)
  1085  000228  0102               	movlb	2	; () banked
  1086  00022A  2109               	addwfc	(??_read_holding_regs+7+1)&0ffh,w
  1087  00022C  0102               	movlb	2	; () banked
  1088  00022E  6F12               	movwf	1+(0+(?_modbus_crc16+02h))&0ffh
  1089  000230  0101               	movlb	1	; () banked
  1090  000232  0E01               	movlw	low(256+01h)
  1091  000234  0102               	movlb	2	; () banked
  1092  000236  0102               	movlb	2	; () banked
  1093  000238  6F0F               	movwf	((?_modbus_crc16))&0ffh
  1094  00023A  0101               	movlb	1	; () banked
  1095  00023C  0E01               	movlw	high(256+01h)
  1096  00023E  0102               	movlb	2	; () banked
  1097  000240  6F10               	movwf	((?_modbus_crc16+1))&0ffh
  1098  000242  EC31  F003         	call	_modbus_crc16	;wreg free
  1099  000246  C20F  F204         	movff	0+?_modbus_crc16,(read_holding_regs@data_
                                 crc)
  1100  00024A  C210  F205         	movff	1+?_modbus_crc16,(read_holding_regs@data_
                                 crc+1)
  1101                           	line	181
  1102                           ;modbus_rtu.c: 181: tx_buf.data_buf[3+2*num] = d
                                 ata_crc;
  1103  00024E  0102               	movlb	2	; () banked
  1104  000250  90D8               	bcf	status,0
  1105  000252  0102               	movlb	2	; () banked
  1106  000254  3506               	rlcf	((read_holding_regs@num))&0ffh,w
  1107  000256  0102               	movlb	2	; () banked
  1108  000258  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
  1109  00025A  0E04               	movlw	04h
  1110  00025C  0102               	movlb	2	; () banked
  1111  00025E  2708               	addwf	(??_read_holding_regs+7+0)&0ffh
  1112  000260  0101               	movlb	1	; () banked
  1113  000262  0E00               	movlw	low(256)
  1114  000264  0102               	movlb	2	; () banked
  1115  000266  2508               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1116  000268  6EE9               	movwf	c:fsr0l
  1117  00026A  6AEA               	clrf	1+c:fsr0l
  1118  00026C  0101               	movlb	1	; () banked
  1119  00026E  0E01               	movlw	high(256)
  1120  000270  22EA               	addwfc	1+c:fsr0l
  1121  000272  0102               	movlb	2	; () banked
  1122  000274  C204  FFEF         	movff	(read_holding_regs@data_crc),indf0
  1123                           
  1124                           	line	182
  1125                           ;modbus_rtu.c: 182: tx_buf.data_buf[4+2*num] = d
                                 ata_crc>>8;
  1126  000278  0102               	movlb	2	; () banked
  1127  00027A  90D8               	bcf	status,0
  1128  00027C  0102               	movlb	2	; () banked
  1129  00027E  3506               	rlcf	((read_holding_regs@num))&0ffh,w
  1130  000280  0102               	movlb	2	; () banked
  1131  000282  6F08               	movwf	(??_read_holding_regs+7+0)&0ffh
  1132  000284  0E05               	movlw	05h
  1133  000286  0102               	movlb	2	; () banked
  1134  000288  2708               	addwf	(??_read_holding_regs+7+0)&0ffh
  1135  00028A  0101               	movlb	1	; () banked
  1136  00028C  0E00               	movlw	low(256)
  1137  00028E  0102               	movlb	2	; () banked
  1138  000290  2508               	addwf	(??_read_holding_regs+7+0)&0ffh,w
  1139  000292  6EE9               	movwf	c:fsr0l
  1140  000294  6AEA               	clrf	1+c:fsr0l
  1141  000296  0101               	movlb	1	; () banked
  1142  000298  0E01               	movlw	high(256)
  1143  00029A  22EA               	addwfc	1+c:fsr0l
  1144  00029C  0102               	movlb	2	; () banked
  1145  00029E  0102               	movlb	2	; () banked
  1146  0002A0  5105               	movf	((read_holding_regs@data_crc+1))&0ffh,w
  1147  0002A2  6EEF               	movwf	indf0
  1148                           
  1149                           	line	183
  1150                           ;modbus_rtu.c: 183: tx_buf.tx_count = 5+2*num;
  1151  0002A4  0102               	movlb	2	; () banked
  1152  0002A6  0102               	movlb	2	; () banked
  1153  0002A8  5106               	movf	((read_holding_regs@num))&0ffh,w
  1154  0002AA  0102               	movlb	2	; () banked
  1155  0002AC  2506               	addwf	((read_holding_regs@num))&0ffh,w
  1156  0002AE  0F05               	addlw	low(05h)
  1157  0002B0  0101               	movlb	1	; () banked
  1158  0002B2  0101               	movlb	1	; () banked
  1159  0002B4  6F00               	movwf	((256))&0ffh
  1160                           	line	185
  1161                           ;modbus_rtu.c: 185: (TX1IE) = 1;
  1162  0002B6  889D               	bsf	c:(31980/8),(31980)&7	;volatile
  1163                           	line	186
  1164                           ;modbus_rtu.c: 186: }
  1165  0002B8                     l390:
  1166                           			; BSR set to: ?
  1167                           
  1168  0002B8  0012               	return
  1169                           	opt stack 0
  1170                           GLOBAL __end_of_read_holding_regs
  1171  0002BA                     	__end_of_read_holding_regs:
  1172                           	FNSIZE	_read_holding_regs,14,0
  1173                           ; =============== function _read_holding_regs en
                                 ds ============
  1174                           
  1175                           	signat	_read_holding_regs,88
  1176                           	global	_write_single_holding_reg
  1177                           	global	??_write_single_holding_reg
  1178                           	global	?_write_single_holding_reg
  1179                           
  1180                           ; *************** function _write_single_holding
                                 _reg *****************
  1181                           ; Defined at:
  1182                           ;		line 189 in file "../modbus_rtu.c"
  1183                           ; Parameters:
  1184                           ;		None
  1185                           ; Auto variables:
  1186                           ;		i           	       	type: unsigned char 
  1187                           ;		start_addr  	       	type: unsigned int 
  1188                           ; Return value:
  1189                           ;		type: void 
  1190                           ;		size: 0
  1191                           ; Registers used:
  1192                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0
  1193                           ; Tracked objects:
  1194                           ;		On entry : 0/0
  1195                           ;		On exit  : 0/0
  1196                           ;		Unchanged: 0/0
  1197                           ; Data sizes:
  1198                           ;		Autos:    3
  1199                           ;		Params:   0
  1200                           ;		Temp:     4
  1201                           ;		Total:    7
  1202                           ; This function calls:
  1203                           ;		Nothing
  1204                           ; This function is called by:
  1205                           ;		_modbus_receive
  1206                           ; This function uses a non-reentrant model
  1207                           ; 
  1208                                   psect   text5,class=CODE,space=0,reloc=2
  1209                           
  1210                           	opt lm
  1211                           	file	"../modbus_rtu.c"
  1212                           	line	189
  1213  000000                     	__size_of_write_single_holding_reg	equ	__end_of
                                 _write_single_holding_reg-_write_single_holding_
                                 reg
  1214                           ;modbus_rtu.c: 188: void write_single_holding_re
                                 g(void)
  1215                           ;modbus_rtu.c: 189: {
  1216                           	
  1217  0005A6                     _write_single_holding_reg:		; BSR set to: ?
  1218                           
  1219                           	opt stack 24
  1220                           	line	193
  1221                           ;modbus_rtu.c: 190: unsigned int start_addr;
  1222                           ;modbus_rtu.c: 191: unsigned char i;
  1223                           ;modbus_rtu.c: 193: start_addr = ((rx_buf.data_b
                                 uf[2])<<8)|(rx_buf.data_buf[3]);
  1224  0005A6  5005               	movf	(0+((c:0)+05h)),c,w
  1225  0005A8  0102               	movlb	2	; () banked
  1226  0005AA  0102               	movlb	2	; () banked
  1227  0005AC  6F03               	movwf	((write_single_holding_reg@start_addr+1))
                                 &0ffh
  1228  0005AE  5006               	movf	(0+((c:0)+06h)),c,w
  1229  0005B0  0102               	movlb	2	; () banked
  1230  0005B2  6F02               	movwf	((write_single_holding_reg@start_addr))&0
                                 ffh
  1231                           	line	195
  1232                           ;modbus_rtu.c: 195: modbus_reg[start_addr] = (rx
                                 _buf.data_buf[5])|((rx_buf.data_buf[4])<<8);
  1233  0005B4  5007               	movf	(0+((c:0)+07h)),c,w
  1234  0005B6  0102               	movlb	2	; () banked
  1235  0005B8  6F05               	movwf	(??_write_single_holding_reg+3+0+1)&0ffh
  1236  0005BA  5008               	movf	(0+((c:0)+08h)),c,w
  1237  0005BC  0102               	movlb	2	; () banked
  1238  0005BE  6F04               	movwf	(??_write_single_holding_reg+3+0)&0ffh
  1239  0005C0  90D8               	bcf	status,0
  1240  0005C2  0102               	movlb	2	; () banked
  1241  0005C4  0102               	movlb	2	; () banked
  1242  0005C6  3502               	rlcf	((write_single_holding_reg@start_addr))&0f
                                 fh,w
  1243  0005C8  0102               	movlb	2	; () banked
  1244  0005CA  6F06               	movwf	(??_write_single_holding_reg+5+0)&0ffh
  1245  0005CC  0102               	movlb	2	; () banked
  1246  0005CE  0102               	movlb	2	; () banked
  1247  0005D0  3503               	rlcf	((write_single_holding_reg@start_addr+1))&
                                 0ffh,w
  1248  0005D2  0102               	movlb	2	; () banked
  1249  0005D4  6F07               	movwf	1+(??_write_single_holding_reg+5+0)&0ffh
  1250  0005D6  0100               	movlb	0	; () banked
  1251  0005D8  0E35               	movlw	low(53)
  1252  0005DA  0102               	movlb	2	; () banked
  1253  0005DC  2506               	addwf	(??_write_single_holding_reg+5+0)&0ffh,w
  1254  0005DE  6EE9               	movwf	c:fsr0l
  1255  0005E0  0100               	movlb	0	; () banked
  1256  0005E2  0E00               	movlw	high(53)
  1257  0005E4  0102               	movlb	2	; () banked
  1258  0005E6  2107               	addwfc	(??_write_single_holding_reg+5+1)&0ffh,w
  1259  0005E8  6EEA               	movwf	1+c:fsr0l
  1260  0005EA  C204  FFEE         	movff	??_write_single_holding_reg+3+0,postinc0
  1261  0005EE  C205  FFED         	movff	??_write_single_holding_reg+3+1,postdec0
  1262                           
  1263                           	line	197
  1264                           ;modbus_rtu.c: 197: for(i=0;i<rx_buf.rec_count;i
                                 ++)
  1265  0005F2  0102               	movlb	2	; () banked
  1266  0005F4  6F04               	movwf	(??_write_single_holding_reg+3+0)&0ffh
  1267  0005F6  0E00               	movlw	low(0)
  1268  0005F8  0102               	movlb	2	; () banked
  1269  0005FA  0102               	movlb	2	; () banked
  1270  0005FC  6F01               	movwf	((write_single_holding_reg@i))&0ffh
  1271  0005FE  0102               	movlb	2	; () banked
  1272  000600  5104               	movf	(??_write_single_holding_reg+3+0)&0ffh,w
  1273  000602  EF22  F003         	goto	l399
  1274                           	line	198
  1275                           	
  1276  000606                     l396:		; BSR set to: ?
  1277                           
  1278                           	line	199
  1279                           ;modbus_rtu.c: 198: {
  1280                           ;modbus_rtu.c: 199: tx_buf.data_buf[i] = rx_buf.
                                 data_buf[i];
  1281  000606  C201  F204         	movff	(write_single_holding_reg@i),??_write_sin
                                 gle_holding_reg+3+0
  1282  00060A  0E03               	movlw	03h
  1283  00060C  0102               	movlb	2	; () banked
  1284  00060E  2704               	addwf	(??_write_single_holding_reg+3+0)&0ffh
  1285  000610  0E00               	movlw	low((c:0))
  1286  000612  0102               	movlb	2	; () banked
  1287  000614  2504               	addwf	(??_write_single_holding_reg+3+0)&0ffh,w
  1288  000616  6EE9               	movwf	c:fsr0l
  1289  000618  6AEA               	clrf	1+c:fsr0l
  1290  00061A  0E00               	movlw	high((c:0))
  1291  00061C  22EA               	addwfc	1+c:fsr0l
  1292  00061E  C201  F205         	movff	(write_single_holding_reg@i),??_write_sin
                                 gle_holding_reg+4+0
  1293  000622  0E01               	movlw	01h
  1294  000624  0102               	movlb	2	; () banked
  1295  000626  2705               	addwf	(??_write_single_holding_reg+4+0)&0ffh
  1296  000628  0101               	movlb	1	; () banked
  1297  00062A  0E00               	movlw	low(256)
  1298  00062C  0102               	movlb	2	; () banked
  1299  00062E  2505               	addwf	(??_write_single_holding_reg+4+0)&0ffh,w
  1300  000630  6EE1               	movwf	c:fsr1l
  1301  000632  6AE2               	clrf	1+c:fsr1l
  1302  000634  0101               	movlb	1	; () banked
  1303  000636  0E01               	movlw	high(256)
  1304  000638  22E2               	addwfc	1+c:fsr1l
  1305  00063A  CFEF FFE7          	movff	indf0,indf1
  1306                           	line	197
  1307  00063E  0102               	movlb	2	; () banked
  1308  000640  0102               	movlb	2	; () banked
  1309  000642  2B01               	incf	((write_single_holding_reg@i))&0ffh
  1310                           	
  1311  000644                     l399:		; BSR set to: ?
  1312                           
  1313  000644  5002               	movf	(0+((c:0)+02h)),c,w
  1314  000646  0102               	movlb	2	; () banked
  1315  000648  0102               	movlb	2	; () banked
  1316  00064A  5D01               	subwf	((write_single_holding_reg@i))&0ffh,w
  1317  00064C  A0D8               	btfss	status,0
  1318  00064E  EF2B  F003         	goto	u1281
  1319  000652  EF2D  F003         	goto	u1280
  1320  000656                     u1281:
  1321  000656  EF03  F003         	goto	l396
  1322  00065A                     u1280:
  1323                           	
  1324  00065A                     l397:		; BSR set to: ?
  1325                           
  1326                           	line	202
  1327                           ;modbus_rtu.c: 200: }
  1328                           ;modbus_rtu.c: 202: tx_buf.tx_count = rx_buf.rec
                                 _count;
  1329  00065A  C002 F100          	movff	0+((c:0)+02h),(256)
  1330                           	line	205
  1331                           ;modbus_rtu.c: 205: (TX1IE) = 1;
  1332  00065E  889D               	bsf	c:(31980/8),(31980)&7	;volatile
  1333                           	line	206
  1334                           ;modbus_rtu.c: 206: }
  1335  000660                     l395:
  1336                           			; BSR set to: ?
  1337                           
  1338  000660  0012               	return
  1339                           	opt stack 0
  1340                           GLOBAL __end_of_write_single_holding_reg
  1341  000662                     	__end_of_write_single_holding_reg:
  1342                           	FNSIZE	_write_single_holding_reg,7,0
  1343                           ; =============== function _write_single_holding
                                 _reg ends ============
  1344                           
  1345                           	signat	_write_single_holding_reg,88
  1346                           	global	_modbus_crc16
  1347                           	global	??_modbus_crc16
  1348                           	global	?_modbus_crc16
  1349                           
  1350                           ; *************** function _modbus_crc16 *******
                                 **********
  1351                           ; Defined at:
  1352                           ;		line 53 in file "../mbcrc.c"
  1353                           ; Parameters:
  1354                           ;		pucFrame       size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 53
  1355                           ;		 -> tx_buf(51), rx_buf(53), 
  1356                           ;		usLen          size:   2offs:   2	type: unsig
                                 ned int 
  1357                           ; Auto variables:
  1358                           ;		ucCRCHi     	       	type: unsigned char 
  1359                           ;		ucCRCLo     	       	type: unsigned char 
  1360                           ;		iIndex      	       	type: int 
  1361                           ; Return value:
  1362                           ;		type: unsigned int 
  1363                           ;		size: 2
  1364                           ; Registers used:
  1365                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat
  1366                           ; Tracked objects:
  1367                           ;		On entry : 0/0
  1368                           ;		On exit  : 0/0
  1369                           ;		Unchanged: 0/0
  1370                           ; Data sizes:
  1371                           ;		Autos:    4
  1372                           ;		Params:   4
  1373                           ;		Temp:     1
  1374                           ;		Total:    9
  1375                           ; This function calls:
  1376                           ;		Nothing
  1377                           ; This function is called by:
  1378                           ;		_modbus_receive
  1379                           ;		_read_holding_regs
  1380                           ; This function uses a non-reentrant model
  1381                           ; 
  1382                                   psect   text6,class=CODE,space=0,reloc=2
  1383                           
  1384                           	opt lm
  1385                           	file	"../mbcrc.c"
  1386                           	line	53
  1387  000000                     	__size_of_modbus_crc16	equ	__end_of_modbus_crc1
                                 6-_modbus_crc16
  1388                           ;mbcrc.h: 34: unsigned int modbus_crc16( unsigne
                                 d char * pucFrame, unsigned int usLen );
  1389                           ;mbcrc.c: 2: static const unsigned char aucCRCHi
                                 [] = {
  1390                           ;mbcrc.c: 3: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1391                           ;mbcrc.c: 4: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  1392                           ;mbcrc.c: 5: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1393                           ;mbcrc.c: 6: 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1,
                                  0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  1394                           ;mbcrc.c: 7: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
                                  0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  1395                           	
  1396  000662                     _modbus_crc16:		; BSR set to: ?
  1397                           
  1398                           	opt stack 23
  1399                           	line	54
  1400  000662  0102               	movlb	2	; () banked
  1401  000664  0102               	movlb	2	; () banked
  1402  000666  6913               	setf	((modbus_crc16@ucCRCHi))&0ffh
  1403                           	line	55
  1404                           ;mbcrc.c: 55: unsigned char ucCRCLo = 0xFF;
  1405  000668  0102               	movlb	2	; () banked
  1406  00066A  0102               	movlb	2	; () banked
  1407  00066C  6914               	setf	((modbus_crc16@ucCRCLo))&0ffh
  1408                           	line	58
  1409                           ;mbcrc.c: 56: int iIndex;
  1410                           ;mbcrc.c: 58: while( usLen-- )
  1411  00066E  EF6C  F003         	goto	l2
  1412                           	
  1413  000672                     l3:		; BSR set to: ?
  1414                           
  1415                           	line	60
  1416  000672  C20F  FFE9         	movff	(modbus_crc16@pucFrame),fsr0l
  1417  000676  C210  FFEA         	movff	(modbus_crc16@pucFrame+1),fsr0h
  1418  00067A  50EF               	movf	indf0,w
  1419  00067C  0102               	movlb	2	; () banked
  1420  00067E  0102               	movlb	2	; () banked
  1421  000680  1914               	xorwf	((modbus_crc16@ucCRCLo))&0ffh,w
  1422  000682  0102               	movlb	2	; () banked
  1423  000684  6F17               	movwf	(??_modbus_crc16+4+0)&0ffh
  1424  000686  0102               	movlb	2	; () banked
  1425  000688  5117               	movf	((??_modbus_crc16+4+0))&0ffh,w
  1426  00068A  0102               	movlb	2	; () banked
  1427  00068C  0102               	movlb	2	; () banked
  1428  00068E  6F15               	movwf	((modbus_crc16@iIndex))&0ffh
  1429  000690  0102               	movlb	2	; () banked
  1430  000692  6B16               	clrf	((modbus_crc16@iIndex+1))&0ffh
  1431                           ;mbcrc.c: 59: {
  1432                           ;mbcrc.c: 60: iIndex = ucCRCLo ^ *( pucFrame++ )
                                 ;
  1433  000694  0102               	movlb	2	; () banked
  1434  000696  0102               	movlb	2	; () banked
  1435  000698  4B0F               	infsnz	((modbus_crc16@pucFrame))&0ffh
  1436  00069A  2B10               	incf	((modbus_crc16@pucFrame+1))&0ffh
  1437                           	line	61
  1438                           ;mbcrc.c: 61: ucCRCLo = ( unsigned char )( ucCRC
                                 Hi ^ aucCRCHi[iIndex] );
  1439  00069C  0EFE               	movlw	low((_aucCRCHi))
  1440  00069E  0102               	movlb	2	; () banked
  1441  0006A0  0102               	movlb	2	; () banked
  1442  0006A2  2515               	addwf	((modbus_crc16@iIndex))&0ffh,w
  1443  0006A4  6EF6               	movwf	tblptrl
  1444  0006A6  0E7D               	movlw	high((_aucCRCHi))
  1445  0006A8  0102               	movlb	2	; () banked
  1446  0006AA  2116               	addwfc	((modbus_crc16@iIndex+1))&0ffh,w
  1447  0006AC  6EF7               	movwf	tblptrh
  1448  0006AE  0008               	tblrd	*
  1449                           	
  1450  0006B0  50F5               	movf	tablat,w
  1451                           
  1452  0006B2  0102               	movlb	2	; () banked
  1453  0006B4  0102               	movlb	2	; () banked
  1454  0006B6  1913               	xorwf	((modbus_crc16@ucCRCHi))&0ffh,w
  1455  0006B8  0102               	movlb	2	; () banked
  1456  0006BA  0102               	movlb	2	; () banked
  1457  0006BC  6F14               	movwf	((modbus_crc16@ucCRCLo))&0ffh
  1458                           	line	62
  1459                           ;mbcrc.c: 62: ucCRCHi = aucCRCLo[iIndex];
  1460  0006BE  0EFE               	movlw	low((_aucCRCLo))
  1461  0006C0  0102               	movlb	2	; () banked
  1462  0006C2  0102               	movlb	2	; () banked
  1463  0006C4  2515               	addwf	((modbus_crc16@iIndex))&0ffh,w
  1464  0006C6  6EF6               	movwf	tblptrl
  1465  0006C8  0E7E               	movlw	high((_aucCRCLo))
  1466  0006CA  0102               	movlb	2	; () banked
  1467  0006CC  2116               	addwfc	((modbus_crc16@iIndex+1))&0ffh,w
  1468  0006CE  6EF7               	movwf	tblptrh
  1469  0006D0  0008               	tblrd	*
  1470                           	
  1471  0006D2  0102               	movlb	2	; () banked
  1472  0006D4  CFF5 F213          	movff	tablat,(modbus_crc16@ucCRCHi)
  1473                           	line	63
  1474                           	
  1475  0006D8                     l2:		; BSR set to: ?
  1476                           
  1477                           	line	58
  1478  0006D8  0102               	movlb	2	; () banked
  1479  0006DA  0102               	movlb	2	; () banked
  1480  0006DC  0711               	decf	((modbus_crc16@usLen))&0ffh
  1481  0006DE  A0D8               	btfss	status,0
  1482  0006E0  0712               	decf	((modbus_crc16@usLen+1))&0ffh
  1483  0006E2  0102               	movlb	2	; () banked
  1484  0006E4  2911               	incf	((modbus_crc16@usLen))&0ffh,w
  1485  0006E6  B4D8               	btfsc	status,2
  1486  0006E8  2912               	incf ((modbus_crc16@usLen+1))&0ffh,w
  1487                           
  1488  0006EA  A4D8               	btfss	status,2
  1489  0006EC  EF7A  F003         	goto	u1291
  1490  0006F0  EF7C  F003         	goto	u1290
  1491  0006F4                     u1291:
  1492  0006F4  EF39  F003         	goto	l3
  1493  0006F8                     u1290:
  1494                           	
  1495  0006F8                     l4:		; BSR set to: ?
  1496                           
  1497                           	line	64
  1498  0006F8  0102               	movlb	2	; () banked
  1499  0006FA  0102               	movlb	2	; () banked
  1500  0006FC  5113               	movf	((modbus_crc16@ucCRCHi))&0ffh,w
  1501  0006FE  0102               	movlb	2	; () banked
  1502  000700  0102               	movlb	2	; () banked
  1503  000702  6F10               	movwf	((?_modbus_crc16+1))&0ffh
  1504  000704  0102               	movlb	2	; () banked
  1505  000706  0102               	movlb	2	; () banked
  1506  000708  5114               	movf	((modbus_crc16@ucCRCLo))&0ffh,w
  1507  00070A  0102               	movlb	2	; () banked
  1508  00070C  6F0F               	movwf	((?_modbus_crc16))&0ffh
  1509  00070E  EF89  F003         	goto	l1
  1510                           	line	65
  1511                           ;mbcrc.c: 65: }
  1512  000712                     l1:
  1513                           			; BSR set to: ?
  1514                           
  1515  000712  0012               	return
  1516                           	opt stack 0
  1517                           GLOBAL __end_of_modbus_crc16
  1518  000714                     	__end_of_modbus_crc16:
  1519                           	FNSIZE	_modbus_crc16,5,4
  1520                           ; =============== function _modbus_crc16 ends ==
                                 ==========
  1521                           
  1522                           	signat	_modbus_crc16,8314
  1523                           	global	_my_isr
  1524                           	global	??_my_isr
  1525                           	global	?_my_isr
  1526                           
  1527                           ; *************** function _my_isr *************
                                 ****
  1528                           ; Defined at:
  1529                           ;		line 114 in file "../main.c"
  1530                           ; Parameters:
  1531                           ;		None
  1532                           ; Auto variables:
  1533                           ;		None
  1534                           ; Return value:
  1535                           ;		type: void 
  1536                           ;		size: 0
  1537                           ; Registers used:
  1538                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  1539                           ; Tracked objects:
  1540                           ;		On entry : 0/0
  1541                           ;		On exit  : 0/0
  1542                           ;		Unchanged: 0/0
  1543                           ; Data sizes:
  1544                           ;		Autos:    0
  1545                           ;		Params:   0
  1546                           ;		Temp:    14
  1547                           ;		Total:   14
  1548                           ; This function calls:
  1549                           ;		_rec_isr
  1550                           ;		_tx_isr
  1551                           ;		_timer35_isr
  1552                           ;		_timer3_isr
  1553                           ;		_pv1_isr
  1554                           ; This function is called by:
  1555                           ;		Interrupt level 2
  1556                           ; This function uses a non-reentrant model
  1557                           ; 
  1558                                   psect   text7,class=CODE,space=0,reloc=2
  1559                           
  1560                           	opt lm
  1561                           	file	"../main.c"
  1562                           	line	114
  1563  000000                     	__size_of_my_isr	equ	__end_of_my_isr-_my_isr
  1564                           ;main.c: 113: void interrupt my_isr(void)
  1565                           ;main.c: 114: {
  1566                           	
  1567  0007B2                     _my_isr:		; BSR set to: ?
  1568                           
  1569                           	opt stack 30
  1570                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  1571                           	global	int_func
  1572  000008                     int_func:
  1573                                   psect   intcode
  1574  000008  CFFA F218          	movff	pclat+0,??_my_isr+0
  1575  00000C  CFFB F219          	movff	pclat+1,??_my_isr+1
  1576  000010  CFE9 F21A          	movff	fsr0l+0,??_my_isr+2
  1577  000014  EFD9  F003         	goto	_my_isr
  1578                                   psect   text7
  1579  0007B2  CFEA F21B          	movff	fsr0h+0,??_my_isr+3
  1580  0007B6  CFE1 F21C          	movff	fsr1l+0,??_my_isr+4
  1581  0007BA  CFE2 F21D          	movff	fsr1h+0,??_my_isr+5
  1582  0007BE  CFD9 F21E          	movff	fsr2l+0,??_my_isr+6
  1583  0007C2  CFDA F21F          	movff	fsr2h+0,??_my_isr+7
  1584  0007C6  CFF3 F220          	movff	prodl+0,??_my_isr+8
  1585  0007CA  CFF4 F221          	movff	prodh+0,??_my_isr+9
  1586  0007CE  CFF6 F222          	movff	tblptrl+0,??_my_isr+10
  1587  0007D2  CFF7 F223          	movff	tblptrh+0,??_my_isr+11
  1588  0007D6  CFF8 F224          	movff	tblptru+0,??_my_isr+12
  1589  0007DA  CFF5 F225          	movff	tablat+0,??_my_isr+13
  1590                           	line	115
  1591  0007DE  EC5D  F001         	call	_rec_isr	;wreg free
  1592                           	line	116
  1593                           ;main.c: 116: tx_isr();
  1594  0007E2  EC8A  F003         	call	_tx_isr	;wreg free
  1595                           	line	117
  1596                           ;main.c: 117: timer35_isr();
  1597  0007E6  EC51  F004         	call	_timer35_isr	;wreg free
  1598                           	line	118
  1599                           ;main.c: 118: timer3_isr();
  1600  0007EA  EC89  F004         	call	_timer3_isr	;wreg free
  1601                           	line	119
  1602                           ;main.c: 119: pv1_isr();
  1603  0007EE  ECA1  F004         	call	_pv1_isr	;wreg free
  1604                           	line	120
  1605                           ;main.c: 120: }
  1606  0007F2                     i2l760:
  1607                           			; BSR set to: ?
  1608                           
  1609  0007F2  C225  FFF5         	movff	??_my_isr+13,tablat+0
  1610  0007F6  C224  FFF8         	movff	??_my_isr+12,tblptru+0
  1611  0007FA  C223  FFF7         	movff	??_my_isr+11,tblptrh+0
  1612  0007FE  C222  FFF6         	movff	??_my_isr+10,tblptrl+0
  1613  000802  C221  FFF4         	movff	??_my_isr+9,prodh+0
  1614  000806  C220  FFF3         	movff	??_my_isr+8,prodl+0
  1615  00080A  C21F  FFDA         	movff	??_my_isr+7,fsr2h+0
  1616  00080E  C21E  FFD9         	movff	??_my_isr+6,fsr2l+0
  1617  000812  C21D  FFE2         	movff	??_my_isr+5,fsr1h+0
  1618  000816  C21C  FFE1         	movff	??_my_isr+4,fsr1l+0
  1619  00081A  C21B  FFEA         	movff	??_my_isr+3,fsr0h+0
  1620  00081E  C21A  FFE9         	movff	??_my_isr+2,fsr0l+0
  1621  000822  C219  FFFB         	movff	??_my_isr+1,pclat+1
  1622  000826  C218  FFFA         	movff	??_my_isr+0,pclat+0
  1623  00082A  0011               	retfie f
  1624                           	opt stack 0
  1625                           GLOBAL __end_of_my_isr
  1626  00082C                     	__end_of_my_isr:
  1627                           	FNSIZE	_my_isr,14,0
  1628                           ; =============== function _my_isr ends ========
                                 ====
  1629                           
  1630                           	signat	_my_isr,88
  1631                                   psect   text8,class=CODE,space=0,reloc=2
  1632                           	global	intlevel2
  1633                           
  1634                           	opt lm
  1635                           	FNBREAK _timer3_isr,intlevel2
  1636                           	global	_timer3_isr
  1637                           	global	??_timer3_isr
  1638                           	global	?_timer3_isr
  1639                           
  1640                           ; *************** function _timer3_isr *********
                                 ********
  1641                           ; Defined at:
  1642                           ;		line 64 in file "../main.c"
  1643                           ; Parameters:
  1644                           ;		None
  1645                           ; Auto variables:
  1646                           ;		None
  1647                           ; Return value:
  1648                           ;		type: void 
  1649                           ;		size: 0
  1650                           ; Registers used:
  1651                           ;		wreg, status,2, status,0
  1652                           ; Tracked objects:
  1653                           ;		On entry : 0/0
  1654                           ;		On exit  : 0/0
  1655                           ;		Unchanged: 0/0
  1656                           ; Data sizes:
  1657                           ;		Autos:    0
  1658                           ;		Params:   0
  1659                           ;		Temp:     0
  1660                           ;		Total:    0
  1661                           ; This function calls:
  1662                           ;		Nothing
  1663                           ; This function is called by:
  1664                           ;		_my_isr
  1665                           ; This function uses a non-reentrant model
  1666                           ; 
  1667                           	file	"../main.c"
  1668                           	line	64
  1669  000000                     	__size_of_timer3_isr	equ	__end_of_timer3_isr-_t
                                 imer3_isr
  1670                           ;main.c: 63: void timer3_isr(void)
  1671                           ;main.c: 64: {
  1672                           	
  1673  000912                     _timer3_isr:		; BSR set to: ?
  1674                           
  1675                           	opt stack 29
  1676                           	line	66
  1677                           ;main.c: 66: if(TMR3IE&&TMR3IF)
  1678  000912  A2A0               	btfss	c:(32001/8),(32001)&7	;volatile
  1679  000914  EF8E  F004         	goto	i2u421
  1680  000918  EF90  F004         	goto	i2u420
  1681  00091C                     i2u421:
  1682  00091C  EFA0  F004         	goto	i2l753
  1683  000920                     i2u420:
  1684  000920  A2A1               	btfss	c:(32009/8),(32009)&7	;volatile
  1685  000922  EF95  F004         	goto	i2u431
  1686  000926  EF97  F004         	goto	i2u430
  1687  00092A                     i2u431:
  1688  00092A  EFA0  F004         	goto	i2l753
  1689  00092E                     i2u430:
  1690                           	line	68
  1691                           ;main.c: 67: {
  1692                           ;main.c: 68: TMR3IF = 0;
  1693  00092E  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
  1694                           	line	69
  1695                           ;main.c: 69: TMR3 = 65535-11059;
  1696  000930  0ECC               	movlw	low(0D4CCh)
  1697  000932  6EB2               	movwf	((c:4018)),c	;volatile
  1698  000934  0ED4               	movlw	high(0D4CCh)
  1699  000936  6EB3               	movwf	((c:4018+1)),c	;volatile
  1700                           	line	70
  1701                           ;main.c: 70: count_10ms++;
  1702  000938  0100               	movlb	0	; () banked
  1703  00093A  0100               	movlb	0	; () banked
  1704  00093C  4BFD               	infsnz	((253))&0ffh
  1705  00093E  2BFE               	incf	((253+1))&0ffh
  1706                           	line	71
  1707                           	
  1708  000940                     i2l753:		; BSR set to: ?
  1709                           
  1710                           	line	72
  1711                           ;main.c: 71: }
  1712                           ;main.c: 72: }
  1713  000940                     i2l752:
  1714                           			; BSR set to: ?
  1715                           
  1716  000940  0012               	return
  1717                           	opt stack 0
  1718                           GLOBAL __end_of_timer3_isr
  1719  000942                     	__end_of_timer3_isr:
  1720                           	FNSIZE	_timer3_isr,0,0
  1721                           ; =============== function _timer3_isr ends ====
                                 ========
  1722                           
  1723                           	signat	_timer3_isr,88
  1724                                   psect   text9,class=CODE,space=0,reloc=2
  1725                           	global	intlevel2
  1726                           
  1727                           	opt lm
  1728                           	FNBREAK _pv1_isr,intlevel2
  1729                           	global	_pv1_isr
  1730                           	global	??_pv1_isr
  1731                           	global	?_pv1_isr
  1732                           
  1733                           ; *************** function _pv1_isr ************
                                 *****
  1734                           ; Defined at:
  1735                           ;		line 181 in file "../main.c"
  1736                           ; Parameters:
  1737                           ;		None
  1738                           ; Auto variables:
  1739                           ;		None
  1740                           ; Return value:
  1741                           ;		type: void 
  1742                           ;		size: 0
  1743                           ; Registers used:
  1744                           ;		wreg, status,2, status,0, cstack
  1745                           ; Tracked objects:
  1746                           ;		On entry : 0/0
  1747                           ;		On exit  : 0/0
  1748                           ;		Unchanged: 0/0
  1749                           ; Data sizes:
  1750                           ;		Autos:    0
  1751                           ;		Params:   0
  1752                           ;		Temp:     0
  1753                           ;		Total:    0
  1754                           ; This function calls:
  1755                           ;		_get_speed
  1756                           ; This function is called by:
  1757                           ;		_my_isr
  1758                           ; This function uses a non-reentrant model
  1759                           ; 
  1760                           	file	"../main.c"
  1761                           	line	181
  1762  000000                     	__size_of_pv1_isr	equ	__end_of_pv1_isr-_pv1_isr
  1763                           ;main.c: 180: void pv1_isr(void)
  1764                           ;main.c: 181: {
  1765                           	
  1766  000942                     _pv1_isr:		; BSR set to: ?
  1767                           
  1768                           	opt stack 29
  1769                           	line	182
  1770                           ;main.c: 182: if(INT0IF&&INT0IE)
  1771  000942  A2F2               	btfss	c:(32657/8),(32657)&7	;volatile
  1772  000944  EFA6  F004         	goto	i2u1321
  1773  000948  EFA8  F004         	goto	i2u1320
  1774  00094C                     i2u1321:
  1775  00094C  EFB2  F004         	goto	i2l773
  1776  000950                     i2u1320:
  1777  000950  A8F2               	btfss	c:(32660/8),(32660)&7	;volatile
  1778  000952  EFAD  F004         	goto	i2u1331
  1779  000956  EFAF  F004         	goto	i2u1330
  1780  00095A                     i2u1331:
  1781  00095A  EFB2  F004         	goto	i2l773
  1782  00095E                     i2u1330:
  1783                           	line	184
  1784                           ;main.c: 183: {
  1785                           ;main.c: 184: INT0IF = 0;
  1786  00095E  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
  1787                           	line	185
  1788                           ;main.c: 185: get_speed();
  1789  000960  EC72  F002         	call	_get_speed	;wreg free
  1790                           	line	186
  1791                           	
  1792  000964                     i2l773:		; BSR set to: ?
  1793                           
  1794                           	line	187
  1795                           ;main.c: 186: }
  1796                           ;main.c: 187: }
  1797  000964                     i2l772:
  1798                           			; BSR set to: ?
  1799                           
  1800  000964  0012               	return
  1801                           	opt stack 0
  1802                           GLOBAL __end_of_pv1_isr
  1803  000966                     	__end_of_pv1_isr:
  1804                           	FNSIZE	_pv1_isr,0,0
  1805                           ; =============== function _pv1_isr ends =======
                                 =====
  1806                           
  1807                           	signat	_pv1_isr,88
  1808                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  1809                           	global	intlevel2
  1810                           
  1811                           	opt lm
  1812                           	FNBREAK _timer35_isr,intlevel2
  1813                           	global	_timer35_isr
  1814                           	global	??_timer35_isr
  1815                           	global	?_timer35_isr
  1816                           
  1817                           ; *************** function _timer35_isr ********
                                 *********
  1818                           ; Defined at:
  1819                           ;		line 90 in file "../modbus_rtu.c"
  1820                           ; Parameters:
  1821                           ;		None
  1822                           ; Auto variables:
  1823                           ;		None
  1824                           ; Return value:
  1825                           ;		type: void 
  1826                           ;		size: 0
  1827                           ; Registers used:
  1828                           ;		wreg, status,2, status,0
  1829                           ; Tracked objects:
  1830                           ;		On entry : 0/0
  1831                           ;		On exit  : 0/0
  1832                           ;		Unchanged: 0/0
  1833                           ; Data sizes:
  1834                           ;		Autos:    0
  1835                           ;		Params:   0
  1836                           ;		Temp:     1
  1837                           ;		Total:    1
  1838                           ; This function calls:
  1839                           ;		Nothing
  1840                           ; This function is called by:
  1841                           ;		_my_isr
  1842                           ; This function uses a non-reentrant model
  1843                           ; 
  1844                           	file	"../modbus_rtu.c"
  1845                           	line	90
  1846  000000                     	__size_of_timer35_isr	equ	__end_of_timer35_isr-
                                 _timer35_isr
  1847                           ;modbus_rtu.c: 89: void timer35_isr(void)
  1848                           ;modbus_rtu.c: 90: {
  1849                           	
  1850  0008A2                     _timer35_isr:		; BSR set to: ?
  1851                           
  1852                           	opt stack 29
  1853                           	line	91
  1854                           ;modbus_rtu.c: 91: if((TMR1IF&&TMR1IE))
  1855  0008A2  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
  1856  0008A4  EF56  F004         	goto	i2u1341
  1857  0008A8  EF58  F004         	goto	i2u1340
  1858  0008AC                     i2u1341:
  1859  0008AC  EF88  F004         	goto	i2l371
  1860  0008B0                     i2u1340:
  1861  0008B0  A09D               	btfss	c:(31976/8),(31976)&7	;volatile
  1862  0008B2  EF5D  F004         	goto	i2u1351
  1863  0008B6  EF5F  F004         	goto	i2u1350
  1864  0008BA                     i2u1351:
  1865  0008BA  EF88  F004         	goto	i2l371
  1866  0008BE                     i2u1350:
  1867                           	line	94
  1868                           ;modbus_rtu.c: 92: {
  1869                           ;modbus_rtu.c: 94: switch(rx_state)
  1870  0008BE  EF7D  F004         	goto	i2l373
  1871                           	line	96
  1872                           ;modbus_rtu.c: 95: {
  1873                           ;modbus_rtu.c: 96: case RX_STATE_INIT:
  1874                           	
  1875  0008C2                     i2l374:		; BSR set to: ?
  1876                           
  1877                           	line	97
  1878                           ;modbus_rtu.c: 97: rx_state = RX_STATE_IDLE;
  1879  0008C2  0102               	movlb	2	; () banked
  1880  0008C4  6F26               	movwf	(??_timer35_isr+0+0)&0ffh
  1881  0008C6  0E01               	movlw	low(01h)
  1882  0008C8  0100               	movlb	0	; () banked
  1883  0008CA  0100               	movlb	0	; () banked
  1884  0008CC  6FFF               	movwf	((255))&0ffh
  1885  0008CE  0102               	movlb	2	; () banked
  1886  0008D0  5126               	movf	(??_timer35_isr+0+0)&0ffh,w
  1887                           	line	98
  1888                           ;modbus_rtu.c: 98: break;
  1889  0008D2  EF86  F004         	goto	i2l372
  1890                           	line	99
  1891                           ;modbus_rtu.c: 99: case RX_STATE_RECEIVE:
  1892                           	
  1893  0008D6                     i2l375:		; BSR set to: ?
  1894                           
  1895                           	line	100
  1896                           ;modbus_rtu.c: 100: rx_state = RX_STATE_IDLE;
  1897  0008D6  0102               	movlb	2	; () banked
  1898  0008D8  6F26               	movwf	(??_timer35_isr+0+0)&0ffh
  1899  0008DA  0E01               	movlw	low(01h)
  1900  0008DC  0100               	movlb	0	; () banked
  1901  0008DE  0100               	movlb	0	; () banked
  1902  0008E0  6FFF               	movwf	((255))&0ffh
  1903  0008E2  0102               	movlb	2	; () banked
  1904  0008E4  5126               	movf	(??_timer35_isr+0+0)&0ffh,w
  1905                           	line	101
  1906                           ;modbus_rtu.c: 101: rx_buf.frame_ok = 1;
  1907  0008E6  0102               	movlb	2	; () banked
  1908  0008E8  6F26               	movwf	(??_timer35_isr+0+0)&0ffh
  1909  0008EA  0E01               	movlw	low(01h)
  1910  0008EC  6E00               	movwf	((c:0)),c
  1911  0008EE  0102               	movlb	2	; () banked
  1912  0008F0  5126               	movf	(??_timer35_isr+0+0)&0ffh,w
  1913                           	line	102
  1914                           ;modbus_rtu.c: 102: break;
  1915  0008F2  EF86  F004         	goto	i2l372
  1916                           	line	103
  1917                           ;modbus_rtu.c: 103: default:
  1918                           	
  1919  0008F6                     i2l376:		; BSR set to: ?
  1920                           
  1921                           	line	104
  1922                           ;modbus_rtu.c: 104: break;
  1923  0008F6  EF86  F004         	goto	i2l372
  1924                           	line	94
  1925                           	
  1926  0008FA                     i2l373:		; BSR set to: ?
  1927                           
  1928  0008FA  0100               	movlb	0	; () banked
  1929  0008FC  0100               	movlb	0	; () banked
  1930  0008FE  51FF               	movf	((255))&0ffh,w
  1931  000900  0A00               	xorlw	0 ^ 0
  1932  000902  E0DF               	bz	i2l374
  1933  000904  0A02               	xorlw	2 ^ 0
  1934  000906  E0E7               	bz	i2l375
  1935  000908  EF7B  F004         	goto	i2l376
  1936                           
  1937                           	line	105
  1938                           	
  1939  00090C                     i2l372:		; BSR set to: ?
  1940                           
  1941                           	line	106
  1942                           ;modbus_rtu.c: 106: TMR1ON = 0;
  1943  00090C  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  1944                           	line	108
  1945                           ;modbus_rtu.c: 108: TMR1IF=0;
  1946  00090E  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  1947                           	line	110
  1948                           	
  1949  000910                     i2l371:		; BSR set to: ?
  1950                           
  1951                           	line	111
  1952                           ;modbus_rtu.c: 110: }
  1953                           ;modbus_rtu.c: 111: }
  1954  000910                     i2l370:
  1955                           			; BSR set to: ?
  1956                           
  1957  000910  0012               	return
  1958                           	opt stack 0
  1959                           GLOBAL __end_of_timer35_isr
  1960  000912                     	__end_of_timer35_isr:
  1961                           	FNSIZE	_timer35_isr,1,0
  1962                           ; =============== function _timer35_isr ends ===
                                 =========
  1963                           
  1964                           	signat	_timer35_isr,88
  1965                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  1966                           	global	intlevel2
  1967                           
  1968                           	opt lm
  1969                           	FNBREAK _rec_isr,intlevel2
  1970                           	global	_rec_isr
  1971                           	global	??_rec_isr
  1972                           	global	?_rec_isr
  1973                           
  1974                           ; *************** function _rec_isr ************
                                 *****
  1975                           ; Defined at:
  1976                           ;		line 30 in file "../modbus_rtu.c"
  1977                           ; Parameters:
  1978                           ;		None
  1979                           ; Auto variables:
  1980                           ;		rec_data    	       	type: unsigned char 
  1981                           ; Return value:
  1982                           ;		type: void 
  1983                           ;		size: 0
  1984                           ; Registers used:
  1985                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  1986                           ; Tracked objects:
  1987                           ;		On entry : 0/0
  1988                           ;		On exit  : 0/0
  1989                           ;		Unchanged: 0/0
  1990                           ; Data sizes:
  1991                           ;		Autos:    1
  1992                           ;		Params:   0
  1993                           ;		Temp:     1
  1994                           ;		Total:    2
  1995                           ; This function calls:
  1996                           ;		Nothing
  1997                           ; This function is called by:
  1998                           ;		_my_isr
  1999                           ; This function uses a non-reentrant model
  2000                           ; 
  2001                           	file	"../modbus_rtu.c"
  2002                           	line	30
  2003  000000                     	__size_of_rec_isr	equ	__end_of_rec_isr-_rec_isr
  2004                           ;modbus_rtu.c: 22: RX_STATE rx_state = RX_STATE_
                                 INIT;
  2005                           ;modbus_rtu.c: 24: unsigned int modbus_reg[100];
  2006                           ;modbus_rtu.c: 29: void rec_isr(void)
  2007                           ;modbus_rtu.c: 30: {
  2008                           	
  2009  0002BA                     _rec_isr:		; BSR set to: ?
  2010                           
  2011                           	opt stack 29
  2012                           	line	31
  2013  0002BA  0102               	movlb	2	; () banked
  2014  0002BC  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2015  0002BE  0E00               	movlw	low(0)
  2016  0002C0  0102               	movlb	2	; () banked
  2017  0002C2  0102               	movlb	2	; () banked
  2018  0002C4  6F26               	movwf	((rec_isr@rec_data))&0ffh
  2019  0002C6  0102               	movlb	2	; () banked
  2020  0002C8  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2021                           	line	33
  2022                           ;modbus_rtu.c: 33: if(((RC1IE)&&(RC1IF)))
  2023  0002CA  AA9D               	btfss	c:(31981/8),(31981)&7	;volatile
  2024  0002CC  EF6A  F001         	goto	i2u1141
  2025  0002D0  EF6C  F001         	goto	i2u1140
  2026  0002D4                     i2u1141:
  2027  0002D4  EFEC  F001         	goto	i2l357
  2028  0002D8                     i2u1140:
  2029  0002D8  AA9E               	btfss	c:(31989/8),(31989)&7	;volatile
  2030  0002DA  EF71  F001         	goto	i2u1151
  2031  0002DE  EF73  F001         	goto	i2u1150
  2032  0002E2                     i2u1151:
  2033  0002E2  EFEC  F001         	goto	i2l357
  2034  0002E6                     i2u1150:
  2035                           	line	37
  2036                           ;modbus_rtu.c: 34: {
  2037                           ;modbus_rtu.c: 37: rec_data = (RC1REG);
  2038  0002E6  CFAE F226          	movff	(c:4014),(rec_isr@rec_data)	;volatile
  2039                           	line	39
  2040                           ;modbus_rtu.c: 39: switch(rx_state)
  2041  0002EA  EFE1  F001         	goto	i2l359
  2042                           	line	41
  2043                           ;modbus_rtu.c: 40: {
  2044                           ;modbus_rtu.c: 41: case RX_STATE_INIT:
  2045                           	
  2046  0002EE                     i2l360:		; BSR set to: ?
  2047                           
  2048                           	line	42
  2049                           ;modbus_rtu.c: 42: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2050  0002EE  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2051  0002F0  0E7F               	movlw	low(0627Fh)
  2052  0002F2  6ECE               	movwf	((c:4046)),c	;volatile
  2053  0002F4  0E62               	movlw	high(0627Fh)
  2054  0002F6  6ECF               	movwf	((c:4046+1)),c	;volatile
  2055  0002F8  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2056  0002FA  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2057  0002FC  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2058                           	line	43
  2059                           ;modbus_rtu.c: 43: rx_buf.rec_count = 0;
  2060  0002FE  0102               	movlb	2	; () banked
  2061  000300  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2062  000302  0E00               	movlw	low(0)
  2063  000304  6E02               	movwf	(0+((c:0)+02h)),c
  2064  000306  0102               	movlb	2	; () banked
  2065  000308  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2066                           	line	44
  2067                           ;modbus_rtu.c: 44: rx_buf.frame_ok = 0;
  2068  00030A  0102               	movlb	2	; () banked
  2069  00030C  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2070  00030E  0E00               	movlw	low(0)
  2071  000310  6E00               	movwf	((c:0)),c
  2072  000312  0102               	movlb	2	; () banked
  2073  000314  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2074                           	line	45
  2075                           ;modbus_rtu.c: 45: break;
  2076  000316  EFEC  F001         	goto	i2l357
  2077                           	line	46
  2078                           ;modbus_rtu.c: 46: case RX_STATE_IDLE:
  2079                           	
  2080  00031A                     i2l361:		; BSR set to: ?
  2081                           
  2082                           	line	47
  2083                           ;modbus_rtu.c: 47: rx_buf.data_buf[rx_buf.rec_co
                                 unt++] = rec_data;
  2084  00031A  EE00 F002          	lfsr	0,(c:0)+02h
  2085  00031E  CFEF F227          	movff	indf0,??_rec_isr+1+0
  2086  000322  0E01               	movlw	01h
  2087  000324  26EF               	addwf	indf0
  2088  000326  0E03               	movlw	03h
  2089  000328  0102               	movlb	2	; () banked
  2090  00032A  2727               	addwf	(??_rec_isr+1+0)&0ffh
  2091  00032C  0E00               	movlw	low((c:0))
  2092  00032E  0102               	movlb	2	; () banked
  2093  000330  2527               	addwf	(??_rec_isr+1+0)&0ffh,w
  2094  000332  6EE9               	movwf	c:fsr0l
  2095  000334  6AEA               	clrf	1+c:fsr0l
  2096  000336  0E00               	movlw	high((c:0))
  2097  000338  22EA               	addwfc	1+c:fsr0l
  2098  00033A  0102               	movlb	2	; () banked
  2099  00033C  C226  FFEF         	movff	(rec_isr@rec_data),indf0
  2100                           
  2101                           	line	48
  2102                           ;modbus_rtu.c: 48: rx_state = RX_STATE_RECEIVE;
  2103  000340  0102               	movlb	2	; () banked
  2104  000342  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2105  000344  0E02               	movlw	low(02h)
  2106  000346  0100               	movlb	0	; () banked
  2107  000348  0100               	movlb	0	; () banked
  2108  00034A  6FFF               	movwf	((255))&0ffh
  2109  00034C  0102               	movlb	2	; () banked
  2110  00034E  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2111                           	line	49
  2112                           ;modbus_rtu.c: 49: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2113  000350  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2114  000352  0E7F               	movlw	low(0627Fh)
  2115  000354  6ECE               	movwf	((c:4046)),c	;volatile
  2116  000356  0E62               	movlw	high(0627Fh)
  2117  000358  6ECF               	movwf	((c:4046+1)),c	;volatile
  2118  00035A  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2119  00035C  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2120  00035E  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2121                           	line	50
  2122                           ;modbus_rtu.c: 50: break;
  2123  000360  EFEC  F001         	goto	i2l357
  2124                           	line	51
  2125                           ;modbus_rtu.c: 51: case RX_STATE_RECEIVE:
  2126                           	
  2127  000364                     i2l362:		; BSR set to: ?
  2128                           
  2129                           	line	52
  2130                           ;modbus_rtu.c: 52: if(rx_buf.rec_count<250)
  2131  000364  0EFA               	movlw	(0FAh)&0ffh
  2132  000366  6002               	cpfslt	(0+((c:0)+02h)),c
  2133  000368  EFB8  F001         	goto	i2u1161
  2134  00036C  EFBA  F001         	goto	i2u1160
  2135  000370                     i2u1161:
  2136  000370  EFD7  F001         	goto	i2l363
  2137  000374                     i2u1160:
  2138                           	line	54
  2139                           ;modbus_rtu.c: 53: {
  2140                           ;modbus_rtu.c: 54: rx_buf.data_buf[rx_buf.rec_co
                                 unt++] = rec_data;
  2141  000374  EE00 F002          	lfsr	0,(c:0)+02h
  2142  000378  CFEF F227          	movff	indf0,??_rec_isr+1+0
  2143  00037C  0E01               	movlw	01h
  2144  00037E  26EF               	addwf	indf0
  2145  000380  0E03               	movlw	03h
  2146  000382  0102               	movlb	2	; () banked
  2147  000384  2727               	addwf	(??_rec_isr+1+0)&0ffh
  2148  000386  0E00               	movlw	low((c:0))
  2149  000388  0102               	movlb	2	; () banked
  2150  00038A  2527               	addwf	(??_rec_isr+1+0)&0ffh,w
  2151  00038C  6EE9               	movwf	c:fsr0l
  2152  00038E  6AEA               	clrf	1+c:fsr0l
  2153  000390  0E00               	movlw	high((c:0))
  2154  000392  22EA               	addwfc	1+c:fsr0l
  2155  000394  0102               	movlb	2	; () banked
  2156  000396  C226  FFEF         	movff	(rec_isr@rec_data),indf0
  2157                           
  2158                           	line	55
  2159                           ;modbus_rtu.c: 55: TMR1ON = 0; TMR1 = 65535-4032
                                 0; TMR1IF=0; TMR1IE=1; TMR1ON = 1;
  2160  00039A  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
  2161  00039C  0E7F               	movlw	low(0627Fh)
  2162  00039E  6ECE               	movwf	((c:4046)),c	;volatile
  2163  0003A0  0E62               	movlw	high(0627Fh)
  2164  0003A2  6ECF               	movwf	((c:4046+1)),c	;volatile
  2165  0003A4  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  2166  0003A6  809D               	bsf	c:(31976/8),(31976)&7	;volatile
  2167  0003A8  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
  2168                           	line	56
  2169                           ;modbus_rtu.c: 56: }
  2170  0003AA  EFDF  F001         	goto	i2l364
  2171                           	line	57
  2172                           	
  2173  0003AE                     i2l363:		; BSR set to: ?
  2174                           
  2175                           	line	59
  2176                           ;modbus_rtu.c: 57: else
  2177                           ;modbus_rtu.c: 58: {
  2178                           ;modbus_rtu.c: 59: rx_state = RX_STATE_INIT;
  2179  0003AE  0102               	movlb	2	; () banked
  2180  0003B0  6F27               	movwf	(??_rec_isr+1+0)&0ffh
  2181  0003B2  0E00               	movlw	low(0)
  2182  0003B4  0100               	movlb	0	; () banked
  2183  0003B6  0100               	movlb	0	; () banked
  2184  0003B8  6FFF               	movwf	((255))&0ffh
  2185  0003BA  0102               	movlb	2	; () banked
  2186  0003BC  5127               	movf	(??_rec_isr+1+0)&0ffh,w
  2187                           	line	60
  2188                           	
  2189  0003BE                     i2l364:		; BSR set to: ?
  2190                           
  2191                           	line	61
  2192                           ;modbus_rtu.c: 60: }
  2193                           ;modbus_rtu.c: 61: break;
  2194  0003BE  EFEC  F001         	goto	i2l357
  2195                           	line	39
  2196                           	
  2197  0003C2                     i2l359:		; BSR set to: ?
  2198                           
  2199  0003C2  0100               	movlb	0	; () banked
  2200  0003C4  0100               	movlb	0	; () banked
  2201  0003C6  51FF               	movf	((255))&0ffh,w
  2202  0003C8  0A00               	xorlw	0 ^ 0
  2203  0003CA  E091               	bz	i2l360
  2204  0003CC  0A01               	xorlw	1 ^ 0
  2205  0003CE  E0A5               	bz	i2l361
  2206  0003D0  0A03               	xorlw	2 ^ 1
  2207  0003D2  E0C8               	bz	i2l362
  2208  0003D4  EFDF  F001         	goto	i2l364
  2209                           
  2210                           	line	65
  2211                           	
  2212  0003D8                     i2l357:		; BSR set to: ?
  2213                           
  2214                           	line	66
  2215                           ;modbus_rtu.c: 65: }
  2216                           ;modbus_rtu.c: 66: }
  2217  0003D8                     i2l356:
  2218                           			; BSR set to: ?
  2219                           
  2220  0003D8  0012               	return
  2221                           	opt stack 0
  2222                           GLOBAL __end_of_rec_isr
  2223  0003DA                     	__end_of_rec_isr:
  2224                           	FNSIZE	_rec_isr,2,0
  2225                           ; =============== function _rec_isr ends =======
                                 =====
  2226                           
  2227                           	signat	_rec_isr,88
  2228                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  2229                           	global	intlevel2
  2230                           
  2231                           	opt lm
  2232                           	FNBREAK _tx_isr,intlevel2
  2233                           	global	_tx_isr
  2234                           	global	??_tx_isr
  2235                           	global	?_tx_isr
  2236                           
  2237                           ; *************** function _tx_isr *************
                                 ****
  2238                           ; Defined at:
  2239                           ;		line 69 in file "../modbus_rtu.c"
  2240                           ; Parameters:
  2241                           ;		None
  2242                           ; Auto variables:
  2243                           ;		None
  2244                           ; Return value:
  2245                           ;		type: void 
  2246                           ;		size: 0
  2247                           ; Registers used:
  2248                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2249                           ; Tracked objects:
  2250                           ;		On entry : 0/0
  2251                           ;		On exit  : 0/0
  2252                           ;		Unchanged: 0/0
  2253                           ; Data sizes:
  2254                           ;		Autos:    0
  2255                           ;		Params:   0
  2256                           ;		Temp:     1
  2257                           ;		Total:    1
  2258                           ; This function calls:
  2259                           ;		Nothing
  2260                           ; This function is called by:
  2261                           ;		_my_isr
  2262                           ; This function uses a non-reentrant model
  2263                           ; 
  2264                           	file	"../modbus_rtu.c"
  2265                           	line	69
  2266  000000                     	__size_of_tx_isr	equ	__end_of_tx_isr-_tx_isr
  2267                           ;modbus_rtu.c: 68: void tx_isr(void)
  2268                           ;modbus_rtu.c: 69: {
  2269                           	
  2270  000714                     _tx_isr:		; BSR set to: ?
  2271                           
  2272                           	opt stack 29
  2273                           	line	72
  2274                           ;modbus_rtu.c: 70: static unsigned char current_
                                 need_send = 0;
  2275                           ;modbus_rtu.c: 72: if((TX1IE&&TX1IF))
  2276  000714  A89D               	btfss	c:(31980/8),(31980)&7	;volatile
  2277  000716  EF8F  F003         	goto	i2u1171
  2278  00071A  EF91  F003         	goto	i2u1170
  2279  00071E                     i2u1171:
  2280  00071E  EFD8  F003         	goto	i2l367
  2281  000722                     i2u1170:
  2282  000722  A89E               	btfss	c:(31988/8),(31988)&7	;volatile
  2283  000724  EF96  F003         	goto	i2u1181
  2284  000728  EF98  F003         	goto	i2u1180
  2285  00072C                     i2u1181:
  2286  00072C  EFD8  F003         	goto	i2l367
  2287  000730                     i2u1180:
  2288                           	line	75
  2289                           ;modbus_rtu.c: 73: {
  2290                           ;modbus_rtu.c: 75: if(tx_buf.tx_count>0)
  2291  000730  0101               	movlb	1	; () banked
  2292  000732  0101               	movlb	1	; () banked
  2293  000734  5100               	movf	((256))&0ffh,w
  2294  000736  B4D8               	btfsc	status,2
  2295  000738  EFA0  F003         	goto	i2u1191
  2296  00073C  EFA2  F003         	goto	i2u1190
  2297  000740                     i2u1191:
  2298  000740  EFD8  F003         	goto	i2l367
  2299  000744                     i2u1190:
  2300                           	line	77
  2301  000744  C133 F226          	movff	(307),??_tx_isr+0+0
  2302  000748  0E01               	movlw	01h
  2303  00074A  0102               	movlb	2	; () banked
  2304  00074C  2726               	addwf	(??_tx_isr+0+0)&0ffh
  2305  00074E  0101               	movlb	1	; () banked
  2306  000750  0E00               	movlw	low(256)
  2307  000752  0102               	movlb	2	; () banked
  2308  000754  2526               	addwf	(??_tx_isr+0+0)&0ffh,w
  2309  000756  6EE9               	movwf	c:fsr0l
  2310  000758  6AEA               	clrf	1+c:fsr0l
  2311  00075A  0101               	movlb	1	; () banked
  2312  00075C  0E01               	movlw	high(256)
  2313  00075E  22EA               	addwfc	1+c:fsr0l
  2314  000760  50EF               	movf	indf0,w
  2315  000762  6EAD               	movwf	((c:4013)),c	;volatile
  2316                           ;modbus_rtu.c: 76: {
  2317                           ;modbus_rtu.c: 77: (TX1REG) = tx_buf.data_buf[cu
                                 rrent_need_send++];
  2318  000764  0101               	movlb	1	; () banked
  2319  000766  0101               	movlb	1	; () banked
  2320  000768  2B33               	incf	((307))&0ffh
  2321                           	line	78
  2322                           ;modbus_rtu.c: 78: if(current_need_send==tx_buf.
                                 tx_count)
  2323  00076A  0101               	movlb	1	; () banked
  2324  00076C  0101               	movlb	1	; () banked
  2325  00076E  5100               	movf	((256))&0ffh,w
  2326  000770  0101               	movlb	1	; () banked
  2327  000772  0101               	movlb	1	; () banked
  2328  000774  6333               	cpfseq	((307))&0ffh
  2329  000776  EFBF  F003         	goto	i2u1201
  2330  00077A  EFC1  F003         	goto	i2u1200
  2331  00077E                     i2u1201:
  2332  00077E  EFD8  F003         	goto	i2l367
  2333  000782                     i2u1200:
  2334                           	line	80
  2335                           ;modbus_rtu.c: 79: {
  2336                           ;modbus_rtu.c: 80: (TX1IE) = 0;
  2337  000782  989D               	bcf	c:(31980/8),(31980)&7	;volatile
  2338                           	line	81
  2339                           ;modbus_rtu.c: 81: current_need_send = 0;
  2340  000784  0102               	movlb	2	; () banked
  2341  000786  6F26               	movwf	(??_tx_isr+0+0)&0ffh
  2342  000788  0E00               	movlw	low(0)
  2343  00078A  0101               	movlb	1	; () banked
  2344  00078C  0101               	movlb	1	; () banked
  2345  00078E  6F33               	movwf	((307))&0ffh
  2346  000790  0102               	movlb	2	; () banked
  2347  000792  5126               	movf	(??_tx_isr+0+0)&0ffh,w
  2348                           	line	82
  2349                           ;modbus_rtu.c: 82: tx_buf.tx_count = 0;
  2350  000794  0102               	movlb	2	; () banked
  2351  000796  6F26               	movwf	(??_tx_isr+0+0)&0ffh
  2352  000798  0E00               	movlw	low(0)
  2353  00079A  0101               	movlb	1	; () banked
  2354  00079C  0101               	movlb	1	; () banked
  2355  00079E  6F00               	movwf	((256))&0ffh
  2356  0007A0  0102               	movlb	2	; () banked
  2357  0007A2  5126               	movf	(??_tx_isr+0+0)&0ffh,w
  2358                           	line	83
  2359                           ;modbus_rtu.c: 83: rx_buf.rec_count = 0;
  2360  0007A4  0102               	movlb	2	; () banked
  2361  0007A6  6F26               	movwf	(??_tx_isr+0+0)&0ffh
  2362  0007A8  0E00               	movlw	low(0)
  2363  0007AA  6E02               	movwf	(0+((c:0)+02h)),c
  2364  0007AC  0102               	movlb	2	; () banked
  2365  0007AE  5126               	movf	(??_tx_isr+0+0)&0ffh,w
  2366                           	line	85
  2367                           	
  2368  0007B0                     i2l369:		; BSR set to: ?
  2369                           
  2370                           	line	86
  2371                           	
  2372  0007B0                     i2l368:		; BSR set to: ?
  2373                           
  2374                           	line	87
  2375                           	
  2376  0007B0                     i2l367:		; BSR set to: ?
  2377                           
  2378                           	line	88
  2379                           ;modbus_rtu.c: 85: }
  2380                           ;modbus_rtu.c: 86: }
  2381                           ;modbus_rtu.c: 87: }
  2382                           ;modbus_rtu.c: 88: }
  2383  0007B0                     i2l366:
  2384                           			; BSR set to: ?
  2385                           
  2386  0007B0  0012               	return
  2387                           	opt stack 0
  2388                           GLOBAL __end_of_tx_isr
  2389  0007B2                     	__end_of_tx_isr:
  2390                           	FNSIZE	_tx_isr,1,0
  2391                           ; =============== function _tx_isr ends ========
                                 ====
  2392                           
  2393                           	signat	_tx_isr,88
  2394                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  2395                           	global	intlevel2
  2396                           
  2397                           	opt lm
  2398                           	FNBREAK _get_speed,intlevel2
  2399                           	global	_get_speed
  2400                           	global	??_get_speed
  2401                           	global	?_get_speed
  2402                           
  2403                           ; *************** function _get_speed **********
                                 *******
  2404                           ; Defined at:
  2405                           ;		line 122 in file "../main.c"
  2406                           ; Parameters:
  2407                           ;		None
  2408                           ; Auto variables:
  2409                           ;		None
  2410                           ; Return value:
  2411                           ;		type: void 
  2412                           ;		size: 0
  2413                           ; Registers used:
  2414                           ;		wreg, status,2, status,0, cstack
  2415                           ; Tracked objects:
  2416                           ;		On entry : 0/0
  2417                           ;		On exit  : 0/0
  2418                           ;		Unchanged: 0/0
  2419                           ; Data sizes:
  2420                           ;		Autos:    0
  2421                           ;		Params:   0
  2422                           ;		Temp:     1
  2423                           ;		Total:    1
  2424                           ; This function calls:
  2425                           ;		_start_timer3
  2426                           ;		_stop_timer3
  2427                           ; This function is called by:
  2428                           ;		_pv1_isr
  2429                           ; This function uses a non-reentrant model
  2430                           ; 
  2431                           	file	"../main.c"
  2432                           	line	122
  2433  000000                     	__size_of_get_speed	equ	__end_of_get_speed-_get
                                 _speed
  2434                           ;main.c: 121: void get_speed(void)
  2435                           ;main.c: 122: {
  2436                           	
  2437  0004E4                     _get_speed:		; BSR set to: ?
  2438                           
  2439                           	opt stack 28
  2440                           	line	126
  2441                           ;main.c: 123: static unsigned int pulse_count = 
                                 0;
  2442                           ;main.c: 124: static unsigned char sample_step =
                                  1;
  2443                           ;main.c: 126: switch(sample_step)
  2444  0004E4  EFC9  F002         	goto	i2l763
  2445                           	line	128
  2446                           ;main.c: 127: {
  2447                           ;main.c: 128: case 1:
  2448                           	
  2449  0004E8                     i2l764:		; BSR set to: ?
  2450                           
  2451                           	line	129
  2452                           ;main.c: 129: start_timer3();
  2453  0004E8  ECCB  F004         	call	_start_timer3	;wreg free
  2454                           	line	130
  2455                           ;main.c: 130: pulse_count++;
  2456  0004EC  0101               	movlb	1	; () banked
  2457  0004EE  0101               	movlb	1	; () banked
  2458  0004F0  4B34               	infsnz	((308))&0ffh
  2459  0004F2  2B35               	incf	((308+1))&0ffh
  2460                           	line	131
  2461                           ;main.c: 131: sample_step = 2;
  2462  0004F4  0102               	movlb	2	; () banked
  2463  0004F6  6F26               	movwf	(??_get_speed+0+0)&0ffh
  2464  0004F8  0E02               	movlw	low(02h)
  2465  0004FA  0101               	movlb	1	; () banked
  2466  0004FC  0101               	movlb	1	; () banked
  2467  0004FE  6F36               	movwf	((310))&0ffh
  2468  000500  0102               	movlb	2	; () banked
  2469  000502  5126               	movf	(??_get_speed+0+0)&0ffh,w
  2470                           	line	132
  2471                           ;main.c: 132: break;
  2472  000504  EFD2  F002         	goto	i2l762
  2473                           	line	133
  2474                           ;main.c: 133: case 2:
  2475                           	
  2476  000508                     i2l765:		; BSR set to: ?
  2477                           
  2478                           	line	134
  2479                           ;main.c: 134: pulse_count++;
  2480  000508  0101               	movlb	1	; () banked
  2481  00050A  0101               	movlb	1	; () banked
  2482  00050C  4B34               	infsnz	((308))&0ffh
  2483  00050E  2B35               	incf	((308+1))&0ffh
  2484                           	line	135
  2485                           ;main.c: 135: if(pulse_count==6)
  2486  000510  0101               	movlb	1	; () banked
  2487  000512  0101               	movlb	1	; () banked
  2488  000514  5134               	movf	((308))&0ffh,w
  2489  000516  0A06               	xorlw	6
  2490  000518  1135               	iorwf ((308+1))&0ffh,w
  2491                           
  2492  00051A  A4D8               	btfss	status,2
  2493  00051C  EF92  F002         	goto	i2u1301
  2494  000520  EF94  F002         	goto	i2u1300
  2495  000524                     i2u1301:
  2496  000524  EFBD  F002         	goto	i2l766
  2497  000528                     i2u1300:
  2498                           	line	137
  2499                           ;main.c: 136: {
  2500                           ;main.c: 137: stop_timer3();
  2501  000528  ECD1  F004         	call	_stop_timer3	;wreg free
  2502                           	line	138
  2503                           ;main.c: 138: pulse_count = 0;
  2504  00052C  0E00               	movlw	low(0)
  2505  00052E  0101               	movlb	1	; () banked
  2506  000530  0101               	movlb	1	; () banked
  2507  000532  6F34               	movwf	((308))&0ffh
  2508  000534  0E00               	movlw	high(0)
  2509  000536  0101               	movlb	1	; () banked
  2510  000538  6F35               	movwf	((308+1))&0ffh
  2511                           	line	140
  2512                           ;main.c: 140: stop_timer3();
  2513  00053A  ECD1  F004         	call	_stop_timer3	;wreg free
  2514                           	line	142
  2515                           ;main.c: 142: if(count_10ms>0)
  2516  00053E  0100               	movlb	0	; () banked
  2517  000540  0100               	movlb	0	; () banked
  2518  000542  51FE               	movf	((253+1))&0ffh,w
  2519  000544  11FD               	iorwf ((253))&0ffh,w
  2520                           
  2521  000546  B4D8               	btfsc	status,2
  2522  000548  EFA8  F002         	goto	i2u1311
  2523  00054C  EFAA  F002         	goto	i2u1310
  2524  000550                     i2u1311:
  2525  000550  EFAE  F002         	goto	i2l767
  2526  000554                     i2u1310:
  2527                           	line	145
  2528                           ;main.c: 143: {
  2529                           ;main.c: 145: modbus_reg[0] = count_10ms;
  2530  000554  C0FD F035          	movff	(253),(c:53)
  2531  000558  C0FE F036          	movff	(253+1),(c:53+1)
  2532                           	line	146
  2533                           	
  2534  00055C                     i2l767:		; BSR set to: ?
  2535                           
  2536                           	line	148
  2537                           ;main.c: 146: }
  2538                           ;main.c: 148: count_10ms = 0;
  2539  00055C  0E00               	movlw	low(0)
  2540  00055E  0100               	movlb	0	; () banked
  2541  000560  0100               	movlb	0	; () banked
  2542  000562  6FFD               	movwf	((253))&0ffh
  2543  000564  0E00               	movlw	high(0)
  2544  000566  0100               	movlb	0	; () banked
  2545  000568  6FFE               	movwf	((253+1))&0ffh
  2546                           	line	150
  2547                           ;main.c: 150: sample_step = 1;
  2548  00056A  0102               	movlb	2	; () banked
  2549  00056C  6F26               	movwf	(??_get_speed+0+0)&0ffh
  2550  00056E  0E01               	movlw	low(01h)
  2551  000570  0101               	movlb	1	; () banked
  2552  000572  0101               	movlb	1	; () banked
  2553  000574  6F36               	movwf	((310))&0ffh
  2554  000576  0102               	movlb	2	; () banked
  2555  000578  5126               	movf	(??_get_speed+0+0)&0ffh,w
  2556                           	line	151
  2557                           	
  2558  00057A                     i2l766:		; BSR set to: ?
  2559                           
  2560                           	line	152
  2561                           ;main.c: 151: }
  2562                           ;main.c: 152: break;
  2563  00057A  EFD2  F002         	goto	i2l762
  2564                           	line	154
  2565                           ;main.c: 154: default:
  2566                           	
  2567  00057E                     i2l768:		; BSR set to: ?
  2568                           
  2569                           	line	155
  2570                           ;main.c: 155: sample_step = 1;
  2571  00057E  0102               	movlb	2	; () banked
  2572  000580  6F26               	movwf	(??_get_speed+0+0)&0ffh
  2573  000582  0E01               	movlw	low(01h)
  2574  000584  0101               	movlb	1	; () banked
  2575  000586  0101               	movlb	1	; () banked
  2576  000588  6F36               	movwf	((310))&0ffh
  2577  00058A  0102               	movlb	2	; () banked
  2578  00058C  5126               	movf	(??_get_speed+0+0)&0ffh,w
  2579                           	line	156
  2580                           ;main.c: 156: break;
  2581  00058E  EFD2  F002         	goto	i2l762
  2582                           	line	126
  2583                           	
  2584  000592                     i2l763:		; BSR set to: ?
  2585                           
  2586  000592  0101               	movlb	1	; () banked
  2587  000594  0101               	movlb	1	; () banked
  2588  000596  5136               	movf	((310))&0ffh,w
  2589  000598  0A01               	xorlw	1 ^ 0
  2590  00059A  E0A6               	bz	i2l764
  2591  00059C  0A03               	xorlw	2 ^ 1
  2592  00059E  E0B4               	bz	i2l765
  2593  0005A0  EFBF  F002         	goto	i2l768
  2594                           
  2595                           	line	157
  2596                           	
  2597  0005A4                     i2l762:		; BSR set to: ?
  2598                           
  2599                           	line	158
  2600                           ;main.c: 158: }
  2601  0005A4                     i2l761:
  2602                           			; BSR set to: ?
  2603                           
  2604  0005A4  0012               	return
  2605                           	opt stack 0
  2606                           GLOBAL __end_of_get_speed
  2607  0005A6                     	__end_of_get_speed:
  2608                           	FNSIZE	_get_speed,1,0
  2609                           ; =============== function _get_speed ends =====
                                 =======
  2610                           
  2611                           	signat	_get_speed,88
  2612                                   psect   text14,class=CODE,space=0,reloc=
                                 2
  2613                           	global	intlevel2
  2614                           
  2615                           	opt lm
  2616                           	FNBREAK _stop_timer3,intlevel2
  2617                           	global	_stop_timer3
  2618                           	global	??_stop_timer3
  2619                           	global	?_stop_timer3
  2620                           
  2621                           ; *************** function _stop_timer3 ********
                                 *********
  2622                           ; Defined at:
  2623                           ;		line 166 in file "../main.c"
  2624                           ; Parameters:
  2625                           ;		None
  2626                           ; Auto variables:
  2627                           ;		None
  2628                           ; Return value:
  2629                           ;		type: void 
  2630                           ;		size: 0
  2631                           ; Registers used:
  2632                           ;		wreg, status,2
  2633                           ; Tracked objects:
  2634                           ;		On entry : 0/0
  2635                           ;		On exit  : 0/0
  2636                           ;		Unchanged: 0/0
  2637                           ; Data sizes:
  2638                           ;		Autos:    0
  2639                           ;		Params:   0
  2640                           ;		Temp:     0
  2641                           ;		Total:    0
  2642                           ; This function calls:
  2643                           ;		Nothing
  2644                           ; This function is called by:
  2645                           ;		_get_speed
  2646                           ; This function uses a non-reentrant model
  2647                           ; 
  2648                           	file	"../main.c"
  2649                           	line	166
  2650  000000                     	__size_of_stop_timer3	equ	__end_of_stop_timer3-
                                 _stop_timer3
  2651                           ;main.c: 165: void stop_timer3(void)
  2652                           ;main.c: 166: {
  2653                           	
  2654  0009A2                     _stop_timer3:		; BSR set to: ?
  2655                           
  2656                           	opt stack 27
  2657                           	line	167
  2658                           ;main.c: 167: TMR3ON = 0;
  2659  0009A2  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
  2660                           	line	168
  2661                           ;main.c: 168: TMR3 = 65535-11059;
  2662  0009A4  0ECC               	movlw	low(0D4CCh)
  2663  0009A6  6EB2               	movwf	((c:4018)),c	;volatile
  2664  0009A8  0ED4               	movlw	high(0D4CCh)
  2665  0009AA  6EB3               	movwf	((c:4018+1)),c	;volatile
  2666                           	line	169
  2667                           ;main.c: 169: }
  2668  0009AC                     i2l770:
  2669                           			; BSR set to: ?
  2670                           
  2671  0009AC  0012               	return
  2672                           	opt stack 0
  2673                           GLOBAL __end_of_stop_timer3
  2674  0009AE                     	__end_of_stop_timer3:
  2675                           	FNSIZE	_stop_timer3,0,0
  2676                           ; =============== function _stop_timer3 ends ===
                                 =========
  2677                           
  2678                           	signat	_stop_timer3,88
  2679                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  2680                           	global	intlevel2
  2681                           
  2682                           	opt lm
  2683                           	FNBREAK _start_timer3,intlevel2
  2684                           	global	_start_timer3
  2685                           	global	??_start_timer3
  2686                           	global	?_start_timer3
  2687                           
  2688                           ; *************** function _start_timer3 *******
                                 **********
  2689                           ; Defined at:
  2690                           ;		line 161 in file "../main.c"
  2691                           ; Parameters:
  2692                           ;		None
  2693                           ; Auto variables:
  2694                           ;		None
  2695                           ; Return value:
  2696                           ;		type: void 
  2697                           ;		size: 0
  2698                           ; Registers used:
  2699                           ;		wreg, status,2
  2700                           ; Tracked objects:
  2701                           ;		On entry : 0/0
  2702                           ;		On exit  : 0/0
  2703                           ;		Unchanged: 0/0
  2704                           ; Data sizes:
  2705                           ;		Autos:    0
  2706                           ;		Params:   0
  2707                           ;		Temp:     0
  2708                           ;		Total:    0
  2709                           ; This function calls:
  2710                           ;		Nothing
  2711                           ; This function is called by:
  2712                           ;		_get_speed
  2713                           ; This function uses a non-reentrant model
  2714                           ; 
  2715                           	file	"../main.c"
  2716                           	line	161
  2717  000000                     	__size_of_start_timer3	equ	__end_of_start_timer
                                 3-_start_timer3
  2718                           ;main.c: 160: void start_timer3(void)
  2719                           ;main.c: 161: {
  2720                           	
  2721  000996                     _start_timer3:		; BSR set to: ?
  2722                           
  2723                           	opt stack 27
  2724                           	line	162
  2725                           ;main.c: 162: TMR3 = 65535-11059;
  2726  000996  0ECC               	movlw	low(0D4CCh)
  2727  000998  6EB2               	movwf	((c:4018)),c	;volatile
  2728  00099A  0ED4               	movlw	high(0D4CCh)
  2729  00099C  6EB3               	movwf	((c:4018+1)),c	;volatile
  2730                           	line	163
  2731                           ;main.c: 163: TMR3ON = 1;
  2732  00099E  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
  2733                           	line	164
  2734                           ;main.c: 164: }
  2735  0009A0                     i2l769:
  2736                           			; BSR set to: ?
  2737                           
  2738  0009A0  0012               	return
  2739                           	opt stack 0
  2740                           GLOBAL __end_of_start_timer3
  2741  0009A2                     	__end_of_start_timer3:
  2742                           	FNSIZE	_start_timer3,0,0
  2743                           ; =============== function _start_timer3 ends ==
                                 ==========
  2744                           
  2745                           	signat	_start_timer3,88
  2746                           	FNCALL	_main,_init_timer3
  2747                           	FNCALL	_main,_init_pv1
  2748                           	FNCALL	_main,_modbus_receive
  2749                           	FNCALL	_modbus_receive,_modbus_crc16
  2750                           	FNCALL	_modbus_receive,_read_holding_regs
  2751                           	FNCALL	_modbus_receive,_write_single_holding_re
                                 g
  2752                           	FNCALL	_read_holding_regs,_modbus_crc16
  2753                           	FNROOT	_main
  2754                           	FNCALL	_my_isr,_rec_isr
  2755                           	FNCALL	_my_isr,_tx_isr
  2756                           	FNCALL	_my_isr,_timer35_isr
  2757                           	FNCALL	_my_isr,_timer3_isr
  2758                           	FNCALL	_my_isr,_pv1_isr
  2759                           	FNCALL	_pv1_isr,_get_speed
  2760                           	FNCALL	_get_speed,_start_timer3
  2761                           	FNCALL	_get_speed,_stop_timer3
  2762                           	FNCALL	intlevel2,_my_isr
  2763                           	global	intlevel2
  2764                           	FNROOT	intlevel2
  2765                           	global	F3921
  2766                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  2767  000000                     F3921  equ     310
  2768                           
  2769                           	opt lm
  2770                           
  2771                           	DABS	1,310,1	;F3921
  2772                                   psect   idata,class=CODE,space=0
  2773                           	line	124
  2774                           
  2775                           ;initializer for F3921
  2776  00005E  01                 	db	low(01h)
  2777                                   psect   mediumconst,class=MEDIUMCONST,sp
                                 ace=0,reloc=2
  2778                           	global	_aucCRCHi
  2779                           	file	"../mbcrc.c"
  2780                           	line	2
  2781  007DFE                     _aucCRCHi:
  2782  007DFE  00                 	db	low(0)
  2783  007DFF  C1                 	db	low(0C1h)
  2784  007E00  81                 	db	low(081h)
  2785  007E01  40                 	db	low(040h)
  2786  007E02  01                 	db	low(01h)
  2787  007E03  C0                 	db	low(0C0h)
  2788  007E04  80                 	db	low(080h)
  2789  007E05  41                 	db	low(041h)
  2790  007E06  01                 	db	low(01h)
  2791  007E07  C0                 	db	low(0C0h)
  2792  007E08  80                 	db	low(080h)
  2793  007E09  41                 	db	low(041h)
  2794  007E0A  00                 	db	low(0)
  2795  007E0B  C1                 	db	low(0C1h)
  2796  007E0C  81                 	db	low(081h)
  2797  007E0D  40                 	db	low(040h)
  2798  007E0E  01                 	db	low(01h)
  2799  007E0F  C0                 	db	low(0C0h)
  2800  007E10  80                 	db	low(080h)
  2801  007E11  41                 	db	low(041h)
  2802  007E12  00                 	db	low(0)
  2803  007E13  C1                 	db	low(0C1h)
  2804  007E14  81                 	db	low(081h)
  2805  007E15  40                 	db	low(040h)
  2806  007E16  00                 	db	low(0)
  2807  007E17  C1                 	db	low(0C1h)
  2808  007E18  81                 	db	low(081h)
  2809  007E19  40                 	db	low(040h)
  2810  007E1A  01                 	db	low(01h)
  2811  007E1B  C0                 	db	low(0C0h)
  2812  007E1C  80                 	db	low(080h)
  2813  007E1D  41                 	db	low(041h)
  2814  007E1E  01                 	db	low(01h)
  2815  007E1F  C0                 	db	low(0C0h)
  2816  007E20  80                 	db	low(080h)
  2817  007E21  41                 	db	low(041h)
  2818  007E22  00                 	db	low(0)
  2819  007E23  C1                 	db	low(0C1h)
  2820  007E24  81                 	db	low(081h)
  2821  007E25  40                 	db	low(040h)
  2822  007E26  00                 	db	low(0)
  2823  007E27  C1                 	db	low(0C1h)
  2824  007E28  81                 	db	low(081h)
  2825  007E29  40                 	db	low(040h)
  2826  007E2A  01                 	db	low(01h)
  2827  007E2B  C0                 	db	low(0C0h)
  2828  007E2C  80                 	db	low(080h)
  2829  007E2D  41                 	db	low(041h)
  2830  007E2E  00                 	db	low(0)
  2831  007E2F  C1                 	db	low(0C1h)
  2832  007E30  81                 	db	low(081h)
  2833  007E31  40                 	db	low(040h)
  2834  007E32  01                 	db	low(01h)
  2835  007E33  C0                 	db	low(0C0h)
  2836  007E34  80                 	db	low(080h)
  2837  007E35  41                 	db	low(041h)
  2838  007E36  01                 	db	low(01h)
  2839  007E37  C0                 	db	low(0C0h)
  2840  007E38  80                 	db	low(080h)
  2841  007E39  41                 	db	low(041h)
  2842  007E3A  00                 	db	low(0)
  2843  007E3B  C1                 	db	low(0C1h)
  2844  007E3C  81                 	db	low(081h)
  2845  007E3D  40                 	db	low(040h)
  2846  007E3E  01                 	db	low(01h)
  2847  007E3F  C0                 	db	low(0C0h)
  2848  007E40  80                 	db	low(080h)
  2849  007E41  41                 	db	low(041h)
  2850  007E42  00                 	db	low(0)
  2851  007E43  C1                 	db	low(0C1h)
  2852  007E44  81                 	db	low(081h)
  2853  007E45  40                 	db	low(040h)
  2854  007E46  00                 	db	low(0)
  2855  007E47  C1                 	db	low(0C1h)
  2856  007E48  81                 	db	low(081h)
  2857  007E49  40                 	db	low(040h)
  2858  007E4A  01                 	db	low(01h)
  2859  007E4B  C0                 	db	low(0C0h)
  2860  007E4C  80                 	db	low(080h)
  2861  007E4D  41                 	db	low(041h)
  2862  007E4E  00                 	db	low(0)
  2863  007E4F  C1                 	db	low(0C1h)
  2864  007E50  81                 	db	low(081h)
  2865  007E51  40                 	db	low(040h)
  2866  007E52  01                 	db	low(01h)
  2867  007E53  C0                 	db	low(0C0h)
  2868  007E54  80                 	db	low(080h)
  2869  007E55  41                 	db	low(041h)
  2870  007E56  01                 	db	low(01h)
  2871  007E57  C0                 	db	low(0C0h)
  2872  007E58  80                 	db	low(080h)
  2873  007E59  41                 	db	low(041h)
  2874  007E5A  00                 	db	low(0)
  2875  007E5B  C1                 	db	low(0C1h)
  2876  007E5C  81                 	db	low(081h)
  2877  007E5D  40                 	db	low(040h)
  2878  007E5E  00                 	db	low(0)
  2879  007E5F  C1                 	db	low(0C1h)
  2880  007E60  81                 	db	low(081h)
  2881  007E61  40                 	db	low(040h)
  2882  007E62  01                 	db	low(01h)
  2883  007E63  C0                 	db	low(0C0h)
  2884  007E64  80                 	db	low(080h)
  2885  007E65  41                 	db	low(041h)
  2886  007E66  01                 	db	low(01h)
  2887  007E67  C0                 	db	low(0C0h)
  2888  007E68  80                 	db	low(080h)
  2889  007E69  41                 	db	low(041h)
  2890  007E6A  00                 	db	low(0)
  2891  007E6B  C1                 	db	low(0C1h)
  2892  007E6C  81                 	db	low(081h)
  2893  007E6D  40                 	db	low(040h)
  2894  007E6E  01                 	db	low(01h)
  2895  007E6F  C0                 	db	low(0C0h)
  2896  007E70  80                 	db	low(080h)
  2897  007E71  41                 	db	low(041h)
  2898  007E72  00                 	db	low(0)
  2899  007E73  C1                 	db	low(0C1h)
  2900  007E74  81                 	db	low(081h)
  2901  007E75  40                 	db	low(040h)
  2902  007E76  00                 	db	low(0)
  2903  007E77  C1                 	db	low(0C1h)
  2904  007E78  81                 	db	low(081h)
  2905  007E79  40                 	db	low(040h)
  2906  007E7A  01                 	db	low(01h)
  2907  007E7B  C0                 	db	low(0C0h)
  2908  007E7C  80                 	db	low(080h)
  2909  007E7D  41                 	db	low(041h)
  2910  007E7E  01                 	db	low(01h)
  2911  007E7F  C0                 	db	low(0C0h)
  2912  007E80  80                 	db	low(080h)
  2913  007E81  41                 	db	low(041h)
  2914  007E82  00                 	db	low(0)
  2915  007E83  C1                 	db	low(0C1h)
  2916  007E84  81                 	db	low(081h)
  2917  007E85  40                 	db	low(040h)
  2918  007E86  00                 	db	low(0)
  2919  007E87  C1                 	db	low(0C1h)
  2920  007E88  81                 	db	low(081h)
  2921  007E89  40                 	db	low(040h)
  2922  007E8A  01                 	db	low(01h)
  2923  007E8B  C0                 	db	low(0C0h)
  2924  007E8C  80                 	db	low(080h)
  2925  007E8D  41                 	db	low(041h)
  2926  007E8E  00                 	db	low(0)
  2927  007E8F  C1                 	db	low(0C1h)
  2928  007E90  81                 	db	low(081h)
  2929  007E91  40                 	db	low(040h)
  2930  007E92  01                 	db	low(01h)
  2931  007E93  C0                 	db	low(0C0h)
  2932  007E94  80                 	db	low(080h)
  2933  007E95  41                 	db	low(041h)
  2934  007E96  01                 	db	low(01h)
  2935  007E97  C0                 	db	low(0C0h)
  2936  007E98  80                 	db	low(080h)
  2937  007E99  41                 	db	low(041h)
  2938  007E9A  00                 	db	low(0)
  2939  007E9B  C1                 	db	low(0C1h)
  2940  007E9C  81                 	db	low(081h)
  2941  007E9D  40                 	db	low(040h)
  2942  007E9E  00                 	db	low(0)
  2943  007E9F  C1                 	db	low(0C1h)
  2944  007EA0  81                 	db	low(081h)
  2945  007EA1  40                 	db	low(040h)
  2946  007EA2  01                 	db	low(01h)
  2947  007EA3  C0                 	db	low(0C0h)
  2948  007EA4  80                 	db	low(080h)
  2949  007EA5  41                 	db	low(041h)
  2950  007EA6  01                 	db	low(01h)
  2951  007EA7  C0                 	db	low(0C0h)
  2952  007EA8  80                 	db	low(080h)
  2953  007EA9  41                 	db	low(041h)
  2954  007EAA  00                 	db	low(0)
  2955  007EAB  C1                 	db	low(0C1h)
  2956  007EAC  81                 	db	low(081h)
  2957  007EAD  40                 	db	low(040h)
  2958  007EAE  01                 	db	low(01h)
  2959  007EAF  C0                 	db	low(0C0h)
  2960  007EB0  80                 	db	low(080h)
  2961  007EB1  41                 	db	low(041h)
  2962  007EB2  00                 	db	low(0)
  2963  007EB3  C1                 	db	low(0C1h)
  2964  007EB4  81                 	db	low(081h)
  2965  007EB5  40                 	db	low(040h)
  2966  007EB6  00                 	db	low(0)
  2967  007EB7  C1                 	db	low(0C1h)
  2968  007EB8  81                 	db	low(081h)
  2969  007EB9  40                 	db	low(040h)
  2970  007EBA  01                 	db	low(01h)
  2971  007EBB  C0                 	db	low(0C0h)
  2972  007EBC  80                 	db	low(080h)
  2973  007EBD  41                 	db	low(041h)
  2974  007EBE  00                 	db	low(0)
  2975  007EBF  C1                 	db	low(0C1h)
  2976  007EC0  81                 	db	low(081h)
  2977  007EC1  40                 	db	low(040h)
  2978  007EC2  01                 	db	low(01h)
  2979  007EC3  C0                 	db	low(0C0h)
  2980  007EC4  80                 	db	low(080h)
  2981  007EC5  41                 	db	low(041h)
  2982  007EC6  01                 	db	low(01h)
  2983  007EC7  C0                 	db	low(0C0h)
  2984  007EC8  80                 	db	low(080h)
  2985  007EC9  41                 	db	low(041h)
  2986  007ECA  00                 	db	low(0)
  2987  007ECB  C1                 	db	low(0C1h)
  2988  007ECC  81                 	db	low(081h)
  2989  007ECD  40                 	db	low(040h)
  2990  007ECE  01                 	db	low(01h)
  2991  007ECF  C0                 	db	low(0C0h)
  2992  007ED0  80                 	db	low(080h)
  2993  007ED1  41                 	db	low(041h)
  2994  007ED2  00                 	db	low(0)
  2995  007ED3  C1                 	db	low(0C1h)
  2996  007ED4  81                 	db	low(081h)
  2997  007ED5  40                 	db	low(040h)
  2998  007ED6  00                 	db	low(0)
  2999  007ED7  C1                 	db	low(0C1h)
  3000  007ED8  81                 	db	low(081h)
  3001  007ED9  40                 	db	low(040h)
  3002  007EDA  01                 	db	low(01h)
  3003  007EDB  C0                 	db	low(0C0h)
  3004  007EDC  80                 	db	low(080h)
  3005  007EDD  41                 	db	low(041h)
  3006  007EDE  01                 	db	low(01h)
  3007  007EDF  C0                 	db	low(0C0h)
  3008  007EE0  80                 	db	low(080h)
  3009  007EE1  41                 	db	low(041h)
  3010  007EE2  00                 	db	low(0)
  3011  007EE3  C1                 	db	low(0C1h)
  3012  007EE4  81                 	db	low(081h)
  3013  007EE5  40                 	db	low(040h)
  3014  007EE6  00                 	db	low(0)
  3015  007EE7  C1                 	db	low(0C1h)
  3016  007EE8  81                 	db	low(081h)
  3017  007EE9  40                 	db	low(040h)
  3018  007EEA  01                 	db	low(01h)
  3019  007EEB  C0                 	db	low(0C0h)
  3020  007EEC  80                 	db	low(080h)
  3021  007EED  41                 	db	low(041h)
  3022  007EEE  00                 	db	low(0)
  3023  007EEF  C1                 	db	low(0C1h)
  3024  007EF0  81                 	db	low(081h)
  3025  007EF1  40                 	db	low(040h)
  3026  007EF2  01                 	db	low(01h)
  3027  007EF3  C0                 	db	low(0C0h)
  3028  007EF4  80                 	db	low(080h)
  3029  007EF5  41                 	db	low(041h)
  3030  007EF6  01                 	db	low(01h)
  3031  007EF7  C0                 	db	low(0C0h)
  3032  007EF8  80                 	db	low(080h)
  3033  007EF9  41                 	db	low(041h)
  3034  007EFA  00                 	db	low(0)
  3035  007EFB  C1                 	db	low(0C1h)
  3036  007EFC  81                 	db	low(081h)
  3037  007EFD  40                 	db	low(040h)
  3038                           	global	_aucCRCLo
  3039                           	line	27
  3040  007EFE                     _aucCRCLo:
  3041  007EFE  00                 	db	low(0)
  3042  007EFF  C0                 	db	low(0C0h)
  3043  007F00  C1                 	db	low(0C1h)
  3044  007F01  01                 	db	low(01h)
  3045  007F02  C3                 	db	low(0C3h)
  3046  007F03  03                 	db	low(03h)
  3047  007F04  02                 	db	low(02h)
  3048  007F05  C2                 	db	low(0C2h)
  3049  007F06  C6                 	db	low(0C6h)
  3050  007F07  06                 	db	low(06h)
  3051  007F08  07                 	db	low(07h)
  3052  007F09  C7                 	db	low(0C7h)
  3053  007F0A  05                 	db	low(05h)
  3054  007F0B  C5                 	db	low(0C5h)
  3055  007F0C  C4                 	db	low(0C4h)
  3056  007F0D  04                 	db	low(04h)
  3057  007F0E  CC                 	db	low(0CCh)
  3058  007F0F  0C                 	db	low(0Ch)
  3059  007F10  0D                 	db	low(0Dh)
  3060  007F11  CD                 	db	low(0CDh)
  3061  007F12  0F                 	db	low(0Fh)
  3062  007F13  CF                 	db	low(0CFh)
  3063  007F14  CE                 	db	low(0CEh)
  3064  007F15  0E                 	db	low(0Eh)
  3065  007F16  0A                 	db	low(0Ah)
  3066  007F17  CA                 	db	low(0CAh)
  3067  007F18  CB                 	db	low(0CBh)
  3068  007F19  0B                 	db	low(0Bh)
  3069  007F1A  C9                 	db	low(0C9h)
  3070  007F1B  09                 	db	low(09h)
  3071  007F1C  08                 	db	low(08h)
  3072  007F1D  C8                 	db	low(0C8h)
  3073  007F1E  D8                 	db	low(0D8h)
  3074  007F1F  18                 	db	low(018h)
  3075  007F20  19                 	db	low(019h)
  3076  007F21  D9                 	db	low(0D9h)
  3077  007F22  1B                 	db	low(01Bh)
  3078  007F23  DB                 	db	low(0DBh)
  3079  007F24  DA                 	db	low(0DAh)
  3080  007F25  1A                 	db	low(01Ah)
  3081  007F26  1E                 	db	low(01Eh)
  3082  007F27  DE                 	db	low(0DEh)
  3083  007F28  DF                 	db	low(0DFh)
  3084  007F29  1F                 	db	low(01Fh)
  3085  007F2A  DD                 	db	low(0DDh)
  3086  007F2B  1D                 	db	low(01Dh)
  3087  007F2C  1C                 	db	low(01Ch)
  3088  007F2D  DC                 	db	low(0DCh)
  3089  007F2E  14                 	db	low(014h)
  3090  007F2F  D4                 	db	low(0D4h)
  3091  007F30  D5                 	db	low(0D5h)
  3092  007F31  15                 	db	low(015h)
  3093  007F32  D7                 	db	low(0D7h)
  3094  007F33  17                 	db	low(017h)
  3095  007F34  16                 	db	low(016h)
  3096  007F35  D6                 	db	low(0D6h)
  3097  007F36  D2                 	db	low(0D2h)
  3098  007F37  12                 	db	low(012h)
  3099  007F38  13                 	db	low(013h)
  3100  007F39  D3                 	db	low(0D3h)
  3101  007F3A  11                 	db	low(011h)
  3102  007F3B  D1                 	db	low(0D1h)
  3103  007F3C  D0                 	db	low(0D0h)
  3104  007F3D  10                 	db	low(010h)
  3105  007F3E  F0                 	db	low(0F0h)
  3106  007F3F  30                 	db	low(030h)
  3107  007F40  31                 	db	low(031h)
  3108  007F41  F1                 	db	low(0F1h)
  3109  007F42  33                 	db	low(033h)
  3110  007F43  F3                 	db	low(0F3h)
  3111  007F44  F2                 	db	low(0F2h)
  3112  007F45  32                 	db	low(032h)
  3113  007F46  36                 	db	low(036h)
  3114  007F47  F6                 	db	low(0F6h)
  3115  007F48  F7                 	db	low(0F7h)
  3116  007F49  37                 	db	low(037h)
  3117  007F4A  F5                 	db	low(0F5h)
  3118  007F4B  35                 	db	low(035h)
  3119  007F4C  34                 	db	low(034h)
  3120  007F4D  F4                 	db	low(0F4h)
  3121  007F4E  3C                 	db	low(03Ch)
  3122  007F4F  FC                 	db	low(0FCh)
  3123  007F50  FD                 	db	low(0FDh)
  3124  007F51  3D                 	db	low(03Dh)
  3125  007F52  FF                 	db	low(0FFh)
  3126  007F53  3F                 	db	low(03Fh)
  3127  007F54  3E                 	db	low(03Eh)
  3128  007F55  FE                 	db	low(0FEh)
  3129  007F56  FA                 	db	low(0FAh)
  3130  007F57  3A                 	db	low(03Ah)
  3131  007F58  3B                 	db	low(03Bh)
  3132  007F59  FB                 	db	low(0FBh)
  3133  007F5A  39                 	db	low(039h)
  3134  007F5B  F9                 	db	low(0F9h)
  3135  007F5C  F8                 	db	low(0F8h)
  3136  007F5D  38                 	db	low(038h)
  3137  007F5E  28                 	db	low(028h)
  3138  007F5F  E8                 	db	low(0E8h)
  3139  007F60  E9                 	db	low(0E9h)
  3140  007F61  29                 	db	low(029h)
  3141  007F62  EB                 	db	low(0EBh)
  3142  007F63  2B                 	db	low(02Bh)
  3143  007F64  2A                 	db	low(02Ah)
  3144  007F65  EA                 	db	low(0EAh)
  3145  007F66  EE                 	db	low(0EEh)
  3146  007F67  2E                 	db	low(02Eh)
  3147  007F68  2F                 	db	low(02Fh)
  3148  007F69  EF                 	db	low(0EFh)
  3149  007F6A  2D                 	db	low(02Dh)
  3150  007F6B  ED                 	db	low(0EDh)
  3151  007F6C  EC                 	db	low(0ECh)
  3152  007F6D  2C                 	db	low(02Ch)
  3153  007F6E  E4                 	db	low(0E4h)
  3154  007F6F  24                 	db	low(024h)
  3155  007F70  25                 	db	low(025h)
  3156  007F71  E5                 	db	low(0E5h)
  3157  007F72  27                 	db	low(027h)
  3158  007F73  E7                 	db	low(0E7h)
  3159  007F74  E6                 	db	low(0E6h)
  3160  007F75  26                 	db	low(026h)
  3161  007F76  22                 	db	low(022h)
  3162  007F77  E2                 	db	low(0E2h)
  3163  007F78  E3                 	db	low(0E3h)
  3164  007F79  23                 	db	low(023h)
  3165  007F7A  E1                 	db	low(0E1h)
  3166  007F7B  21                 	db	low(021h)
  3167  007F7C  20                 	db	low(020h)
  3168  007F7D  E0                 	db	low(0E0h)
  3169  007F7E  A0                 	db	low(0A0h)
  3170  007F7F  60                 	db	low(060h)
  3171  007F80  61                 	db	low(061h)
  3172  007F81  A1                 	db	low(0A1h)
  3173  007F82  63                 	db	low(063h)
  3174  007F83  A3                 	db	low(0A3h)
  3175  007F84  A2                 	db	low(0A2h)
  3176  007F85  62                 	db	low(062h)
  3177  007F86  66                 	db	low(066h)
  3178  007F87  A6                 	db	low(0A6h)
  3179  007F88  A7                 	db	low(0A7h)
  3180  007F89  67                 	db	low(067h)
  3181  007F8A  A5                 	db	low(0A5h)
  3182  007F8B  65                 	db	low(065h)
  3183  007F8C  64                 	db	low(064h)
  3184  007F8D  A4                 	db	low(0A4h)
  3185  007F8E  6C                 	db	low(06Ch)
  3186  007F8F  AC                 	db	low(0ACh)
  3187  007F90  AD                 	db	low(0ADh)
  3188  007F91  6D                 	db	low(06Dh)
  3189  007F92  AF                 	db	low(0AFh)
  3190  007F93  6F                 	db	low(06Fh)
  3191  007F94  6E                 	db	low(06Eh)
  3192  007F95  AE                 	db	low(0AEh)
  3193  007F96  AA                 	db	low(0AAh)
  3194  007F97  6A                 	db	low(06Ah)
  3195  007F98  6B                 	db	low(06Bh)
  3196  007F99  AB                 	db	low(0ABh)
  3197  007F9A  69                 	db	low(069h)
  3198  007F9B  A9                 	db	low(0A9h)
  3199  007F9C  A8                 	db	low(0A8h)
  3200  007F9D  68                 	db	low(068h)
  3201  007F9E  78                 	db	low(078h)
  3202  007F9F  B8                 	db	low(0B8h)
  3203  007FA0  B9                 	db	low(0B9h)
  3204  007FA1  79                 	db	low(079h)
  3205  007FA2  BB                 	db	low(0BBh)
  3206  007FA3  7B                 	db	low(07Bh)
  3207  007FA4  7A                 	db	low(07Ah)
  3208  007FA5  BA                 	db	low(0BAh)
  3209  007FA6  BE                 	db	low(0BEh)
  3210  007FA7  7E                 	db	low(07Eh)
  3211  007FA8  7F                 	db	low(07Fh)
  3212  007FA9  BF                 	db	low(0BFh)
  3213  007FAA  7D                 	db	low(07Dh)
  3214  007FAB  BD                 	db	low(0BDh)
  3215  007FAC  BC                 	db	low(0BCh)
  3216  007FAD  7C                 	db	low(07Ch)
  3217  007FAE  B4                 	db	low(0B4h)
  3218  007FAF  74                 	db	low(074h)
  3219  007FB0  75                 	db	low(075h)
  3220  007FB1  B5                 	db	low(0B5h)
  3221  007FB2  77                 	db	low(077h)
  3222  007FB3  B7                 	db	low(0B7h)
  3223  007FB4  B6                 	db	low(0B6h)
  3224  007FB5  76                 	db	low(076h)
  3225  007FB6  72                 	db	low(072h)
  3226  007FB7  B2                 	db	low(0B2h)
  3227  007FB8  B3                 	db	low(0B3h)
  3228  007FB9  73                 	db	low(073h)
  3229  007FBA  B1                 	db	low(0B1h)
  3230  007FBB  71                 	db	low(071h)
  3231  007FBC  70                 	db	low(070h)
  3232  007FBD  B0                 	db	low(0B0h)
  3233  007FBE  50                 	db	low(050h)
  3234  007FBF  90                 	db	low(090h)
  3235  007FC0  91                 	db	low(091h)
  3236  007FC1  51                 	db	low(051h)
  3237  007FC2  93                 	db	low(093h)
  3238  007FC3  53                 	db	low(053h)
  3239  007FC4  52                 	db	low(052h)
  3240  007FC5  92                 	db	low(092h)
  3241  007FC6  96                 	db	low(096h)
  3242  007FC7  56                 	db	low(056h)
  3243  007FC8  57                 	db	low(057h)
  3244  007FC9  97                 	db	low(097h)
  3245  007FCA  55                 	db	low(055h)
  3246  007FCB  95                 	db	low(095h)
  3247  007FCC  94                 	db	low(094h)
  3248  007FCD  54                 	db	low(054h)
  3249  007FCE  9C                 	db	low(09Ch)
  3250  007FCF  5C                 	db	low(05Ch)
  3251  007FD0  5D                 	db	low(05Dh)
  3252  007FD1  9D                 	db	low(09Dh)
  3253  007FD2  5F                 	db	low(05Fh)
  3254  007FD3  9F                 	db	low(09Fh)
  3255  007FD4  9E                 	db	low(09Eh)
  3256  007FD5  5E                 	db	low(05Eh)
  3257  007FD6  5A                 	db	low(05Ah)
  3258  007FD7  9A                 	db	low(09Ah)
  3259  007FD8  9B                 	db	low(09Bh)
  3260  007FD9  5B                 	db	low(05Bh)
  3261  007FDA  99                 	db	low(099h)
  3262  007FDB  59                 	db	low(059h)
  3263  007FDC  58                 	db	low(058h)
  3264  007FDD  98                 	db	low(098h)
  3265  007FDE  88                 	db	low(088h)
  3266  007FDF  48                 	db	low(048h)
  3267  007FE0  49                 	db	low(049h)
  3268  007FE1  89                 	db	low(089h)
  3269  007FE2  4B                 	db	low(04Bh)
  3270  007FE3  8B                 	db	low(08Bh)
  3271  007FE4  8A                 	db	low(08Ah)
  3272  007FE5  4A                 	db	low(04Ah)
  3273  007FE6  4E                 	db	low(04Eh)
  3274  007FE7  8E                 	db	low(08Eh)
  3275  007FE8  8F                 	db	low(08Fh)
  3276  007FE9  4F                 	db	low(04Fh)
  3277  007FEA  8D                 	db	low(08Dh)
  3278  007FEB  4D                 	db	low(04Dh)
  3279  007FEC  4C                 	db	low(04Ch)
  3280  007FED  8C                 	db	low(08Ch)
  3281  007FEE  44                 	db	low(044h)
  3282  007FEF  84                 	db	low(084h)
  3283  007FF0  85                 	db	low(085h)
  3284  007FF1  45                 	db	low(045h)
  3285  007FF2  87                 	db	low(087h)
  3286  007FF3  47                 	db	low(047h)
  3287  007FF4  46                 	db	low(046h)
  3288  007FF5  86                 	db	low(086h)
  3289  007FF6  82                 	db	low(082h)
  3290  007FF7  42                 	db	low(042h)
  3291  007FF8  43                 	db	low(043h)
  3292  007FF9  83                 	db	low(083h)
  3293  007FFA  41                 	db	low(041h)
  3294  007FFB  81                 	db	low(081h)
  3295  007FFC  80                 	db	low(080h)
  3296  007FFD  40                 	db	low(040h)
  3297                           	global	_aucCRCHi
  3298                           	global	_aucCRCLo
  3299                           	global	_modbus_reg
  3300                           	global	_modbus_reg
  3301  000000                     _modbus_reg  equ     53
  3302                           
  3303                           	DABS	1,53,200	;_modbus_reg
  3304                           	global	_rx_buf
  3305                           	global	_rx_buf
  3306  000000                     _rx_buf  equ     0
  3307                           
  3308                           	DABS	1,0,53	;_rx_buf
  3309                           	global	_tx_buf
  3310                           	global	_tx_buf
  3311  000000                     _tx_buf  equ     256
  3312                           
  3313                           	DABS	1,256,51	;_tx_buf
  3314                           	global	F3920
  3315  000000                     F3920  equ     308
  3316                           
  3317                           	DABS	1,308,2	;F3920
  3318                           	global	_count_10ms
  3319                           	global	_count_10ms
  3320  000000                     _count_10ms  equ     253
  3321                           
  3322                           	DABS	1,253,2	;_count_10ms
  3323                           	global	F3908
  3324  000000                     F3908  equ     307
  3325                           
  3326                           	DABS	1,307,1	;F3908
  3327                           	global	_rx_state
  3328                           	global	_rx_state
  3329  000000                     _rx_state  equ     255
  3330                           
  3331                           	DABS	1,255,1	;_rx_state
  3332                           	global	_TMR1
  3333  000000                     _TMR1	equ	0xFCE
  3334                           	global	_TMR3
  3335  000000                     _TMR3	equ	0xFB2
  3336                           	global	_ANSELA
  3337  000000                     _ANSELA	equ	0xF38
  3338                           	global	_ANSELB
  3339  000000                     _ANSELB	equ	0xF39
  3340                           	global	_ANSELC
  3341  000000                     _ANSELC	equ	0xF3A
  3342                           	global	_PORTC
  3343  000000                     _PORTC	equ	0xF82
  3344                           	global	_RC1REG
  3345  000000                     _RC1REG	equ	0xFAE
  3346                           	global	_SPBRG1
  3347  000000                     _SPBRG1	equ	0xFAF
  3348                           	global	_TRISC
  3349  000000                     _TRISC	equ	0xF94
  3350                           	global	_TX1REG
  3351  000000                     _TX1REG	equ	0xFAD
  3352                           	global	_BRGH1
  3353  000000                     _BRGH1	equ	0x7D62
  3354                           	global	_CREN1
  3355  000000                     _CREN1	equ	0x7D5C
  3356                           	global	_GIE
  3357  000000                     _GIE	equ	0x7F97
  3358                           	global	_INT0IE
  3359  000000                     _INT0IE	equ	0x7F94
  3360                           	global	_INT0IF
  3361  000000                     _INT0IF	equ	0x7F91
  3362                           	global	_INTEDG0
  3363  000000                     _INTEDG0	equ	0x7F8E
  3364                           	global	_PEIE
  3365  000000                     _PEIE	equ	0x7F96
  3366                           	global	_RA5
  3367  000000                     _RA5	equ	0x7C05
  3368                           	global	_RB0
  3369  000000                     _RB0	equ	0x7C08
  3370                           	global	_RC1IE
  3371  000000                     _RC1IE	equ	0x7CED
  3372                           	global	_RC1IF
  3373  000000                     _RC1IF	equ	0x7CF5
  3374                           	global	_SPEN1
  3375  000000                     _SPEN1	equ	0x7D5F
  3376                           	global	_SYNC1
  3377  000000                     _SYNC1	equ	0x7D64
  3378                           	global	_T1CKPS0
  3379  000000                     _T1CKPS0	equ	0x7E6C
  3380                           	global	_T1CKPS1
  3381  000000                     _T1CKPS1	equ	0x7E6D
  3382                           	global	_T3CKPS0
  3383  000000                     _T3CKPS0	equ	0x7D8C
  3384                           	global	_T3CKPS1
  3385  000000                     _T3CKPS1	equ	0x7D8D
  3386                           	global	_TMR1CS0
  3387  000000                     _TMR1CS0	equ	0x7E6E
  3388                           	global	_TMR1CS1
  3389  000000                     _TMR1CS1	equ	0x7E6F
  3390                           	global	_TMR1IE
  3391  000000                     _TMR1IE	equ	0x7CE8
  3392                           	global	_TMR1IF
  3393  000000                     _TMR1IF	equ	0x7CF0
  3394                           	global	_TMR1ON
  3395  000000                     _TMR1ON	equ	0x7E68
  3396                           	global	_TMR3CS0
  3397  000000                     _TMR3CS0	equ	0x7D8E
  3398                           	global	_TMR3CS1
  3399  000000                     _TMR3CS1	equ	0x7D8F
  3400                           	global	_TMR3IE
  3401  000000                     _TMR3IE	equ	0x7D01
  3402                           	global	_TMR3IF
  3403  000000                     _TMR3IF	equ	0x7D09
  3404                           	global	_TMR3ON
  3405  000000                     _TMR3ON	equ	0x7D88
  3406                           	global	_TRISA5
  3407  000000                     _TRISA5	equ	0x7C95
  3408                           	global	_TRISB0
  3409  000000                     _TRISB0	equ	0x7C98
  3410                           	global	_TX1IE
  3411  000000                     _TX1IE	equ	0x7CEC
  3412                           	global	_TX1IF
  3413  000000                     _TX1IF	equ	0x7CF4
  3414                           	global	_TXEN1
  3415  000000                     _TXEN1	equ	0x7D65
  3416  007FFE  00                 	db 0	; dummy byte at the end
  3417                           	psect	intsave_regs,class=BIGRAM,space=1
  3418                           	PSECT	param2,class=BANK2,space=1
  3419                           	GLOBAL	__Lparam2
  3420                           	FNCONF	param2,??,?
  3421                           GLOBAL	___IT
  3422  000000                     ___IT	EQU	257
  3423                           	GLOBAL	__Labsbss0
  3424  000000                     __Labsbss0	EQU	0
  3425                           	GLOBAL	__Habsbss0
  3426  000000                     __Habsbss0	EQU	310
  3427                           	GLOBAL	__Ldata0
  3428  000000                     __Ldata0	EQU	310
  3429                           	GLOBAL	__Hdata0
  3430  000000                     __Hdata0	EQU	311
  3431                           GLOBAL	__Lparam, __Hparam
  3432                           GLOBAL	__Lparam2, __Hparam2
  3433  000000                     __Lparam	EQU	__Lparam2
  3434  000000                     __Hparam	EQU	__Hparam2


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Wed May 29 23:37:08 2013

                                 l1 0712  
                                 l2 06D8  
                                 l3 0672  
                                 l4 06F8  
            __end_of_modbus_receive 04E4  
                               l380 0458  
                               l381 0464  
                               l390 02B8  
                               l382 0474  
                               l391 00EC  
                               l383 04E2  
                               l392 0204  
                               l377 04E2  
                               l385 04D0  
                               l394 01D8  
                               l386 0494  
                               l378 0474  
                               l395 0660  
                               l387 049C  
                               l379 0468  
                               l396 0606  
                               l388 04A4  
                               l397 065A  
                               l389 04A8  
                               l399 0644  
                               l751 097E  
                               l771 0994  
                               l755 089A  
                               l756 087C  
                               _GIE 007F97  
                               _RB0 007C08  
                               _RA5 007C05  
                              F3920 000134  
                              F3921 000136  
                              F3908 000133  
          _write_single_holding_reg 05A6  
         read_holding_regs@data_crc 0204  
                              u1210 03EA  
                              u1211 03E6  
                              u1220 0428  
                              u1221 0424  
                              u1230 0438  
                              u1231 0434  
                              u1240 0448  
                              u1241 0444  
                              u1250 0484  
                              u1251 0480  
                              u1260 0896  
                              u1261 0892  
                              u1270 0204  
                              u1271 0200  
                              u1280 065A  
                              u1281 0656  
                              u1290 06F8  
                              u1291 06F4  
                              _PEIE 007F96  
                              _TMR1 000FCE  
                              _TMR3 000FB2  
                              ___IT 000101  
                              _main 082C  
                              fsr0h 000FEA  
                              fsr1h 000FE2  
                              indf0 000FEF  
                              fsr0l 000FE9  
                              fsr2h 000FDA  
                              indf1 000FE7  
                              fsr1l 000FE1  
                              fsr2l 000FD9  
                      _start_timer3 0996  
                              pclat 000FFA  
                              prodh 000FF4  
                              prodl 000FF3  
                              start 0018  
                       _stop_timer3 09A2  
                   ?_modbus_receive 0200  
                             ?_main 0200  
                             _BRGH1 007D62  
                             _CREN1 007D5C  
                             _RC1IE 007CED  
                             _RC1IF 007CF5  
                             i2l360 02EE  
                             i2l361 031A  
                             i2l362 0364  
                             i2l370 0910  
                             i2l363 03AE  
                             i2l371 0910  
                             i2l356 03D8  
                             i2l364 03BE  
                             i2l372 090C  
                             i2l357 03D8  
                             i2l373 08FA  
                             i2l366 07B0  
                             i2l374 08C2  
                             i2l367 07B0  
                             i2l359 03C2  
                             i2l375 08D6  
                             i2l368 07B0  
                             i2l376 08F6  
                             i2l369 07B0  
                             i2l752 0940  
                             i2l760 07F2  
                             i2l761 05A4  
                             i2l753 0940  
                             i2l770 09AC  
                             i2l762 05A4  
                             i2l763 0592  
                             i2l764 04E8  
                             i2l772 0964  
                             i2l765 0508  
                             i2l773 0964  
                             i2l766 057A  
                             i2l767 055C  
                             i2l768 057E  
                             i2l769 09A0  
                             i2u420 0920  
                             i2u421 091C  
                             i2u430 092E  
                             i2u431 092A  
                             _SPEN1 007D5F  
                             _TX1IE 007CEC  
                             _TX1IF 007CF4  
                             _PORTC 000F82  
                             _TRISC 000F94  
                             _TXEN1 007D65  
                             _SYNC1 007D64  
                      ?_init_timer3 0200  
                   __end_of_pv1_isr 0966  
                   __end_of_rec_isr 03DA  
                             tablat 000FF5  
                             status 000FD8  
                   rec_isr@rec_data 0226  
                      __end_of_main 08A2  
                            ??_main 0200  
                     __activetblptr 000002  
               modbus_crc16@ucCRCHi 0213  
               modbus_crc16@ucCRCLo 0214  
                            _ANSELA 000F38  
                            _ANSELB 000F39  
                            _ANSELC 000F3A  
                            _RC1REG 000FAE  
                            _INT0IE 007F94  
                            _INT0IF 007F91  
                            i2u1200 0782  
                            i2u1201 077E  
                            i2u1300 0528  
                            i2u1140 02D8  
                            i2u1301 0524  
                            i2u1141 02D4  
                            i2u1310 0554  
                            i2u1150 02E6  
                            i2u1311 0550  
                            i2u1151 02E2  
                            i2u1160 0374  
                            i2u1320 0950  
                            i2u1161 0370  
                            i2u1321 094C  
                            i2u1170 0722  
                            i2u1330 095E  
                            i2u1171 071E  
                            i2u1331 095A  
                            i2u1180 0730  
                            i2u1340 08B0  
                            i2u1181 072C  
                            i2u1341 08AC  
                            i2u1190 0744  
                            i2u1350 08BE  
                            i2u1191 0740  
                            i2u1351 08BA  
                            _SPBRG1 000FAF  
                            _TMR1IE 007CE8  
                            _TMR1IF 007CF0  
                            _TMR3IE 007D01  
                            _TMR3IF 007D09  
                            _TMR1ON 007E68  
                            _TMR3ON 007D88  
                            _TX1REG 000FAD  
                            _TRISB0 007C98  
                            _TRISA5 007C95  
                            __Ldata 000136  
                      ?_timer35_isr 0226  
                  __end_of_init_pv1 0996  
                            _my_isr 07B2  
                            _rx_buf 000000  
                            _tx_buf 000100  
                            _tx_isr 0714  
                         ??_pv1_isr 0226  
                         ??_rec_isr 0226  
                      __mediumconst 7DFE  
                            tblptrh 000FF7  
                            tblptrl 000FF6  
                            tblptru 000FF8  
                        __accesstop 0060  
                     ?_modbus_crc16 020F  
        ??_write_single_holding_reg 0201  
              read_holding_regs@num 0206  
                 modbus_crc16@usLen 0211  
                    ??_modbus_crc16 0213  
                      ?_stop_timer3 0227  
                  ??_modbus_receive 0200  
                         l600000230 0448  
                           ?_my_isr 0218  
                           ?_tx_isr 0226  
                           _T1CKPS0 007E6C  
                           _T1CKPS1 007E6D  
                           _T3CKPS0 007D8C  
                           _T3CKPS1 007D8D  
                           _INTEDG0 007F8E  
                           _TMR1CS0 007E6E  
                           _TMR1CS1 007E6F  
                           _TMR3CS0 007D8E  
                           _TMR3CS1 007D8F  
              modbus_crc16@pucFrame 020F  
                        _count_10ms 0000FD  
                         ?_init_pv1 0200  
                           __Hdata0 000137  
                           __Ldata0 000136  
                           __Hparam 0228  
                           __Lparam 0200  
                 __end_of_get_speed 05A6  
                           __ramtop 0600  
                           _pv1_isr 0942  
                           _rec_isr 02BA  
                        _modbus_reg 000035  
                     __Lmediumconst 7DFE  
                        ??_init_pv1 0200  
                           int_func 0008  
                           postdec0 000FED  
                           postdec1 000FE5  
                        _timer3_isr 0912  
                           postinc0 000FEE  
                           postinc1 000FE6  
  __end_of_write_single_holding_reg 0662  
                 _read_holding_regs 0060  
                ?_read_holding_regs 0201  
              __end_of_modbus_crc16 0714  
               ??_read_holding_regs 0201  
       read_holding_regs@start_addr 0202  
write_single_holding_reg@start_addr 0202  
         __end_of_read_holding_regs 02BA  
                    __end_of_my_isr 082C  
                    __end_of_tx_isr 07B2  
                         __Habsbss0 000136  
                read_holding_regs@i 0201  
                         __Labsbss0 000000  
                modbus_crc16@iIndex 0215  
                     ?_start_timer3 0227  
                       ?_timer3_isr 0226  
                          ??_my_isr 0218  
                          ??_tx_isr 0226  
                     ??_init_timer3 0200  
                         __config10 00FFFF  
                         __config11 00FFFF  
         ?_write_single_holding_reg 0201  
                    ??_start_timer3 0227  
                         _get_speed 04E4  
                          ?_pv1_isr 0226  
                       __smallconst 0600  
                          ?_rec_isr 0226  
               __end_of_init_timer3 0980  
                     ??_timer35_isr 0226  
                      _modbus_crc16 0662  
                        ?_get_speed 0226  
                          __Hparam2 0228  
                          __Lparam2 0200  
                      __Lsmallconst 0600  
               __end_of_timer35_isr 0912  
              __end_of_start_timer3 09A2  
                          __config1 00E9FF  
                          __config2 00FFFF  
                          __config3 00FFFF  
                          __config4 00FFFF  
                          __config5 00FFFF  
                          __config6 00FFFF  
                          __config7 00FFFF  
                          __config8 00FFFF  
                          __config9 00FFFF  
                          _aucCRCHi 7DFE  
                          _aucCRCLo 7EFE  
                       _init_timer3 0966  
                          _init_pv1 0980  
                     ??_stop_timer3 0227  
                      ??_timer3_isr 0226  
                          _rx_state 0000FF  
                       ??_get_speed 0226  
                          intlevel2 09AE  
                __end_of_timer3_isr 0942  
                       _timer35_isr 08A2  
               __end_of_stop_timer3 09AE  
                    _modbus_receive 03DA  
         write_single_holding_reg@i 0201  
